ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ToolCmds.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ToolStatusQuery,"ax",%progbits
  20              		.align	2
  21              		.global	ToolStatusQuery
  22              		.thumb
  23              		.thumb_func
  24              		.type	ToolStatusQuery, %function
  25              	ToolStatusQuery:
  26              	.LFB64:
  27              		.file 1 "ToolCmds.c"
   1:ToolCmds.c    **** /* ========================================
   2:ToolCmds.c    ****  *
   3:ToolCmds.c    ****  * Copyright YOUR COMPANY, THE YEAR
   4:ToolCmds.c    ****  * All Rights Reserved
   5:ToolCmds.c    ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:ToolCmds.c    ****  *
   7:ToolCmds.c    ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:ToolCmds.c    ****  * WHICH IS THE PROPERTY OF your company.
   9:ToolCmds.c    ****  *
  10:ToolCmds.c    ****  * ========================================
  11:ToolCmds.c    **** */
  12:ToolCmds.c    **** 
  13:ToolCmds.c    **** #include "ToolCmds.h"
  14:ToolCmds.c    **** #include "project.h"
  15:ToolCmds.c    **** #include "Processes.h"
  16:ToolCmds.c    **** #include "State_Machine.h"
  17:ToolCmds.c    **** #include "U_HW.h"
  18:ToolCmds.c    **** 
  19:ToolCmds.c    **** #include "stdio.h"
  20:ToolCmds.c    **** 
  21:ToolCmds.c    **** extern func_ptr TC_SM;
  22:ToolCmds.c    **** extern uint8 TC_STATE;
  23:ToolCmds.c    **** 
  24:ToolCmds.c    **** // char t_msg[32];
  25:ToolCmds.c    **** 
  26:ToolCmds.c    **** // ToolStatusQuery - returns the status of the tool changer
  27:ToolCmds.c    **** uint16 ToolStatusQuery(void)
  28:ToolCmds.c    **** {
  28              		.loc 1 28 0
  29              		.cfi_startproc
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 2


  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36              	.LVL0:
  29:ToolCmds.c    ****     uint16 status = 0;
  30:ToolCmds.c    ****     if(TC_STATE == TC_STATE_FAULT) status = (1 << TIMEOUT_FAULT_POS);           // in fault state
  37              		.loc 1 30 0
  38 0002 254B     		ldr	r3, .L14
  39 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  40 0006 0B2B     		cmp	r3, #11
  41 0008 01D0     		beq	.L12
  29:ToolCmds.c    ****     uint16 status = 0;
  42              		.loc 1 29 0
  43 000a 0024     		movs	r4, #0
  44 000c 01E0     		b	.L2
  45              	.L12:
  46              		.loc 1 30 0
  47 000e 4FF48044 		mov	r4, #16384
  48              	.L2:
  49              	.LVL1:
  31:ToolCmds.c    ****     if((FAULT_PORT & Pin_ESTOP_MASK) == 0) status |= (1 << ESTOP_STATUS_POS);   // in ESTOP conditi
  50              		.loc 1 31 0
  51 0012 224B     		ldr	r3, .L14+4
  52 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  53 0016 13F0200F 		tst	r3, #32
  54 001a 01D1     		bne	.L3
  55              		.loc 1 31 0 is_stmt 0 discriminator 1
  56 001c 44F40054 		orr	r4, r4, #8192
  57              	.LVL2:
  58              	.L3:
  32:ToolCmds.c    ****     if((FAULT_PORT & Pin_V_Mon2_MASK) == 0) status |= (1 << V24_STATUS_POS);    // 24V under voltag
  59              		.loc 1 32 0 is_stmt 1
  60 0020 1E4B     		ldr	r3, .L14+4
  61 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62 0024 13F0040F 		tst	r3, #4
  63 0028 01D1     		bne	.L4
  64              		.loc 1 32 0 is_stmt 0 discriminator 1
  65 002a 44F48054 		orr	r4, r4, #4096
  66              	.LVL3:
  67              	.L4:
  33:ToolCmds.c    ****     if((FAULT_PORT & Pin_AC_Mon_MASK) != 0) status |= (1 << VAC_STATUS_POS);    // No AC fault
  68              		.loc 1 33 0 is_stmt 1
  69 002e 1B4B     		ldr	r3, .L14+4
  70 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  71 0032 13F0080F 		tst	r3, #8
  72 0036 01D0     		beq	.L5
  73              		.loc 1 33 0 is_stmt 0 discriminator 1
  74 0038 44F40064 		orr	r4, r4, #2048
  75              	.LVL4:
  76              	.L5:
  34:ToolCmds.c    ****     if((SENSE_PORT & Pin_Tool_Unclamped_MASK) == 0) status |= (1 << UNCLAMP_STATUS_POS);    // tool
  77              		.loc 1 34 0 is_stmt 1
  78 003c 184B     		ldr	r3, .L14+8
  79 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 3


  80 0040 13F0020F 		tst	r3, #2
  81 0044 01D1     		bne	.L6
  82              		.loc 1 34 0 is_stmt 0 discriminator 1
  83 0046 44F48064 		orr	r4, r4, #1024
  84              	.LVL5:
  85              	.L6:
  35:ToolCmds.c    ****     if((SENSE_PORT & Pin_Tool_Clamped_MASK) == 0) status |= (1 << CLAMP_STATUS_POS);        // tool
  86              		.loc 1 35 0 is_stmt 1
  87 004a 154B     		ldr	r3, .L14+8
  88 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  89 004e 13F0080F 		tst	r3, #8
  90 0052 01D1     		bne	.L7
  91              		.loc 1 35 0 is_stmt 0 discriminator 1
  92 0054 44F40074 		orr	r4, r4, #512
  93              	.LVL6:
  94              	.L7:
  36:ToolCmds.c    ****     if((SENSE_PORT & Pin_Tool_Arm_Out_MASK) == 0) status |= (1 << ARM_OUT_STATUS_POS);      // tool
  95              		.loc 1 36 0 is_stmt 1
  96 0058 114B     		ldr	r3, .L14+8
  97 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  98 005c 13F0200F 		tst	r3, #32
  99 0060 01D1     		bne	.L8
 100              		.loc 1 36 0 is_stmt 0 discriminator 1
 101 0062 44F48074 		orr	r4, r4, #256
 102              	.LVL7:
 103              	.L8:
  37:ToolCmds.c    ****     if((SENSE_PORT & Pin_Tool_Arm_In_MASK) == 0) status |= (1 << ARM_IN_STATUS_POS);        // tool
 104              		.loc 1 37 0 is_stmt 1
 105 0066 0E4B     		ldr	r3, .L14+8
 106 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 107 006a 13F0800F 		tst	r3, #128
 108 006e 01D1     		bne	.L9
 109              		.loc 1 37 0 is_stmt 0 discriminator 1
 110 0070 44F08004 		orr	r4, r4, #128
 111              	.LVL8:
 112              	.L9:
  38:ToolCmds.c    ****     if(((SENSE_PORT & Pin_Tool_1_MASK) == 0) || ((SENSE_PORT & Pin_Tool_Count_MASK) == 0)) status |
 113              		.loc 1 38 0 is_stmt 1
 114 0074 0A4B     		ldr	r3, .L14+8
 115 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 116 0078 13F0010F 		tst	r3, #1
 117 007c 04D0     		beq	.L10
 118              		.loc 1 38 0 is_stmt 0 discriminator 2
 119 007e 084B     		ldr	r3, .L14+8
 120 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 121 0082 13F0040F 		tst	r3, #4
 122 0086 01D1     		bne	.L11
 123              	.L10:
 124              		.loc 1 38 0 discriminator 3
 125 0088 44F04004 		orr	r4, r4, #64
 126              	.LVL9:
 127              	.L11:
  39:ToolCmds.c    ****     status |= ((uint16)(Get_Current_Tool()) & 0x3f);
 128              		.loc 1 39 0 is_stmt 1
 129 008c FFF7FEFF 		bl	Get_Current_Tool
 130              	.LVL10:
 131 0090 00F03F00 		and	r0, r0, #63
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 4


 132              	.LVL11:
  40:ToolCmds.c    ****     return status;
  41:ToolCmds.c    **** }
 133              		.loc 1 41 0
 134 0094 2043     		orrs	r0, r0, r4
 135              	.LVL12:
 136 0096 10BD     		pop	{r4, pc}
 137              	.L15:
 138              		.align	2
 139              	.L14:
 140 0098 00000000 		.word	TC_STATE
 141 009c 11510040 		.word	1073762577
 142 00a0 01510040 		.word	1073762561
 143              		.cfi_endproc
 144              	.LFE64:
 145              		.size	ToolStatusQuery, .-ToolStatusQuery
 146              		.section	.text.Arm_Cmd,"ax",%progbits
 147              		.align	2
 148              		.global	Arm_Cmd
 149              		.thumb
 150              		.thumb_func
 151              		.type	Arm_Cmd, %function
 152              	Arm_Cmd:
 153              	.LFB65:
  42:ToolCmds.c    **** 
  43:ToolCmds.c    **** // move Arm Command - 0 = no motion, 1 = back, 2 = out
  44:ToolCmds.c    **** void Arm_Cmd(uint8 arg)
  45:ToolCmds.c    **** {
 154              		.loc 1 45 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              	.LVL13:
 159 0000 10B5     		push	{r4, lr}
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 4, -8
 162              		.cfi_offset 14, -4
 163 0002 0446     		mov	r4, r0
  46:ToolCmds.c    ****     // make sure not at fault
  47:ToolCmds.c    ****     if(In_Fault() == 1)
 164              		.loc 1 47 0
 165 0004 FFF7FEFF 		bl	In_Fault
 166              	.LVL14:
 167 0008 0128     		cmp	r0, #1
 168 000a 03D1     		bne	.L17
  48:ToolCmds.c    ****     {
  49:ToolCmds.c    ****         TC_SM = &TC_Fault;
 169              		.loc 1 49 0
 170 000c 214A     		ldr	r2, .L23
 171 000e 224B     		ldr	r3, .L23+4
 172 0010 1A60     		str	r2, [r3]
 173 0012 10BD     		pop	{r4, pc}
 174              	.L17:
  50:ToolCmds.c    ****     }
  51:ToolCmds.c    ****     else if(((SENSE_PORT & Pin_Tool_Arm_Out_MASK) != 0) && ((SENSE_PORT & Pin_Tool_Arm_In_MASK) != 
 175              		.loc 1 51 0
 176 0014 214B     		ldr	r3, .L23+8
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 5


 177 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 178 0018 13F0200F 		tst	r3, #32
 179 001c 08D0     		beq	.L19
 180              		.loc 1 51 0 is_stmt 0 discriminator 1
 181 001e 1F4B     		ldr	r3, .L23+8
 182 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 183 0022 13F0800F 		tst	r3, #128
 184 0026 03D0     		beq	.L19
  52:ToolCmds.c    ****     {   
  53:ToolCmds.c    ****         TC_SM = &TC_Fault;  // if not on a sensor then fault
 185              		.loc 1 53 0 is_stmt 1
 186 0028 1A4A     		ldr	r2, .L23
 187 002a 1B4B     		ldr	r3, .L23+4
 188 002c 1A60     		str	r2, [r3]
 189 002e 10BD     		pop	{r4, pc}
 190              	.L19:
  54:ToolCmds.c    ****     }
  55:ToolCmds.c    ****     else
  56:ToolCmds.c    ****     {
  57:ToolCmds.c    ****         switch(arg)
 191              		.loc 1 57 0
 192 0030 012C     		cmp	r4, #1
 193 0032 02D0     		beq	.L20
 194 0034 022C     		cmp	r4, #2
 195 0036 16D0     		beq	.L21
 196 0038 10BD     		pop	{r4, pc}
 197              	.L20:
  58:ToolCmds.c    ****         {
  59:ToolCmds.c    ****             case ARM_IN :
  60:ToolCmds.c    ****                     if((SENSE_PORT & Pin_Tool_Arm_In_MASK) == 0) break;    // already there, don't 
 198              		.loc 1 60 0
 199 003a 184B     		ldr	r3, .L23+8
 200 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 201 003e 13F0800F 		tst	r3, #128
 202 0042 25D0     		beq	.L16
  61:ToolCmds.c    ****                     else
  62:ToolCmds.c    ****                     {
  63:ToolCmds.c    ****                         // PutStr("Arm In\n");
  64:ToolCmds.c    ****                         TC_SM = &TC_Arm_Move_In_Start;      // change the state to Arm Moving In
 203              		.loc 1 64 0
 204 0044 164A     		ldr	r2, .L23+12
 205 0046 144B     		ldr	r3, .L23+4
 206 0048 1A60     		str	r2, [r3]
  65:ToolCmds.c    ****                         TC_Set_Delay(ARM_START_DELAY);      // delay to allow for moving off the se
 207              		.loc 1 65 0
 208 004a 4FF4C870 		mov	r0, #400
 209 004e FFF7FEFF 		bl	TC_Set_Delay
 210              	.LVL15:
  66:ToolCmds.c    ****                         TRIAC_PORT &= ~(Pin_Tool_Arm_FWD_MASK); // make sure FWD is off
 211              		.loc 1 66 0
 212 0052 144B     		ldr	r3, .L23+16
 213 0054 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 214 0056 02F0BF02 		and	r2, r2, #191
 215 005a 1A70     		strb	r2, [r3]
  67:ToolCmds.c    ****                         TRIAC_PORT |= (Pin_Tool_Arm_REV_MASK | Pin_Tool_Arm_Brake_MASK); // turn th
 216              		.loc 1 67 0
 217 005c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 6


 218 005e 42F0A002 		orr	r2, r2, #160
 219 0062 1A70     		strb	r2, [r3]
  68:ToolCmds.c    ****                     }
  69:ToolCmds.c    ****                     break;
 220              		.loc 1 69 0
 221 0064 10BD     		pop	{r4, pc}
 222              	.L21:
  70:ToolCmds.c    ****             case ARM_OUT :
  71:ToolCmds.c    ****                     if((SENSE_PORT & Pin_Tool_Arm_Out_MASK) == 0) break;    // already there, don't
 223              		.loc 1 71 0
 224 0066 0D4B     		ldr	r3, .L23+8
 225 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 226 006a 13F0200F 		tst	r3, #32
 227 006e 0FD0     		beq	.L16
  72:ToolCmds.c    ****                     else
  73:ToolCmds.c    ****                     {
  74:ToolCmds.c    ****                         // PutStr("Arm Out\n");
  75:ToolCmds.c    ****                         TC_SM = &TC_Arm_Move_Out_Start;  // change the state to Arm Moving Out
 228              		.loc 1 75 0
 229 0070 0D4A     		ldr	r2, .L23+20
 230 0072 094B     		ldr	r3, .L23+4
 231 0074 1A60     		str	r2, [r3]
  76:ToolCmds.c    ****                         TC_Set_Delay(ARM_START_DELAY);     // 1.5 sec
 232              		.loc 1 76 0
 233 0076 4FF4C870 		mov	r0, #400
 234 007a FFF7FEFF 		bl	TC_Set_Delay
 235              	.LVL16:
  77:ToolCmds.c    ****                         TRIAC_PORT &= ~(Pin_Tool_Arm_REV_MASK); // make sure REV is off
 236              		.loc 1 77 0
 237 007e 094B     		ldr	r3, .L23+16
 238 0080 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 239 0082 02F0DF02 		and	r2, r2, #223
 240 0086 1A70     		strb	r2, [r3]
  78:ToolCmds.c    ****                         TRIAC_PORT |= (Pin_Tool_Arm_FWD_MASK | Pin_Tool_Arm_Brake_MASK); // turn th
 241              		.loc 1 78 0
 242 0088 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 243 008a 42F0C002 		orr	r2, r2, #192
 244 008e 1A70     		strb	r2, [r3]
 245              	.L16:
 246 0090 10BD     		pop	{r4, pc}
 247              	.L24:
 248 0092 00BF     		.align	2
 249              	.L23:
 250 0094 00000000 		.word	TC_Fault
 251 0098 00000000 		.word	TC_SM
 252 009c 01510040 		.word	1073762561
 253 00a0 00000000 		.word	TC_Arm_Move_In_Start
 254 00a4 30510040 		.word	1073762608
 255 00a8 00000000 		.word	TC_Arm_Move_Out_Start
 256              		.cfi_endproc
 257              	.LFE65:
 258              		.size	Arm_Cmd, .-Arm_Cmd
 259              		.section	.text.Carousel_Cmd,"ax",%progbits
 260              		.align	2
 261              		.global	Carousel_Cmd
 262              		.thumb
 263              		.thumb_func
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 7


 264              		.type	Carousel_Cmd, %function
 265              	Carousel_Cmd:
 266              	.LFB66:
  79:ToolCmds.c    ****                      }
  80:ToolCmds.c    ****                     break;
  81:ToolCmds.c    ****             default :
  82:ToolCmds.c    ****                     // do nothing!
  83:ToolCmds.c    ****                     break;
  84:ToolCmds.c    ****         }
  85:ToolCmds.c    ****     }
  86:ToolCmds.c    **** }
  87:ToolCmds.c    **** 
  88:ToolCmds.c    **** void Carousel_Cmd(uint8 arg)
  89:ToolCmds.c    **** {
 267              		.loc 1 89 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              	.LVL17:
 272 0000 10B5     		push	{r4, lr}
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 4, -8
 275              		.cfi_offset 14, -4
 276 0002 0446     		mov	r4, r0
  90:ToolCmds.c    ****     // calculate the shortest path to the desired tool
  91:ToolCmds.c    ****     if(In_Fault() == 0)   // only do this if not in a fault state
 277              		.loc 1 91 0
 278 0004 FFF7FEFF 		bl	In_Fault
 279              	.LVL18:
 280 0008 0028     		cmp	r0, #0
 281 000a 41D1     		bne	.L25
  92:ToolCmds.c    ****     {
  93:ToolCmds.c    ****         // make sure we are currently on a tool!
  94:ToolCmds.c    ****         if((SENSE_PORT & Pin_Tool_Count_MASK) != 0)
 282              		.loc 1 94 0
 283 000c 214B     		ldr	r3, .L33
 284 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 285 0010 13F0040F 		tst	r3, #4
 286 0014 03D0     		beq	.L27
  95:ToolCmds.c    ****         { 
  96:ToolCmds.c    ****             // PutStr("Not on tool!\n");
  97:ToolCmds.c    ****             TC_SM = & TC_Fault;
 287              		.loc 1 97 0
 288 0016 204A     		ldr	r2, .L33+4
 289 0018 204B     		ldr	r3, .L33+8
 290 001a 1A60     		str	r2, [r3]
 291 001c 10BD     		pop	{r4, pc}
 292              	.L27:
  98:ToolCmds.c    ****         }
  99:ToolCmds.c    ****         else
 100:ToolCmds.c    ****         {
 101:ToolCmds.c    ****             // PutStr("Car 1\n");
 102:ToolCmds.c    ****             if((arg > 0) && (arg <= NUMBER_OF_TOOLS))
 293              		.loc 1 102 0
 294 001e 631E     		subs	r3, r4, #1
 295 0020 DBB2     		uxtb	r3, r3
 296 0022 072B     		cmp	r3, #7
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 8


 297 0024 34D8     		bhi	.L25
 298              	.LBB2:
 103:ToolCmds.c    ****             {
 104:ToolCmds.c    ****                 // PutStr("Car 2\n");
 105:ToolCmds.c    ****                 int8 tool_distance;
 106:ToolCmds.c    ****             
 107:ToolCmds.c    ****                 tool_distance = arg - Get_Current_Tool();
 299              		.loc 1 107 0
 300 0026 FFF7FEFF 		bl	Get_Current_Tool
 301              	.LVL19:
 302 002a 201A     		subs	r0, r4, r0
 303 002c C0B2     		uxtb	r0, r0
 304 002e 43B2     		sxtb	r3, r0
 305              	.LVL20:
 108:ToolCmds.c    ****                 if(tool_distance > HALF_NUMBER_OF_TOOLS)
 306              		.loc 1 108 0
 307 0030 042B     		cmp	r3, #4
 308 0032 02DD     		ble	.L28
 109:ToolCmds.c    ****                 {
 110:ToolCmds.c    ****                     tool_distance -= NUMBER_OF_TOOLS;
 309              		.loc 1 110 0
 310 0034 0838     		subs	r0, r0, #8
 311 0036 43B2     		sxtb	r3, r0
 312              	.LVL21:
 313 0038 04E0     		b	.L29
 314              	.L28:
 111:ToolCmds.c    ****                 }
 112:ToolCmds.c    ****                 else if(tool_distance < -(HALF_NUMBER_OF_TOOLS))
 315              		.loc 1 112 0
 316 003a 13F1040F 		cmn	r3, #4
 317 003e 01DA     		bge	.L29
 113:ToolCmds.c    ****                 {
 114:ToolCmds.c    ****                     tool_distance += NUMBER_OF_TOOLS;
 318              		.loc 1 114 0
 319 0040 0830     		adds	r0, r0, #8
 320 0042 43B2     		sxtb	r3, r0
 321              	.LVL22:
 322              	.L29:
 115:ToolCmds.c    ****                 }
 116:ToolCmds.c    ****                 // PutStr("Car 2x\n");
 117:ToolCmds.c    ****                 if(tool_distance != 0)  // if it is not already on the correct tool
 323              		.loc 1 117 0
 324 0044 23B3     		cbz	r3, .L25
 118:ToolCmds.c    ****                 {
 119:ToolCmds.c    ****                     // sprintf(t_msg, "Car 3 distance = %d\n", tool_distance);
 120:ToolCmds.c    ****                     // PutStr(t_msg);
 121:ToolCmds.c    ****                     if(tool_distance > 0)   // if distance is positive
 325              		.loc 1 121 0
 326 0046 002B     		cmp	r3, #0
 327 0048 0DDD     		ble	.L30
 122:ToolCmds.c    ****                     {
 123:ToolCmds.c    ****                         TRIAC_PORT &= ~(Pin_Car_REV_MASK);  // REV is off
 328              		.loc 1 123 0
 329 004a 154B     		ldr	r3, .L33+12
 330              	.LVL23:
 331 004c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 332 004e 02F0F702 		and	r2, r2, #247
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 9


 333 0052 1A70     		strb	r2, [r3]
 124:ToolCmds.c    ****                         TRIAC_PORT |= Pin_Car_FWD_MASK;     // FWD is on
 334              		.loc 1 124 0
 335 0054 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 336 0056 42F01002 		orr	r2, r2, #16
 337 005a 1A70     		strb	r2, [r3]
 125:ToolCmds.c    ****                         Set_Target_Tool(arg, 1);
 338              		.loc 1 125 0
 339 005c 0121     		movs	r1, #1
 340 005e 2046     		mov	r0, r4
 341 0060 FFF7FEFF 		bl	Set_Target_Tool
 342              	.LVL24:
 343 0064 0DE0     		b	.L31
 344              	.LVL25:
 345              	.L30:
 126:ToolCmds.c    ****                     }
 127:ToolCmds.c    ****                     else    // if distance is negative
 128:ToolCmds.c    ****                     {
 129:ToolCmds.c    ****                         TRIAC_PORT &= ~(Pin_Car_FWD_MASK);  // FWD is off
 346              		.loc 1 129 0
 347 0066 0E4B     		ldr	r3, .L33+12
 348              	.LVL26:
 349 0068 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 350 006a 02F0EF02 		and	r2, r2, #239
 351 006e 1A70     		strb	r2, [r3]
 130:ToolCmds.c    ****                         TRIAC_PORT |= Pin_Car_REV_MASK;     // REV is on
 352              		.loc 1 130 0
 353 0070 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 354 0072 42F00802 		orr	r2, r2, #8
 355 0076 1A70     		strb	r2, [r3]
 131:ToolCmds.c    ****                         Set_Target_Tool(arg, -1);
 356              		.loc 1 131 0
 357 0078 4FF0FF31 		mov	r1, #-1
 358 007c 2046     		mov	r0, r4
 359 007e FFF7FEFF 		bl	Set_Target_Tool
 360              	.LVL27:
 361              	.L31:
 132:ToolCmds.c    ****                     }
 133:ToolCmds.c    ****                     // PutStr("Car 4\n");
 134:ToolCmds.c    ****                     TC_SM = &TC_Carousel_Moving_Start;      // change the state to start moving
 362              		.loc 1 134 0
 363 0082 084A     		ldr	r2, .L33+16
 364 0084 054B     		ldr	r3, .L33+8
 365 0086 1A60     		str	r2, [r3]
 135:ToolCmds.c    ****                     TC_Set_Delay(CAROUSEL_START_DELAY);
 366              		.loc 1 135 0
 367 0088 4FF4FA70 		mov	r0, #500
 368 008c FFF7FEFF 		bl	TC_Set_Delay
 369              	.LVL28:
 370              	.L25:
 371 0090 10BD     		pop	{r4, pc}
 372              	.L34:
 373 0092 00BF     		.align	2
 374              	.L33:
 375 0094 01510040 		.word	1073762561
 376 0098 00000000 		.word	TC_Fault
 377 009c 00000000 		.word	TC_SM
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 10


 378 00a0 30510040 		.word	1073762608
 379 00a4 00000000 		.word	TC_Carousel_Moving_Start
 380              	.LBE2:
 381              		.cfi_endproc
 382              	.LFE66:
 383              		.size	Carousel_Cmd, .-Carousel_Cmd
 384              		.section	.text.Clamp_Cmd,"ax",%progbits
 385              		.align	2
 386              		.global	Clamp_Cmd
 387              		.thumb
 388              		.thumb_func
 389              		.type	Clamp_Cmd, %function
 390              	Clamp_Cmd:
 391              	.LFB67:
 136:ToolCmds.c    ****                 }
 137:ToolCmds.c    ****             }
 138:ToolCmds.c    ****         }
 139:ToolCmds.c    ****     }
 140:ToolCmds.c    **** }
 141:ToolCmds.c    **** 
 142:ToolCmds.c    **** void Clamp_Cmd(uint8 arg)
 143:ToolCmds.c    **** {
 392              		.loc 1 143 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              	.LVL29:
 397 0000 08B5     		push	{r3, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 3, -8
 400              		.cfi_offset 14, -4
 144:ToolCmds.c    ****     switch(arg)
 401              		.loc 1 144 0
 402 0002 0138     		subs	r0, r0, #1
 403              	.LVL30:
 404 0004 0328     		cmp	r0, #3
 405 0006 28D8     		bhi	.L35
 406 0008 DFE800F0 		tbb	[pc, r0]
 407              	.L38:
 408 000c 02       		.byte	(.L37-.L38)/2
 409 000d 0F       		.byte	(.L39-.L38)/2
 410 000e 1C       		.byte	(.L40-.L38)/2
 411 000f 22       		.byte	(.L41-.L38)/2
 412              		.p2align 1
 413              	.L37:
 145:ToolCmds.c    ****     {
 146:ToolCmds.c    ****         case AIR_BLAST_ONLY :
 147:ToolCmds.c    ****             TC_Set_Delay(AIR_BLAST_DELAY);
 414              		.loc 1 147 0
 415 0010 4FF49660 		mov	r0, #1200
 416 0014 FFF7FEFF 		bl	TC_Set_Delay
 417              	.LVL31:
 148:ToolCmds.c    ****             TC_SM = &TC_Clamp_AirBlast; // change state to Air Blast
 418              		.loc 1 148 0
 419 0018 104A     		ldr	r2, .L43
 420 001a 114B     		ldr	r3, .L43+4
 421 001c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 11


 149:ToolCmds.c    ****             TRIAC_PORT |= Pin_Tool_Air_MASK;   // turn on the Air
 422              		.loc 1 149 0
 423 001e 114A     		ldr	r2, .L43+8
 424 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 425 0022 43F00203 		orr	r3, r3, #2
 426 0026 1370     		strb	r3, [r2]
 150:ToolCmds.c    ****             break;
 427              		.loc 1 150 0
 428 0028 08BD     		pop	{r3, pc}
 429              	.L39:
 151:ToolCmds.c    ****         case AIR_BLAST_TOOL_UNCLAMP :
 152:ToolCmds.c    ****             TC_Set_Delay(AIR_BLAST_DELAY);
 430              		.loc 1 152 0
 431 002a 4FF49660 		mov	r0, #1200
 432 002e FFF7FEFF 		bl	TC_Set_Delay
 433              	.LVL32:
 153:ToolCmds.c    ****             TC_SM = &TC_Clamp_AirBlast;
 434              		.loc 1 153 0
 435 0032 0A4A     		ldr	r2, .L43
 436 0034 0A4B     		ldr	r3, .L43+4
 437 0036 1A60     		str	r2, [r3]
 154:ToolCmds.c    ****             TRIAC_PORT |= (Pin_Tool_Air_MASK | Pin_Tool_Clamp_MASK);   // turn on the Air and relea
 438              		.loc 1 154 0
 439 0038 0A4A     		ldr	r2, .L43+8
 440 003a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 441 003c 43F00603 		orr	r3, r3, #6
 442 0040 1370     		strb	r3, [r2]
 155:ToolCmds.c    ****             
 156:ToolCmds.c    ****             break;
 443              		.loc 1 156 0
 444 0042 08BD     		pop	{r3, pc}
 445              	.L40:
 157:ToolCmds.c    ****         case TOOL_UNCLAMP :
 158:ToolCmds.c    ****             TRIAC_PORT |= Pin_Tool_Clamp_MASK;   // just release the clamp
 446              		.loc 1 158 0
 447 0044 074A     		ldr	r2, .L43+8
 448 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 449 0048 43F00403 		orr	r3, r3, #4
 450 004c 1370     		strb	r3, [r2]
 159:ToolCmds.c    ****             break;
 451              		.loc 1 159 0
 452 004e 08BD     		pop	{r3, pc}
 453              	.L41:
 160:ToolCmds.c    ****         case TOOL_CLAMP :
 161:ToolCmds.c    ****             TRIAC_PORT &= ~(Pin_Tool_Clamp_MASK);    // re-engage the clamp
 454              		.loc 1 161 0
 455 0050 044A     		ldr	r2, .L43+8
 456 0052 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 457 0054 03F0FB03 		and	r3, r3, #251
 458 0058 1370     		strb	r3, [r2]
 459              	.L35:
 460 005a 08BD     		pop	{r3, pc}
 461              	.L44:
 462              		.align	2
 463              	.L43:
 464 005c 00000000 		.word	TC_Clamp_AirBlast
 465 0060 00000000 		.word	TC_SM
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 12


 466 0064 30510040 		.word	1073762608
 467              		.cfi_endproc
 468              	.LFE67:
 469              		.size	Clamp_Cmd, .-Clamp_Cmd
 470              		.section	.text.Home_Cmd,"ax",%progbits
 471              		.align	2
 472              		.global	Home_Cmd
 473              		.thumb
 474              		.thumb_func
 475              		.type	Home_Cmd, %function
 476              	Home_Cmd:
 477              	.LFB68:
 162:ToolCmds.c    ****             break;
 163:ToolCmds.c    ****         default :
 164:ToolCmds.c    ****             break;
 165:ToolCmds.c    ****     }
 166:ToolCmds.c    **** }
 167:ToolCmds.c    **** 
 168:ToolCmds.c    **** void Home_Cmd(uint8 arg)
 169:ToolCmds.c    **** {
 478              		.loc 1 169 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 482              	.LVL33:
 483 0000 08B5     		push	{r3, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 3, -8
 486              		.cfi_offset 14, -4
 170:ToolCmds.c    ****     UNUSED_ARG(arg);
 171:ToolCmds.c    ****     // This command needs to do two things, retract the Arm and rotate the Carousel to tool positio
 172:ToolCmds.c    **** 
 173:ToolCmds.c    ****     if(In_Fault() == 0) // only try this if there is no fault
 487              		.loc 1 173 0
 488 0002 FFF7FEFF 		bl	In_Fault
 489              	.LVL34:
 490 0006 0028     		cmp	r0, #0
 491 0008 31D1     		bne	.L45
 174:ToolCmds.c    ****     {
 175:ToolCmds.c    ****         // PutStr("Home 1\n");
 176:ToolCmds.c    ****         if((SENSE_PORT & Pin_Tool_Arm_In_MASK) == 0) // check for ARM at IN - already retracted
 492              		.loc 1 176 0
 493 000a 194B     		ldr	r3, .L50
 494 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 495 000e 13F0800F 		tst	r3, #128
 496 0012 1CD1     		bne	.L47
 177:ToolCmds.c    ****         {
 178:ToolCmds.c    ****             // PutStr("Home 2\n");
 179:ToolCmds.c    ****             if((SENSE_PORT & (Pin_Tool_Count_MASK | Pin_Tool_1_MASK)) == 0) // check for already at
 497              		.loc 1 179 0
 498 0014 164B     		ldr	r3, .L50
 499 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 500 0018 13F0050F 		tst	r3, #5
 501 001c 06D1     		bne	.L48
 180:ToolCmds.c    ****             {
 181:ToolCmds.c    ****                 // PutStr("Home 3\n");
 182:ToolCmds.c    ****                 Set_Current_Tool(1);
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 13


 502              		.loc 1 182 0
 503 001e 0120     		movs	r0, #1
 504 0020 FFF7FEFF 		bl	Set_Current_Tool
 505              	.LVL35:
 183:ToolCmds.c    ****                 TC_SM = &TC_IDLE;
 506              		.loc 1 183 0
 507 0024 134A     		ldr	r2, .L50+4
 508 0026 144B     		ldr	r3, .L50+8
 509 0028 1A60     		str	r2, [r3]
 510 002a 08BD     		pop	{r3, pc}
 511              	.L48:
 184:ToolCmds.c    ****             }
 185:ToolCmds.c    ****             else
 186:ToolCmds.c    ****             {
 187:ToolCmds.c    ****                 // PutStr("Home 4\n");
 188:ToolCmds.c    ****                 TC_Set_Delay(CAROUSEL_HOME_DELAY);  
 512              		.loc 1 188 0
 513 002c 42F21070 		movw	r0, #10000
 514 0030 FFF7FEFF 		bl	TC_Set_Delay
 515              	.LVL36:
 189:ToolCmds.c    ****                 TC_SM = &TC_Home_Carousel;          // Set the state to Home Carousel
 516              		.loc 1 189 0
 517 0034 114A     		ldr	r2, .L50+12
 518 0036 104B     		ldr	r3, .L50+8
 519 0038 1A60     		str	r2, [r3]
 190:ToolCmds.c    ****                 TRIAC_PORT &= ~(Pin_Car_REV_MASK);  // make sure that REV is off!
 520              		.loc 1 190 0
 521 003a 114B     		ldr	r3, .L50+16
 522 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 523 003e 02F0F702 		and	r2, r2, #247
 524 0042 1A70     		strb	r2, [r3]
 191:ToolCmds.c    ****                 TRIAC_PORT |= Pin_Car_FWD_MASK;     // start moving the carousel forward
 525              		.loc 1 191 0
 526 0044 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 527 0046 42F01002 		orr	r2, r2, #16
 528 004a 1A70     		strb	r2, [r3]
 529 004c 08BD     		pop	{r3, pc}
 530              	.L47:
 192:ToolCmds.c    ****             }
 193:ToolCmds.c    ****         }
 194:ToolCmds.c    ****         else
 195:ToolCmds.c    ****         {
 196:ToolCmds.c    ****             // start the arm move
 197:ToolCmds.c    ****             TC_Set_Delay(ARM_MOVE_TIME);
 531              		.loc 1 197 0
 532 004e 40F6B830 		movw	r0, #3000
 533 0052 FFF7FEFF 		bl	TC_Set_Delay
 534              	.LVL37:
 198:ToolCmds.c    ****             TC_SM = &TC_Home_Arm;
 535              		.loc 1 198 0
 536 0056 0B4A     		ldr	r2, .L50+20
 537 0058 074B     		ldr	r3, .L50+8
 538 005a 1A60     		str	r2, [r3]
 199:ToolCmds.c    ****             TRIAC_PORT &= ~(Pin_Tool_Arm_FWD_MASK);    // make sure that out is off!
 539              		.loc 1 199 0
 540 005c 084B     		ldr	r3, .L50+16
 541 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 14


 542 0060 02F0BF02 		and	r2, r2, #191
 543 0064 1A70     		strb	r2, [r3]
 200:ToolCmds.c    ****             TRIAC_PORT |= (Pin_Tool_Arm_REV_MASK | Pin_Tool_Arm_Brake_MASK); // release the brake a
 544              		.loc 1 200 0
 545 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 546 0068 42F0A002 		orr	r2, r2, #160
 547 006c 1A70     		strb	r2, [r3]
 548              	.L45:
 549 006e 08BD     		pop	{r3, pc}
 550              	.L51:
 551              		.align	2
 552              	.L50:
 553 0070 01510040 		.word	1073762561
 554 0074 00000000 		.word	TC_IDLE
 555 0078 00000000 		.word	TC_SM
 556 007c 00000000 		.word	TC_Home_Carousel
 557 0080 30510040 		.word	1073762608
 558 0084 00000000 		.word	TC_Home_Arm
 559              		.cfi_endproc
 560              	.LFE68:
 561              		.size	Home_Cmd, .-Home_Cmd
 562              		.text
 563              	.Letext0:
 564              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 565              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 566              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 567              		.file 5 "State_Machine.h"
 568              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 569              		.file 7 "Processes.h"
 570              		.section	.debug_info,"",%progbits
 571              	.Ldebug_info0:
 572 0000 16030000 		.4byte	0x316
 573 0004 0400     		.2byte	0x4
 574 0006 00000000 		.4byte	.Ldebug_abbrev0
 575 000a 04       		.byte	0x4
 576 000b 01       		.uleb128 0x1
 577 000c 97000000 		.4byte	.LASF35
 578 0010 0C       		.byte	0xc
 579 0011 7E000000 		.4byte	.LASF36
 580 0015 0D000000 		.4byte	.LASF37
 581 0019 00000000 		.4byte	.Ldebug_ranges0+0
 582 001d 00000000 		.4byte	0
 583 0021 00000000 		.4byte	.Ldebug_line0
 584 0025 02       		.uleb128 0x2
 585 0026 01       		.byte	0x1
 586 0027 06       		.byte	0x6
 587 0028 55020000 		.4byte	.LASF0
 588 002c 02       		.uleb128 0x2
 589 002d 01       		.byte	0x1
 590 002e 08       		.byte	0x8
 591 002f 89000000 		.4byte	.LASF1
 592 0033 02       		.uleb128 0x2
 593 0034 02       		.byte	0x2
 594 0035 05       		.byte	0x5
 595 0036 01020000 		.4byte	.LASF2
 596 003a 02       		.uleb128 0x2
 597 003b 02       		.byte	0x2
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 15


 598 003c 07       		.byte	0x7
 599 003d 46010000 		.4byte	.LASF3
 600 0041 03       		.uleb128 0x3
 601 0042 4D000000 		.4byte	.LASF9
 602 0046 02       		.byte	0x2
 603 0047 3F       		.byte	0x3f
 604 0048 4C000000 		.4byte	0x4c
 605 004c 02       		.uleb128 0x2
 606 004d 04       		.byte	0x4
 607 004e 05       		.byte	0x5
 608 004f 40020000 		.4byte	.LASF4
 609 0053 02       		.uleb128 0x2
 610 0054 04       		.byte	0x4
 611 0055 07       		.byte	0x7
 612 0056 34010000 		.4byte	.LASF5
 613 005a 02       		.uleb128 0x2
 614 005b 08       		.byte	0x8
 615 005c 05       		.byte	0x5
 616 005d EE010000 		.4byte	.LASF6
 617 0061 02       		.uleb128 0x2
 618 0062 08       		.byte	0x8
 619 0063 07       		.byte	0x7
 620 0064 C6010000 		.4byte	.LASF7
 621 0068 04       		.uleb128 0x4
 622 0069 04       		.byte	0x4
 623 006a 05       		.byte	0x5
 624 006b 696E7400 		.ascii	"int\000"
 625 006f 02       		.uleb128 0x2
 626 0070 04       		.byte	0x4
 627 0071 07       		.byte	0x7
 628 0072 A8010000 		.4byte	.LASF8
 629 0076 03       		.uleb128 0x3
 630 0077 DD010000 		.4byte	.LASF10
 631 007b 03       		.byte	0x3
 632 007c 2C       		.byte	0x2c
 633 007d 41000000 		.4byte	0x41
 634 0081 05       		.uleb128 0x5
 635 0082 29020000 		.4byte	.LASF11
 636 0086 04       		.byte	0x4
 637 0087 E401     		.2byte	0x1e4
 638 0089 2C000000 		.4byte	0x2c
 639 008d 05       		.uleb128 0x5
 640 008e 93010000 		.4byte	.LASF12
 641 0092 04       		.byte	0x4
 642 0093 E501     		.2byte	0x1e5
 643 0095 3A000000 		.4byte	0x3a
 644 0099 05       		.uleb128 0x5
 645 009a 9A010000 		.4byte	.LASF13
 646 009e 04       		.byte	0x4
 647 009f E701     		.2byte	0x1e7
 648 00a1 25000000 		.4byte	0x25
 649 00a5 02       		.uleb128 0x2
 650 00a6 04       		.byte	0x4
 651 00a7 04       		.byte	0x4
 652 00a8 78000000 		.4byte	.LASF14
 653 00ac 02       		.uleb128 0x2
 654 00ad 08       		.byte	0x8
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 16


 655 00ae 04       		.byte	0x4
 656 00af 73010000 		.4byte	.LASF15
 657 00b3 02       		.uleb128 0x2
 658 00b4 01       		.byte	0x1
 659 00b5 08       		.byte	0x8
 660 00b6 FC010000 		.4byte	.LASF16
 661 00ba 05       		.uleb128 0x5
 662 00bb 25010000 		.4byte	.LASF17
 663 00bf 04       		.byte	0x4
 664 00c0 8E02     		.2byte	0x28e
 665 00c2 C6000000 		.4byte	0xc6
 666 00c6 06       		.uleb128 0x6
 667 00c7 81000000 		.4byte	0x81
 668 00cb 07       		.uleb128 0x7
 669 00cc 04       		.byte	0x4
 670 00cd D1000000 		.4byte	0xd1
 671 00d1 08       		.uleb128 0x8
 672 00d2 02       		.uleb128 0x2
 673 00d3 08       		.byte	0x8
 674 00d4 04       		.byte	0x4
 675 00d5 49020000 		.4byte	.LASF18
 676 00d9 02       		.uleb128 0x2
 677 00da 04       		.byte	0x4
 678 00db 07       		.byte	0x7
 679 00dc E5010000 		.4byte	.LASF19
 680 00e0 03       		.uleb128 0x3
 681 00e1 67000000 		.4byte	.LASF20
 682 00e5 05       		.byte	0x5
 683 00e6 10       		.byte	0x10
 684 00e7 CB000000 		.4byte	0xcb
 685 00eb 09       		.uleb128 0x9
 686 00ec 0B020000 		.4byte	.LASF38
 687 00f0 01       		.byte	0x1
 688 00f1 1B       		.byte	0x1b
 689 00f2 8D000000 		.4byte	0x8d
 690 00f6 00000000 		.4byte	.LFB64
 691 00fa A4000000 		.4byte	.LFE64-.LFB64
 692 00fe 01       		.uleb128 0x1
 693 00ff 9C       		.byte	0x9c
 694 0100 1D010000 		.4byte	0x11d
 695 0104 0A       		.uleb128 0xa
 696 0105 60000000 		.4byte	.LASF23
 697 0109 01       		.byte	0x1
 698 010a 1D       		.byte	0x1d
 699 010b 8D000000 		.4byte	0x8d
 700 010f 00000000 		.4byte	.LLST0
 701 0113 0B       		.uleb128 0xb
 702 0114 90000000 		.4byte	.LVL10
 703 0118 E2020000 		.4byte	0x2e2
 704 011c 00       		.byte	0
 705 011d 0C       		.uleb128 0xc
 706 011e 70000000 		.4byte	.LASF21
 707 0122 01       		.byte	0x1
 708 0123 2C       		.byte	0x2c
 709 0124 00000000 		.4byte	.LFB65
 710 0128 AC000000 		.4byte	.LFE65-.LFB65
 711 012c 01       		.uleb128 0x1
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 17


 712 012d 9C       		.byte	0x9c
 713 012e 71010000 		.4byte	0x171
 714 0132 0D       		.uleb128 0xd
 715 0133 61726700 		.ascii	"arg\000"
 716 0137 01       		.byte	0x1
 717 0138 2C       		.byte	0x2c
 718 0139 81000000 		.4byte	0x81
 719 013d 2F000000 		.4byte	.LLST1
 720 0141 0B       		.uleb128 0xb
 721 0142 08000000 		.4byte	.LVL14
 722 0146 ED020000 		.4byte	0x2ed
 723 014a 0E       		.uleb128 0xe
 724 014b 52000000 		.4byte	.LVL15
 725 014f F8020000 		.4byte	0x2f8
 726 0153 5F010000 		.4byte	0x15f
 727 0157 0F       		.uleb128 0xf
 728 0158 01       		.uleb128 0x1
 729 0159 50       		.byte	0x50
 730 015a 03       		.uleb128 0x3
 731 015b 0A       		.byte	0xa
 732 015c 9001     		.2byte	0x190
 733 015e 00       		.byte	0
 734 015f 10       		.uleb128 0x10
 735 0160 7E000000 		.4byte	.LVL16
 736 0164 F8020000 		.4byte	0x2f8
 737 0168 0F       		.uleb128 0xf
 738 0169 01       		.uleb128 0x1
 739 016a 50       		.byte	0x50
 740 016b 03       		.uleb128 0x3
 741 016c 0A       		.byte	0xa
 742 016d 9001     		.2byte	0x190
 743 016f 00       		.byte	0
 744 0170 00       		.byte	0
 745 0171 0C       		.uleb128 0xc
 746 0172 00000000 		.4byte	.LASF22
 747 0176 01       		.byte	0x1
 748 0177 58       		.byte	0x58
 749 0178 00000000 		.4byte	.LFB66
 750 017c A8000000 		.4byte	.LFE66-.LFB66
 751 0180 01       		.uleb128 0x1
 752 0181 9C       		.byte	0x9c
 753 0182 09020000 		.4byte	0x209
 754 0186 0D       		.uleb128 0xd
 755 0187 61726700 		.ascii	"arg\000"
 756 018b 01       		.byte	0x1
 757 018c 58       		.byte	0x58
 758 018d 81000000 		.4byte	0x81
 759 0191 50000000 		.4byte	.LLST2
 760 0195 11       		.uleb128 0x11
 761 0196 26000000 		.4byte	.LBB2
 762 019a 82000000 		.4byte	.LBE2-.LBB2
 763 019e FF010000 		.4byte	0x1ff
 764 01a2 0A       		.uleb128 0xa
 765 01a3 1B020000 		.4byte	.LASF24
 766 01a7 01       		.byte	0x1
 767 01a8 69       		.byte	0x69
 768 01a9 99000000 		.4byte	0x99
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 18


 769 01ad 71000000 		.4byte	.LLST3
 770 01b1 0B       		.uleb128 0xb
 771 01b2 2A000000 		.4byte	.LVL19
 772 01b6 E2020000 		.4byte	0x2e2
 773 01ba 0E       		.uleb128 0xe
 774 01bb 64000000 		.4byte	.LVL24
 775 01bf 03030000 		.4byte	0x303
 776 01c3 D3010000 		.4byte	0x1d3
 777 01c7 0F       		.uleb128 0xf
 778 01c8 01       		.uleb128 0x1
 779 01c9 50       		.byte	0x50
 780 01ca 02       		.uleb128 0x2
 781 01cb 74       		.byte	0x74
 782 01cc 00       		.sleb128 0
 783 01cd 0F       		.uleb128 0xf
 784 01ce 01       		.uleb128 0x1
 785 01cf 51       		.byte	0x51
 786 01d0 01       		.uleb128 0x1
 787 01d1 31       		.byte	0x31
 788 01d2 00       		.byte	0
 789 01d3 0E       		.uleb128 0xe
 790 01d4 82000000 		.4byte	.LVL27
 791 01d8 03030000 		.4byte	0x303
 792 01dc ED010000 		.4byte	0x1ed
 793 01e0 0F       		.uleb128 0xf
 794 01e1 01       		.uleb128 0x1
 795 01e2 50       		.byte	0x50
 796 01e3 02       		.uleb128 0x2
 797 01e4 74       		.byte	0x74
 798 01e5 00       		.sleb128 0
 799 01e6 0F       		.uleb128 0xf
 800 01e7 01       		.uleb128 0x1
 801 01e8 51       		.byte	0x51
 802 01e9 02       		.uleb128 0x2
 803 01ea 09       		.byte	0x9
 804 01eb FF       		.byte	0xff
 805 01ec 00       		.byte	0
 806 01ed 10       		.uleb128 0x10
 807 01ee 90000000 		.4byte	.LVL28
 808 01f2 F8020000 		.4byte	0x2f8
 809 01f6 0F       		.uleb128 0xf
 810 01f7 01       		.uleb128 0x1
 811 01f8 50       		.byte	0x50
 812 01f9 03       		.uleb128 0x3
 813 01fa 0A       		.byte	0xa
 814 01fb F401     		.2byte	0x1f4
 815 01fd 00       		.byte	0
 816 01fe 00       		.byte	0
 817 01ff 0B       		.uleb128 0xb
 818 0200 08000000 		.4byte	.LVL18
 819 0204 ED020000 		.4byte	0x2ed
 820 0208 00       		.byte	0
 821 0209 0C       		.uleb128 0xc
 822 020a 2A010000 		.4byte	.LASF25
 823 020e 01       		.byte	0x1
 824 020f 8E       		.byte	0x8e
 825 0210 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 19


 826 0214 68000000 		.4byte	.LFE67-.LFB67
 827 0218 01       		.uleb128 0x1
 828 0219 9C       		.byte	0x9c
 829 021a 54020000 		.4byte	0x254
 830 021e 0D       		.uleb128 0xd
 831 021f 61726700 		.ascii	"arg\000"
 832 0223 01       		.byte	0x1
 833 0224 8E       		.byte	0x8e
 834 0225 81000000 		.4byte	0x81
 835 0229 8F000000 		.4byte	.LLST4
 836 022d 0E       		.uleb128 0xe
 837 022e 18000000 		.4byte	.LVL31
 838 0232 F8020000 		.4byte	0x2f8
 839 0236 42020000 		.4byte	0x242
 840 023a 0F       		.uleb128 0xf
 841 023b 01       		.uleb128 0x1
 842 023c 50       		.byte	0x50
 843 023d 03       		.uleb128 0x3
 844 023e 0A       		.byte	0xa
 845 023f B004     		.2byte	0x4b0
 846 0241 00       		.byte	0
 847 0242 10       		.uleb128 0x10
 848 0243 32000000 		.4byte	.LVL32
 849 0247 F8020000 		.4byte	0x2f8
 850 024b 0F       		.uleb128 0xf
 851 024c 01       		.uleb128 0x1
 852 024d 50       		.byte	0x50
 853 024e 03       		.uleb128 0x3
 854 024f 0A       		.byte	0xa
 855 0250 B004     		.2byte	0x4b0
 856 0252 00       		.byte	0
 857 0253 00       		.byte	0
 858 0254 0C       		.uleb128 0xc
 859 0255 7A010000 		.4byte	.LASF26
 860 0259 01       		.byte	0x1
 861 025a A8       		.byte	0xa8
 862 025b 00000000 		.4byte	.LFB68
 863 025f 88000000 		.4byte	.LFE68-.LFB68
 864 0263 01       		.uleb128 0x1
 865 0264 9C       		.byte	0x9c
 866 0265 BB020000 		.4byte	0x2bb
 867 0269 0D       		.uleb128 0xd
 868 026a 61726700 		.ascii	"arg\000"
 869 026e 01       		.byte	0x1
 870 026f A8       		.byte	0xa8
 871 0270 81000000 		.4byte	0x81
 872 0274 B0000000 		.4byte	.LLST5
 873 0278 0B       		.uleb128 0xb
 874 0279 06000000 		.4byte	.LVL34
 875 027d ED020000 		.4byte	0x2ed
 876 0281 0E       		.uleb128 0xe
 877 0282 24000000 		.4byte	.LVL35
 878 0286 0E030000 		.4byte	0x30e
 879 028a 94020000 		.4byte	0x294
 880 028e 0F       		.uleb128 0xf
 881 028f 01       		.uleb128 0x1
 882 0290 50       		.byte	0x50
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 20


 883 0291 01       		.uleb128 0x1
 884 0292 31       		.byte	0x31
 885 0293 00       		.byte	0
 886 0294 0E       		.uleb128 0xe
 887 0295 34000000 		.4byte	.LVL36
 888 0299 F8020000 		.4byte	0x2f8
 889 029d A9020000 		.4byte	0x2a9
 890 02a1 0F       		.uleb128 0xf
 891 02a2 01       		.uleb128 0x1
 892 02a3 50       		.byte	0x50
 893 02a4 03       		.uleb128 0x3
 894 02a5 0A       		.byte	0xa
 895 02a6 1027     		.2byte	0x2710
 896 02a8 00       		.byte	0
 897 02a9 10       		.uleb128 0x10
 898 02aa 56000000 		.4byte	.LVL37
 899 02ae F8020000 		.4byte	0x2f8
 900 02b2 0F       		.uleb128 0xf
 901 02b3 01       		.uleb128 0x1
 902 02b4 50       		.byte	0x50
 903 02b5 03       		.uleb128 0x3
 904 02b6 0A       		.byte	0xa
 905 02b7 B80B     		.2byte	0xbb8
 906 02b9 00       		.byte	0
 907 02ba 00       		.byte	0
 908 02bb 12       		.uleb128 0x12
 909 02bc 59010000 		.4byte	.LASF27
 910 02c0 06       		.byte	0x6
 911 02c1 1207     		.2byte	0x712
 912 02c3 C7020000 		.4byte	0x2c7
 913 02c7 06       		.uleb128 0x6
 914 02c8 76000000 		.4byte	0x76
 915 02cc 13       		.uleb128 0x13
 916 02cd 61020000 		.4byte	.LASF28
 917 02d1 01       		.byte	0x1
 918 02d2 15       		.byte	0x15
 919 02d3 E0000000 		.4byte	0xe0
 920 02d7 13       		.uleb128 0x13
 921 02d8 57000000 		.4byte	.LASF29
 922 02dc 01       		.byte	0x1
 923 02dd 16       		.byte	0x16
 924 02de 81000000 		.4byte	0x81
 925 02e2 14       		.uleb128 0x14
 926 02e3 2F020000 		.4byte	.LASF30
 927 02e7 2F020000 		.4byte	.LASF30
 928 02eb 07       		.byte	0x7
 929 02ec 42       		.byte	0x42
 930 02ed 14       		.uleb128 0x14
 931 02ee 9F010000 		.4byte	.LASF31
 932 02f2 9F010000 		.4byte	.LASF31
 933 02f6 07       		.byte	0x7
 934 02f7 47       		.byte	0x47
 935 02f8 14       		.uleb128 0x14
 936 02f9 66010000 		.4byte	.LASF32
 937 02fd 66010000 		.4byte	.LASF32
 938 0301 07       		.byte	0x7
 939 0302 40       		.byte	0x40
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 21


 940 0303 14       		.uleb128 0x14
 941 0304 83010000 		.4byte	.LASF33
 942 0308 83010000 		.4byte	.LASF33
 943 030c 07       		.byte	0x7
 944 030d 44       		.byte	0x44
 945 030e 14       		.uleb128 0x14
 946 030f B5010000 		.4byte	.LASF34
 947 0313 B5010000 		.4byte	.LASF34
 948 0317 07       		.byte	0x7
 949 0318 43       		.byte	0x43
 950 0319 00       		.byte	0
 951              		.section	.debug_abbrev,"",%progbits
 952              	.Ldebug_abbrev0:
 953 0000 01       		.uleb128 0x1
 954 0001 11       		.uleb128 0x11
 955 0002 01       		.byte	0x1
 956 0003 25       		.uleb128 0x25
 957 0004 0E       		.uleb128 0xe
 958 0005 13       		.uleb128 0x13
 959 0006 0B       		.uleb128 0xb
 960 0007 03       		.uleb128 0x3
 961 0008 0E       		.uleb128 0xe
 962 0009 1B       		.uleb128 0x1b
 963 000a 0E       		.uleb128 0xe
 964 000b 55       		.uleb128 0x55
 965 000c 17       		.uleb128 0x17
 966 000d 11       		.uleb128 0x11
 967 000e 01       		.uleb128 0x1
 968 000f 10       		.uleb128 0x10
 969 0010 17       		.uleb128 0x17
 970 0011 00       		.byte	0
 971 0012 00       		.byte	0
 972 0013 02       		.uleb128 0x2
 973 0014 24       		.uleb128 0x24
 974 0015 00       		.byte	0
 975 0016 0B       		.uleb128 0xb
 976 0017 0B       		.uleb128 0xb
 977 0018 3E       		.uleb128 0x3e
 978 0019 0B       		.uleb128 0xb
 979 001a 03       		.uleb128 0x3
 980 001b 0E       		.uleb128 0xe
 981 001c 00       		.byte	0
 982 001d 00       		.byte	0
 983 001e 03       		.uleb128 0x3
 984 001f 16       		.uleb128 0x16
 985 0020 00       		.byte	0
 986 0021 03       		.uleb128 0x3
 987 0022 0E       		.uleb128 0xe
 988 0023 3A       		.uleb128 0x3a
 989 0024 0B       		.uleb128 0xb
 990 0025 3B       		.uleb128 0x3b
 991 0026 0B       		.uleb128 0xb
 992 0027 49       		.uleb128 0x49
 993 0028 13       		.uleb128 0x13
 994 0029 00       		.byte	0
 995 002a 00       		.byte	0
 996 002b 04       		.uleb128 0x4
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 22


 997 002c 24       		.uleb128 0x24
 998 002d 00       		.byte	0
 999 002e 0B       		.uleb128 0xb
 1000 002f 0B       		.uleb128 0xb
 1001 0030 3E       		.uleb128 0x3e
 1002 0031 0B       		.uleb128 0xb
 1003 0032 03       		.uleb128 0x3
 1004 0033 08       		.uleb128 0x8
 1005 0034 00       		.byte	0
 1006 0035 00       		.byte	0
 1007 0036 05       		.uleb128 0x5
 1008 0037 16       		.uleb128 0x16
 1009 0038 00       		.byte	0
 1010 0039 03       		.uleb128 0x3
 1011 003a 0E       		.uleb128 0xe
 1012 003b 3A       		.uleb128 0x3a
 1013 003c 0B       		.uleb128 0xb
 1014 003d 3B       		.uleb128 0x3b
 1015 003e 05       		.uleb128 0x5
 1016 003f 49       		.uleb128 0x49
 1017 0040 13       		.uleb128 0x13
 1018 0041 00       		.byte	0
 1019 0042 00       		.byte	0
 1020 0043 06       		.uleb128 0x6
 1021 0044 35       		.uleb128 0x35
 1022 0045 00       		.byte	0
 1023 0046 49       		.uleb128 0x49
 1024 0047 13       		.uleb128 0x13
 1025 0048 00       		.byte	0
 1026 0049 00       		.byte	0
 1027 004a 07       		.uleb128 0x7
 1028 004b 0F       		.uleb128 0xf
 1029 004c 00       		.byte	0
 1030 004d 0B       		.uleb128 0xb
 1031 004e 0B       		.uleb128 0xb
 1032 004f 49       		.uleb128 0x49
 1033 0050 13       		.uleb128 0x13
 1034 0051 00       		.byte	0
 1035 0052 00       		.byte	0
 1036 0053 08       		.uleb128 0x8
 1037 0054 15       		.uleb128 0x15
 1038 0055 00       		.byte	0
 1039 0056 27       		.uleb128 0x27
 1040 0057 19       		.uleb128 0x19
 1041 0058 00       		.byte	0
 1042 0059 00       		.byte	0
 1043 005a 09       		.uleb128 0x9
 1044 005b 2E       		.uleb128 0x2e
 1045 005c 01       		.byte	0x1
 1046 005d 3F       		.uleb128 0x3f
 1047 005e 19       		.uleb128 0x19
 1048 005f 03       		.uleb128 0x3
 1049 0060 0E       		.uleb128 0xe
 1050 0061 3A       		.uleb128 0x3a
 1051 0062 0B       		.uleb128 0xb
 1052 0063 3B       		.uleb128 0x3b
 1053 0064 0B       		.uleb128 0xb
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 23


 1054 0065 27       		.uleb128 0x27
 1055 0066 19       		.uleb128 0x19
 1056 0067 49       		.uleb128 0x49
 1057 0068 13       		.uleb128 0x13
 1058 0069 11       		.uleb128 0x11
 1059 006a 01       		.uleb128 0x1
 1060 006b 12       		.uleb128 0x12
 1061 006c 06       		.uleb128 0x6
 1062 006d 40       		.uleb128 0x40
 1063 006e 18       		.uleb128 0x18
 1064 006f 9742     		.uleb128 0x2117
 1065 0071 19       		.uleb128 0x19
 1066 0072 01       		.uleb128 0x1
 1067 0073 13       		.uleb128 0x13
 1068 0074 00       		.byte	0
 1069 0075 00       		.byte	0
 1070 0076 0A       		.uleb128 0xa
 1071 0077 34       		.uleb128 0x34
 1072 0078 00       		.byte	0
 1073 0079 03       		.uleb128 0x3
 1074 007a 0E       		.uleb128 0xe
 1075 007b 3A       		.uleb128 0x3a
 1076 007c 0B       		.uleb128 0xb
 1077 007d 3B       		.uleb128 0x3b
 1078 007e 0B       		.uleb128 0xb
 1079 007f 49       		.uleb128 0x49
 1080 0080 13       		.uleb128 0x13
 1081 0081 02       		.uleb128 0x2
 1082 0082 17       		.uleb128 0x17
 1083 0083 00       		.byte	0
 1084 0084 00       		.byte	0
 1085 0085 0B       		.uleb128 0xb
 1086 0086 898201   		.uleb128 0x4109
 1087 0089 00       		.byte	0
 1088 008a 11       		.uleb128 0x11
 1089 008b 01       		.uleb128 0x1
 1090 008c 31       		.uleb128 0x31
 1091 008d 13       		.uleb128 0x13
 1092 008e 00       		.byte	0
 1093 008f 00       		.byte	0
 1094 0090 0C       		.uleb128 0xc
 1095 0091 2E       		.uleb128 0x2e
 1096 0092 01       		.byte	0x1
 1097 0093 3F       		.uleb128 0x3f
 1098 0094 19       		.uleb128 0x19
 1099 0095 03       		.uleb128 0x3
 1100 0096 0E       		.uleb128 0xe
 1101 0097 3A       		.uleb128 0x3a
 1102 0098 0B       		.uleb128 0xb
 1103 0099 3B       		.uleb128 0x3b
 1104 009a 0B       		.uleb128 0xb
 1105 009b 27       		.uleb128 0x27
 1106 009c 19       		.uleb128 0x19
 1107 009d 11       		.uleb128 0x11
 1108 009e 01       		.uleb128 0x1
 1109 009f 12       		.uleb128 0x12
 1110 00a0 06       		.uleb128 0x6
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 24


 1111 00a1 40       		.uleb128 0x40
 1112 00a2 18       		.uleb128 0x18
 1113 00a3 9742     		.uleb128 0x2117
 1114 00a5 19       		.uleb128 0x19
 1115 00a6 01       		.uleb128 0x1
 1116 00a7 13       		.uleb128 0x13
 1117 00a8 00       		.byte	0
 1118 00a9 00       		.byte	0
 1119 00aa 0D       		.uleb128 0xd
 1120 00ab 05       		.uleb128 0x5
 1121 00ac 00       		.byte	0
 1122 00ad 03       		.uleb128 0x3
 1123 00ae 08       		.uleb128 0x8
 1124 00af 3A       		.uleb128 0x3a
 1125 00b0 0B       		.uleb128 0xb
 1126 00b1 3B       		.uleb128 0x3b
 1127 00b2 0B       		.uleb128 0xb
 1128 00b3 49       		.uleb128 0x49
 1129 00b4 13       		.uleb128 0x13
 1130 00b5 02       		.uleb128 0x2
 1131 00b6 17       		.uleb128 0x17
 1132 00b7 00       		.byte	0
 1133 00b8 00       		.byte	0
 1134 00b9 0E       		.uleb128 0xe
 1135 00ba 898201   		.uleb128 0x4109
 1136 00bd 01       		.byte	0x1
 1137 00be 11       		.uleb128 0x11
 1138 00bf 01       		.uleb128 0x1
 1139 00c0 31       		.uleb128 0x31
 1140 00c1 13       		.uleb128 0x13
 1141 00c2 01       		.uleb128 0x1
 1142 00c3 13       		.uleb128 0x13
 1143 00c4 00       		.byte	0
 1144 00c5 00       		.byte	0
 1145 00c6 0F       		.uleb128 0xf
 1146 00c7 8A8201   		.uleb128 0x410a
 1147 00ca 00       		.byte	0
 1148 00cb 02       		.uleb128 0x2
 1149 00cc 18       		.uleb128 0x18
 1150 00cd 9142     		.uleb128 0x2111
 1151 00cf 18       		.uleb128 0x18
 1152 00d0 00       		.byte	0
 1153 00d1 00       		.byte	0
 1154 00d2 10       		.uleb128 0x10
 1155 00d3 898201   		.uleb128 0x4109
 1156 00d6 01       		.byte	0x1
 1157 00d7 11       		.uleb128 0x11
 1158 00d8 01       		.uleb128 0x1
 1159 00d9 31       		.uleb128 0x31
 1160 00da 13       		.uleb128 0x13
 1161 00db 00       		.byte	0
 1162 00dc 00       		.byte	0
 1163 00dd 11       		.uleb128 0x11
 1164 00de 0B       		.uleb128 0xb
 1165 00df 01       		.byte	0x1
 1166 00e0 11       		.uleb128 0x11
 1167 00e1 01       		.uleb128 0x1
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 25


 1168 00e2 12       		.uleb128 0x12
 1169 00e3 06       		.uleb128 0x6
 1170 00e4 01       		.uleb128 0x1
 1171 00e5 13       		.uleb128 0x13
 1172 00e6 00       		.byte	0
 1173 00e7 00       		.byte	0
 1174 00e8 12       		.uleb128 0x12
 1175 00e9 34       		.uleb128 0x34
 1176 00ea 00       		.byte	0
 1177 00eb 03       		.uleb128 0x3
 1178 00ec 0E       		.uleb128 0xe
 1179 00ed 3A       		.uleb128 0x3a
 1180 00ee 0B       		.uleb128 0xb
 1181 00ef 3B       		.uleb128 0x3b
 1182 00f0 05       		.uleb128 0x5
 1183 00f1 49       		.uleb128 0x49
 1184 00f2 13       		.uleb128 0x13
 1185 00f3 3F       		.uleb128 0x3f
 1186 00f4 19       		.uleb128 0x19
 1187 00f5 3C       		.uleb128 0x3c
 1188 00f6 19       		.uleb128 0x19
 1189 00f7 00       		.byte	0
 1190 00f8 00       		.byte	0
 1191 00f9 13       		.uleb128 0x13
 1192 00fa 34       		.uleb128 0x34
 1193 00fb 00       		.byte	0
 1194 00fc 03       		.uleb128 0x3
 1195 00fd 0E       		.uleb128 0xe
 1196 00fe 3A       		.uleb128 0x3a
 1197 00ff 0B       		.uleb128 0xb
 1198 0100 3B       		.uleb128 0x3b
 1199 0101 0B       		.uleb128 0xb
 1200 0102 49       		.uleb128 0x49
 1201 0103 13       		.uleb128 0x13
 1202 0104 3F       		.uleb128 0x3f
 1203 0105 19       		.uleb128 0x19
 1204 0106 3C       		.uleb128 0x3c
 1205 0107 19       		.uleb128 0x19
 1206 0108 00       		.byte	0
 1207 0109 00       		.byte	0
 1208 010a 14       		.uleb128 0x14
 1209 010b 2E       		.uleb128 0x2e
 1210 010c 00       		.byte	0
 1211 010d 3F       		.uleb128 0x3f
 1212 010e 19       		.uleb128 0x19
 1213 010f 3C       		.uleb128 0x3c
 1214 0110 19       		.uleb128 0x19
 1215 0111 6E       		.uleb128 0x6e
 1216 0112 0E       		.uleb128 0xe
 1217 0113 03       		.uleb128 0x3
 1218 0114 0E       		.uleb128 0xe
 1219 0115 3A       		.uleb128 0x3a
 1220 0116 0B       		.uleb128 0xb
 1221 0117 3B       		.uleb128 0x3b
 1222 0118 0B       		.uleb128 0xb
 1223 0119 00       		.byte	0
 1224 011a 00       		.byte	0
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 26


 1225 011b 00       		.byte	0
 1226              		.section	.debug_loc,"",%progbits
 1227              	.Ldebug_loc0:
 1228              	.LLST0:
 1229 0000 02000000 		.4byte	.LVL0
 1230 0004 12000000 		.4byte	.LVL1
 1231 0008 0200     		.2byte	0x2
 1232 000a 30       		.byte	0x30
 1233 000b 9F       		.byte	0x9f
 1234 000c 12000000 		.4byte	.LVL1
 1235 0010 94000000 		.4byte	.LVL11
 1236 0014 0100     		.2byte	0x1
 1237 0016 54       		.byte	0x54
 1238 0017 94000000 		.4byte	.LVL11
 1239 001b 96000000 		.4byte	.LVL12
 1240 001f 0600     		.2byte	0x6
 1241 0021 70       		.byte	0x70
 1242 0022 00       		.sleb128 0
 1243 0023 74       		.byte	0x74
 1244 0024 00       		.sleb128 0
 1245 0025 21       		.byte	0x21
 1246 0026 9F       		.byte	0x9f
 1247 0027 00000000 		.4byte	0
 1248 002b 00000000 		.4byte	0
 1249              	.LLST1:
 1250 002f 00000000 		.4byte	.LVL13
 1251 0033 07000000 		.4byte	.LVL14-1
 1252 0037 0100     		.2byte	0x1
 1253 0039 50       		.byte	0x50
 1254 003a 07000000 		.4byte	.LVL14-1
 1255 003e AC000000 		.4byte	.LFE65
 1256 0042 0400     		.2byte	0x4
 1257 0044 F3       		.byte	0xf3
 1258 0045 01       		.uleb128 0x1
 1259 0046 50       		.byte	0x50
 1260 0047 9F       		.byte	0x9f
 1261 0048 00000000 		.4byte	0
 1262 004c 00000000 		.4byte	0
 1263              	.LLST2:
 1264 0050 00000000 		.4byte	.LVL17
 1265 0054 07000000 		.4byte	.LVL18-1
 1266 0058 0100     		.2byte	0x1
 1267 005a 50       		.byte	0x50
 1268 005b 07000000 		.4byte	.LVL18-1
 1269 005f A8000000 		.4byte	.LFE66
 1270 0063 0400     		.2byte	0x4
 1271 0065 F3       		.byte	0xf3
 1272 0066 01       		.uleb128 0x1
 1273 0067 50       		.byte	0x50
 1274 0068 9F       		.byte	0x9f
 1275 0069 00000000 		.4byte	0
 1276 006d 00000000 		.4byte	0
 1277              	.LLST3:
 1278 0071 30000000 		.4byte	.LVL20
 1279 0075 4C000000 		.4byte	.LVL23
 1280 0079 0100     		.2byte	0x1
 1281 007b 53       		.byte	0x53
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 27


 1282 007c 66000000 		.4byte	.LVL25
 1283 0080 68000000 		.4byte	.LVL26
 1284 0084 0100     		.2byte	0x1
 1285 0086 53       		.byte	0x53
 1286 0087 00000000 		.4byte	0
 1287 008b 00000000 		.4byte	0
 1288              	.LLST4:
 1289 008f 00000000 		.4byte	.LVL29
 1290 0093 04000000 		.4byte	.LVL30
 1291 0097 0100     		.2byte	0x1
 1292 0099 50       		.byte	0x50
 1293 009a 04000000 		.4byte	.LVL30
 1294 009e 68000000 		.4byte	.LFE67
 1295 00a2 0400     		.2byte	0x4
 1296 00a4 F3       		.byte	0xf3
 1297 00a5 01       		.uleb128 0x1
 1298 00a6 50       		.byte	0x50
 1299 00a7 9F       		.byte	0x9f
 1300 00a8 00000000 		.4byte	0
 1301 00ac 00000000 		.4byte	0
 1302              	.LLST5:
 1303 00b0 00000000 		.4byte	.LVL33
 1304 00b4 05000000 		.4byte	.LVL34-1
 1305 00b8 0100     		.2byte	0x1
 1306 00ba 50       		.byte	0x50
 1307 00bb 05000000 		.4byte	.LVL34-1
 1308 00bf 88000000 		.4byte	.LFE68
 1309 00c3 0400     		.2byte	0x4
 1310 00c5 F3       		.byte	0xf3
 1311 00c6 01       		.uleb128 0x1
 1312 00c7 50       		.byte	0x50
 1313 00c8 9F       		.byte	0x9f
 1314 00c9 00000000 		.4byte	0
 1315 00cd 00000000 		.4byte	0
 1316              		.section	.debug_aranges,"",%progbits
 1317 0000 3C000000 		.4byte	0x3c
 1318 0004 0200     		.2byte	0x2
 1319 0006 00000000 		.4byte	.Ldebug_info0
 1320 000a 04       		.byte	0x4
 1321 000b 00       		.byte	0
 1322 000c 0000     		.2byte	0
 1323 000e 0000     		.2byte	0
 1324 0010 00000000 		.4byte	.LFB64
 1325 0014 A4000000 		.4byte	.LFE64-.LFB64
 1326 0018 00000000 		.4byte	.LFB65
 1327 001c AC000000 		.4byte	.LFE65-.LFB65
 1328 0020 00000000 		.4byte	.LFB66
 1329 0024 A8000000 		.4byte	.LFE66-.LFB66
 1330 0028 00000000 		.4byte	.LFB67
 1331 002c 68000000 		.4byte	.LFE67-.LFB67
 1332 0030 00000000 		.4byte	.LFB68
 1333 0034 88000000 		.4byte	.LFE68-.LFB68
 1334 0038 00000000 		.4byte	0
 1335 003c 00000000 		.4byte	0
 1336              		.section	.debug_ranges,"",%progbits
 1337              	.Ldebug_ranges0:
 1338 0000 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 28


 1339 0004 A4000000 		.4byte	.LFE64
 1340 0008 00000000 		.4byte	.LFB65
 1341 000c AC000000 		.4byte	.LFE65
 1342 0010 00000000 		.4byte	.LFB66
 1343 0014 A8000000 		.4byte	.LFE66
 1344 0018 00000000 		.4byte	.LFB67
 1345 001c 68000000 		.4byte	.LFE67
 1346 0020 00000000 		.4byte	.LFB68
 1347 0024 88000000 		.4byte	.LFE68
 1348 0028 00000000 		.4byte	0
 1349 002c 00000000 		.4byte	0
 1350              		.section	.debug_line,"",%progbits
 1351              	.Ldebug_line0:
 1352 0000 52020000 		.section	.debug_str,"MS",%progbits,1
 1352      02007201 
 1352      00000201 
 1352      FB0E0D00 
 1352      01010101 
 1353              	.LASF22:
 1354 0000 4361726F 		.ascii	"Carousel_Cmd\000"
 1354      7573656C 
 1354      5F436D64 
 1354      00
 1355              	.LASF37:
 1356 000d 433A5C44 		.ascii	"C:\\Dan\\Eng Projects\\BP308\\TLAUX\\ARM Code\\TLAU"
 1356      616E5C45 
 1356      6E672050 
 1356      726F6A65 
 1356      6374735C 
 1357 003a 585C544C 		.ascii	"X\\TLAUX_PSoC.cydsn\000"
 1357      4155585F 
 1357      50536F43 
 1357      2E637964 
 1357      736E00
 1358              	.LASF9:
 1359 004d 5F5F696E 		.ascii	"__int32_t\000"
 1359      7433325F 
 1359      7400
 1360              	.LASF29:
 1361 0057 54435F53 		.ascii	"TC_STATE\000"
 1361      54415445 
 1361      00
 1362              	.LASF23:
 1363 0060 73746174 		.ascii	"status\000"
 1363      757300
 1364              	.LASF20:
 1365 0067 66756E63 		.ascii	"func_ptr\000"
 1365      5F707472 
 1365      00
 1366              	.LASF21:
 1367 0070 41726D5F 		.ascii	"Arm_Cmd\000"
 1367      436D6400 
 1368              	.LASF14:
 1369 0078 666C6F61 		.ascii	"float\000"
 1369      7400
 1370              	.LASF36:
 1371 007e 546F6F6C 		.ascii	"ToolCmds.c\000"
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 29


 1371      436D6473 
 1371      2E6300
 1372              	.LASF1:
 1373 0089 756E7369 		.ascii	"unsigned char\000"
 1373      676E6564 
 1373      20636861 
 1373      7200
 1374              	.LASF35:
 1375 0097 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1375      43313120 
 1375      352E342E 
 1375      31203230 
 1375      31363036 
 1376 00ca 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1376      20726576 
 1376      6973696F 
 1376      6E203233 
 1376      37373135 
 1377 00fd 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1377      66756E63 
 1377      74696F6E 
 1377      2D736563 
 1377      74696F6E 
 1378              	.LASF17:
 1379 0125 72656738 		.ascii	"reg8\000"
 1379      00
 1380              	.LASF25:
 1381 012a 436C616D 		.ascii	"Clamp_Cmd\000"
 1381      705F436D 
 1381      6400
 1382              	.LASF5:
 1383 0134 6C6F6E67 		.ascii	"long unsigned int\000"
 1383      20756E73 
 1383      69676E65 
 1383      6420696E 
 1383      7400
 1384              	.LASF3:
 1385 0146 73686F72 		.ascii	"short unsigned int\000"
 1385      7420756E 
 1385      7369676E 
 1385      65642069 
 1385      6E7400
 1386              	.LASF27:
 1387 0159 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1387      52784275 
 1387      66666572 
 1387      00
 1388              	.LASF32:
 1389 0166 54435F53 		.ascii	"TC_Set_Delay\000"
 1389      65745F44 
 1389      656C6179 
 1389      00
 1390              	.LASF15:
 1391 0173 646F7562 		.ascii	"double\000"
 1391      6C6500
 1392              	.LASF26:
 1393 017a 486F6D65 		.ascii	"Home_Cmd\000"
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 30


 1393      5F436D64 
 1393      00
 1394              	.LASF33:
 1395 0183 5365745F 		.ascii	"Set_Target_Tool\000"
 1395      54617267 
 1395      65745F54 
 1395      6F6F6C00 
 1396              	.LASF12:
 1397 0193 75696E74 		.ascii	"uint16\000"
 1397      313600
 1398              	.LASF13:
 1399 019a 696E7438 		.ascii	"int8\000"
 1399      00
 1400              	.LASF31:
 1401 019f 496E5F46 		.ascii	"In_Fault\000"
 1401      61756C74 
 1401      00
 1402              	.LASF8:
 1403 01a8 756E7369 		.ascii	"unsigned int\000"
 1403      676E6564 
 1403      20696E74 
 1403      00
 1404              	.LASF34:
 1405 01b5 5365745F 		.ascii	"Set_Current_Tool\000"
 1405      43757272 
 1405      656E745F 
 1405      546F6F6C 
 1405      00
 1406              	.LASF7:
 1407 01c6 6C6F6E67 		.ascii	"long long unsigned int\000"
 1407      206C6F6E 
 1407      6720756E 
 1407      7369676E 
 1407      65642069 
 1408              	.LASF10:
 1409 01dd 696E7433 		.ascii	"int32_t\000"
 1409      325F7400 
 1410              	.LASF19:
 1411 01e5 73697A65 		.ascii	"sizetype\000"
 1411      74797065 
 1411      00
 1412              	.LASF6:
 1413 01ee 6C6F6E67 		.ascii	"long long int\000"
 1413      206C6F6E 
 1413      6720696E 
 1413      7400
 1414              	.LASF16:
 1415 01fc 63686172 		.ascii	"char\000"
 1415      00
 1416              	.LASF2:
 1417 0201 73686F72 		.ascii	"short int\000"
 1417      7420696E 
 1417      7400
 1418              	.LASF38:
 1419 020b 546F6F6C 		.ascii	"ToolStatusQuery\000"
 1419      53746174 
 1419      75735175 
ARM GAS  C:\Users\Dan\AppData\Local\Temp\ccqx8Gun.s 			page 31


 1419      65727900 
 1420              	.LASF24:
 1421 021b 746F6F6C 		.ascii	"tool_distance\000"
 1421      5F646973 
 1421      74616E63 
 1421      6500
 1422              	.LASF11:
 1423 0229 75696E74 		.ascii	"uint8\000"
 1423      3800
 1424              	.LASF30:
 1425 022f 4765745F 		.ascii	"Get_Current_Tool\000"
 1425      43757272 
 1425      656E745F 
 1425      546F6F6C 
 1425      00
 1426              	.LASF4:
 1427 0240 6C6F6E67 		.ascii	"long int\000"
 1427      20696E74 
 1427      00
 1428              	.LASF18:
 1429 0249 6C6F6E67 		.ascii	"long double\000"
 1429      20646F75 
 1429      626C6500 
 1430              	.LASF0:
 1431 0255 7369676E 		.ascii	"signed char\000"
 1431      65642063 
 1431      68617200 
 1432              	.LASF28:
 1433 0261 54435F53 		.ascii	"TC_SM\000"
 1433      4D00
 1434              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
