ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Processes.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TC_StateMachine,"ax",%progbits
  20              		.align	2
  21              		.global	TC_StateMachine
  22              		.thumb
  23              		.thumb_func
  24              		.type	TC_StateMachine, %function
  25              	TC_StateMachine:
  26              	.LFB69:
  27              		.file 1 "Processes.c"
   1:Processes.c   **** /* ========================================
   2:Processes.c   ****  *
   3:Processes.c   ****  * Copyright YOUR COMPANY, THE YEAR
   4:Processes.c   ****  * All Rights Reserved
   5:Processes.c   ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:Processes.c   ****  *
   7:Processes.c   ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:Processes.c   ****  * WHICH IS THE PROPERTY OF your company.
   9:Processes.c   ****  *
  10:Processes.c   ****  * ========================================
  11:Processes.c   **** */
  12:Processes.c   **** 
  13:Processes.c   **** #include "Processes.h"
  14:Processes.c   **** #include <project.h>
  15:Processes.c   **** #include <stdio.h>
  16:Processes.c   **** #include "ToolCmds.h"
  17:Processes.c   **** #include "State_Machine.h"
  18:Processes.c   **** 
  19:Processes.c   **** #include "U_HW.h"
  20:Processes.c   **** 
  21:Processes.c   **** extern uint32_t STATUS_FLAG1;
  22:Processes.c   **** 
  23:Processes.c   **** extern func_ptr FastProcess[];
  24:Processes.c   **** extern func_ptr MsProcess[];
  25:Processes.c   **** extern func_ptr SlowProcess[];
  26:Processes.c   **** extern volatile uint32 MS_Time;
  27:Processes.c   **** 
  28:Processes.c   **** func_ptr TC_SM;
  29:Processes.c   **** uint8   TC_STATE;
  30:Processes.c   **** 
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 2


  31:Processes.c   **** uint8 Current_Tool;
  32:Processes.c   **** uint8 Target_Tool;
  33:Processes.c   **** int8  Carousel_Dir;
  34:Processes.c   **** 
  35:Processes.c   **** static uint16_t C_Count;
  36:Processes.c   **** static uint16_t SecCount;
  37:Processes.c   **** 
  38:Processes.c   **** void InitCountProcess(void)
  39:Processes.c   **** {
  40:Processes.c   ****     C_Count = 0;
  41:Processes.c   ****     SecCount = 1000;
  42:Processes.c   **** }
  43:Processes.c   **** void CountProcess(void)
  44:Processes.c   **** {
  45:Processes.c   ****     char msg[20];
  46:Processes.c   ****     if((--SecCount) == 0)
  47:Processes.c   ****     {
  48:Processes.c   ****         SecCount = 1000; // reset the counter
  49:Processes.c   ****         sprintf(msg, "Count = %d\r", C_Count++);
  50:Processes.c   ****         PutStr(msg);
  51:Processes.c   **** //        Pin_LED_Write(~(Pin_LED_Read()));    // toggle the LED
  52:Processes.c   ****     }
  53:Processes.c   **** }
  54:Processes.c   **** 
  55:Processes.c   **** static uint8 A_Count;
  56:Processes.c   **** static uint16 S_Count;
  57:Processes.c   **** 
  58:Processes.c   **** void InitAlphaProcess(void)
  59:Processes.c   **** {
  60:Processes.c   ****     A_Count = 0;
  61:Processes.c   ****     S_Count = 1000;
  62:Processes.c   **** }
  63:Processes.c   **** 
  64:Processes.c   **** void AlphaProcess(void)
  65:Processes.c   **** {
  66:Processes.c   **** 
  67:Processes.c   ****     char msg[20];
  68:Processes.c   ****     if((--S_Count) == 0)
  69:Processes.c   ****     {
  70:Processes.c   ****         S_Count = 1000u; // reset the counter
  71:Processes.c   ****         sprintf(msg, "Alpha = %c\r", (A_Count + 'A'));
  72:Processes.c   ****         PutStr(msg);
  73:Processes.c   ****         if(A_Count++ > 56) A_Count = 0;
  74:Processes.c   **** //        Pin_LED_Write(~(Pin_LED_Read()));    // toggle the LED
  75:Processes.c   ****     }
  76:Processes.c   **** }
  77:Processes.c   **** 
  78:Processes.c   **** 
  79:Processes.c   **** // delay timer variables
  80:Processes.c   **** static uint32 TC_Delay; // the amount of time to delay
  81:Processes.c   **** static uint32 TC_DelayStart; // the time tick when the delay started
  82:Processes.c   **** 
  83:Processes.c   **** 
  84:Processes.c   **** // tool changer state machine
  85:Processes.c   **** void Init_TC_StateMachine(void)
  86:Processes.c   **** {
  87:Processes.c   ****     if(Process_Running(FastProcess, TC_StateMachine))
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 3


  88:Processes.c   ****     {
  89:Processes.c   ****         PutStr("Status Process already running!\n");
  90:Processes.c   ****     } else {
  91:Processes.c   ****     // start all the constantaly running processes.
  92:Processes.c   ****     // Status Monitor
  93:Processes.c   ****         Add_Process(FastProcess, &(TC_StateMachine));
  94:Processes.c   ****         PutStr("TC_State Machine Started");
  95:Processes.c   ****         TC_SM = &TC_Fault;
  96:Processes.c   ****     } 
  97:Processes.c   **** }
  98:Processes.c   **** 
  99:Processes.c   **** void TC_StateMachine(void)
 100:Processes.c   **** {
  28              		.loc 1 100 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 101:Processes.c   ****     // check for things that may cause a fault
 102:Processes.c   ****     // if there is a fault then TC_SM = &TC_Fault;
 103:Processes.c   ****     // 
 104:Processes.c   ****     TC_SM();
  36              		.loc 1 104 0
  37 0002 024B     		ldr	r3, .L3
  38 0004 1B68     		ldr	r3, [r3]
  39 0006 9847     		blx	r3
  40              	.LVL0:
  41 0008 08BD     		pop	{r3, pc}
  42              	.L4:
  43 000a 00BF     		.align	2
  44              	.L3:
  45 000c 00000000 		.word	TC_SM
  46              		.cfi_endproc
  47              	.LFE69:
  48              		.size	TC_StateMachine, .-TC_StateMachine
  49              		.section	.text.InitCountProcess,"ax",%progbits
  50              		.align	2
  51              		.global	InitCountProcess
  52              		.thumb
  53              		.thumb_func
  54              		.type	InitCountProcess, %function
  55              	InitCountProcess:
  56              	.LFB64:
  39:Processes.c   ****     C_Count = 0;
  57              		.loc 1 39 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  40:Processes.c   ****     SecCount = 1000;
  62              		.loc 1 40 0
  63 0000 034B     		ldr	r3, .L6
  64 0002 0022     		movs	r2, #0
  65 0004 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 4


  41:Processes.c   **** }
  66              		.loc 1 41 0
  67 0006 4FF47A72 		mov	r2, #1000
  68 000a 5A80     		strh	r2, [r3, #2]	@ movhi
  69 000c 7047     		bx	lr
  70              	.L7:
  71 000e 00BF     		.align	2
  72              	.L6:
  73 0010 00000000 		.word	.LANCHOR0
  74              		.cfi_endproc
  75              	.LFE64:
  76              		.size	InitCountProcess, .-InitCountProcess
  77              		.section	.text.CountProcess,"ax",%progbits
  78              		.align	2
  79              		.global	CountProcess
  80              		.thumb
  81              		.thumb_func
  82              		.type	CountProcess, %function
  83              	CountProcess:
  84              	.LFB65:
  44:Processes.c   ****     char msg[20];
  85              		.loc 1 44 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 24
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  46:Processes.c   ****     {
  89              		.loc 1 46 0
  90 0000 0C4A     		ldr	r2, .L12
  91 0002 5388     		ldrh	r3, [r2, #2]
  92 0004 013B     		subs	r3, r3, #1
  93 0006 9BB2     		uxth	r3, r3
  94 0008 5380     		strh	r3, [r2, #2]	@ movhi
  95 000a 93B9     		cbnz	r3, .L11
  44:Processes.c   ****     char msg[20];
  96              		.loc 1 44 0
  97 000c 00B5     		push	{lr}
  98              		.cfi_def_cfa_offset 4
  99              		.cfi_offset 14, -4
 100 000e 87B0     		sub	sp, sp, #28
 101              		.cfi_def_cfa_offset 32
  48:Processes.c   ****         sprintf(msg, "Count = %d\r", C_Count++);
 102              		.loc 1 48 0
 103 0010 1346     		mov	r3, r2
 104 0012 4FF47A72 		mov	r2, #1000
 105 0016 5A80     		strh	r2, [r3, #2]	@ movhi
  49:Processes.c   ****         PutStr(msg);
 106              		.loc 1 49 0
 107 0018 1A88     		ldrh	r2, [r3]
 108 001a 511C     		adds	r1, r2, #1
 109 001c 1980     		strh	r1, [r3]	@ movhi
 110 001e 0649     		ldr	r1, .L12+4
 111 0020 01A8     		add	r0, sp, #4
 112 0022 FFF7FEFF 		bl	sprintf
 113              	.LVL1:
  50:Processes.c   **** //        Pin_LED_Write(~(Pin_LED_Read()));    // toggle the LED
 114              		.loc 1 50 0
 115 0026 01A8     		add	r0, sp, #4
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 5


 116 0028 FFF7FEFF 		bl	USB_PutString
 117              	.LVL2:
  53:Processes.c   **** 
 118              		.loc 1 53 0
 119 002c 07B0     		add	sp, sp, #28
 120              		.cfi_def_cfa_offset 4
 121              		@ sp needed
 122 002e 5DF804FB 		ldr	pc, [sp], #4
 123              	.L11:
 124              		.cfi_def_cfa_offset 0
 125              		.cfi_restore 14
 126 0032 7047     		bx	lr
 127              	.L13:
 128              		.align	2
 129              	.L12:
 130 0034 00000000 		.word	.LANCHOR0
 131 0038 00000000 		.word	.LC0
 132              		.cfi_endproc
 133              	.LFE65:
 134              		.size	CountProcess, .-CountProcess
 135              		.section	.text.InitAlphaProcess,"ax",%progbits
 136              		.align	2
 137              		.global	InitAlphaProcess
 138              		.thumb
 139              		.thumb_func
 140              		.type	InitAlphaProcess, %function
 141              	InitAlphaProcess:
 142              	.LFB66:
  59:Processes.c   ****     A_Count = 0;
 143              		.loc 1 59 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
  60:Processes.c   ****     S_Count = 1000;
 148              		.loc 1 60 0
 149 0000 034B     		ldr	r3, .L15
 150 0002 0022     		movs	r2, #0
 151 0004 1A71     		strb	r2, [r3, #4]
  61:Processes.c   **** }
 152              		.loc 1 61 0
 153 0006 4FF47A72 		mov	r2, #1000
 154 000a DA80     		strh	r2, [r3, #6]	@ movhi
 155 000c 7047     		bx	lr
 156              	.L16:
 157 000e 00BF     		.align	2
 158              	.L15:
 159 0010 00000000 		.word	.LANCHOR0
 160              		.cfi_endproc
 161              	.LFE66:
 162              		.size	InitAlphaProcess, .-InitAlphaProcess
 163              		.section	.text.AlphaProcess,"ax",%progbits
 164              		.align	2
 165              		.global	AlphaProcess
 166              		.thumb
 167              		.thumb_func
 168              		.type	AlphaProcess, %function
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 6


 169              	AlphaProcess:
 170              	.LFB67:
  65:Processes.c   **** 
 171              		.loc 1 65 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 24
 174              		@ frame_needed = 0, uses_anonymous_args = 0
  68:Processes.c   ****     {
 175              		.loc 1 68 0
 176 0000 0F4A     		ldr	r2, .L21
 177 0002 D388     		ldrh	r3, [r2, #6]
 178 0004 013B     		subs	r3, r3, #1
 179 0006 9BB2     		uxth	r3, r3
 180 0008 D380     		strh	r3, [r2, #6]	@ movhi
 181 000a BBB9     		cbnz	r3, .L20
  65:Processes.c   **** 
 182              		.loc 1 65 0
 183 000c 10B5     		push	{r4, lr}
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 14, -4
 187 000e 86B0     		sub	sp, sp, #24
 188              		.cfi_def_cfa_offset 32
  70:Processes.c   ****         sprintf(msg, "Alpha = %c\r", (A_Count + 'A'));
 189              		.loc 1 70 0
 190 0010 1446     		mov	r4, r2
 191 0012 4FF47A73 		mov	r3, #1000
 192 0016 D380     		strh	r3, [r2, #6]	@ movhi
  71:Processes.c   ****         PutStr(msg);
 193              		.loc 1 71 0
 194 0018 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 195 001a 4132     		adds	r2, r2, #65
 196 001c 0949     		ldr	r1, .L21+4
 197 001e 01A8     		add	r0, sp, #4
 198 0020 FFF7FEFF 		bl	sprintf
 199              	.LVL3:
  72:Processes.c   ****         if(A_Count++ > 56) A_Count = 0;
 200              		.loc 1 72 0
 201 0024 01A8     		add	r0, sp, #4
 202 0026 FFF7FEFF 		bl	USB_PutString
 203              	.LVL4:
  73:Processes.c   **** //        Pin_LED_Write(~(Pin_LED_Read()));    // toggle the LED
 204              		.loc 1 73 0
 205 002a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 206 002c 5A1C     		adds	r2, r3, #1
 207 002e 2271     		strb	r2, [r4, #4]
 208 0030 382B     		cmp	r3, #56
 209 0032 01D9     		bls	.L17
  73:Processes.c   **** //        Pin_LED_Write(~(Pin_LED_Read()));    // toggle the LED
 210              		.loc 1 73 0 is_stmt 0 discriminator 1
 211 0034 0022     		movs	r2, #0
 212 0036 2271     		strb	r2, [r4, #4]
 213              	.L17:
  76:Processes.c   **** 
 214              		.loc 1 76 0 is_stmt 1
 215 0038 06B0     		add	sp, sp, #24
 216              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 7


 217              		@ sp needed
 218 003a 10BD     		pop	{r4, pc}
 219              	.L20:
 220              		.cfi_def_cfa_offset 0
 221              		.cfi_restore 4
 222              		.cfi_restore 14
 223 003c 7047     		bx	lr
 224              	.L22:
 225 003e 00BF     		.align	2
 226              	.L21:
 227 0040 00000000 		.word	.LANCHOR0
 228 0044 0C000000 		.word	.LC1
 229              		.cfi_endproc
 230              	.LFE67:
 231              		.size	AlphaProcess, .-AlphaProcess
 232              		.section	.text.Init_TC_StateMachine,"ax",%progbits
 233              		.align	2
 234              		.global	Init_TC_StateMachine
 235              		.thumb
 236              		.thumb_func
 237              		.type	Init_TC_StateMachine, %function
 238              	Init_TC_StateMachine:
 239              	.LFB68:
  86:Processes.c   ****     if(Process_Running(FastProcess, TC_StateMachine))
 240              		.loc 1 86 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 08B5     		push	{r3, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 3, -8
 247              		.cfi_offset 14, -4
  87:Processes.c   ****     {
 248              		.loc 1 87 0
 249 0002 0A49     		ldr	r1, .L27
 250 0004 0A48     		ldr	r0, .L27+4
 251 0006 FFF7FEFF 		bl	Process_Running
 252              	.LVL5:
 253 000a 18B1     		cbz	r0, .L24
  89:Processes.c   ****     } else {
 254              		.loc 1 89 0
 255 000c 0948     		ldr	r0, .L27+8
 256 000e FFF7FEFF 		bl	USB_PutString
 257              	.LVL6:
 258 0012 08BD     		pop	{r3, pc}
 259              	.L24:
  93:Processes.c   ****         PutStr("TC_State Machine Started");
 260              		.loc 1 93 0
 261 0014 0549     		ldr	r1, .L27
 262 0016 0648     		ldr	r0, .L27+4
 263 0018 FFF7FEFF 		bl	Add_Process
 264              	.LVL7:
  94:Processes.c   ****         TC_SM = &TC_Fault;
 265              		.loc 1 94 0
 266 001c 0648     		ldr	r0, .L27+12
 267 001e FFF7FEFF 		bl	USB_PutString
 268              	.LVL8:
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 8


  95:Processes.c   ****     } 
 269              		.loc 1 95 0
 270 0022 064A     		ldr	r2, .L27+16
 271 0024 064B     		ldr	r3, .L27+20
 272 0026 1A60     		str	r2, [r3]
 273 0028 08BD     		pop	{r3, pc}
 274              	.L28:
 275 002a 00BF     		.align	2
 276              	.L27:
 277 002c 00000000 		.word	TC_StateMachine
 278 0030 00000000 		.word	FastProcess
 279 0034 18000000 		.word	.LC2
 280 0038 3C000000 		.word	.LC3
 281 003c 00000000 		.word	TC_Fault
 282 0040 00000000 		.word	TC_SM
 283              		.cfi_endproc
 284              	.LFE68:
 285              		.size	Init_TC_StateMachine, .-Init_TC_StateMachine
 286              		.section	.text.TC_Clamp_AirBlast,"ax",%progbits
 287              		.align	2
 288              		.global	TC_Clamp_AirBlast
 289              		.thumb
 290              		.thumb_func
 291              		.type	TC_Clamp_AirBlast, %function
 292              	TC_Clamp_AirBlast:
 293              	.LFB78:
 105:Processes.c   **** }
 106:Processes.c   **** 
 107:Processes.c   **** // state machine states
 108:Processes.c   **** void TC_IDLE(void)
 109:Processes.c   **** {
 110:Processes.c   ****     TC_STATE = TC_STATE_IDLE;
 111:Processes.c   ****     // waiting for a command to start a motion
 112:Processes.c   ****     // check for an error condition.
 113:Processes.c   ****     if(In_Fault() == 1)
 114:Processes.c   ****     {
 115:Processes.c   ****         TC_SM = &TC_Fault;
 116:Processes.c   ****     }
 117:Processes.c   **** }
 118:Processes.c   **** 
 119:Processes.c   **** void TC_Arm_Move_In_Start(void)
 120:Processes.c   **** {
 121:Processes.c   ****     TC_STATE = TC_STATE_ARM_IN_START;
 122:Processes.c   ****     if((SENSE_PORT & Pin_Tool_Arm_Out_MASK) != 0)  // check for tool to get off the Arm Out sensor
 123:Processes.c   ****     {
 124:Processes.c   ****         TC_SM = &TC_Arm_Move_In;    // change the state to Arm Move In
 125:Processes.c   ****         TC_Set_Delay(ARM_MOVE_TIME);
 126:Processes.c   ****     }
 127:Processes.c   ****     RunningTooLong();
 128:Processes.c   **** }
 129:Processes.c   **** 
 130:Processes.c   **** void TC_Arm_Move_In(void)
 131:Processes.c   **** {
 132:Processes.c   ****     TC_STATE = TC_STATE_ARM_IN;
 133:Processes.c   ****     RunningTooLong();
 134:Processes.c   ****     if((SENSE_PORT & Pin_Tool_Arm_In_MASK) == 0)   //  detect Arm In (retracted
 135:Processes.c   ****     {
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 9


 136:Processes.c   ****         TC_Set_Delay(MOTOR_STOP_DELAY);  // change the state to motor brake - not really a brake, j
 137:Processes.c   ****         TC_SM = TC_Motor_Brake;
 138:Processes.c   ****     }
 139:Processes.c   **** }
 140:Processes.c   **** 
 141:Processes.c   **** void TC_Arm_Move_Out_Start(void)
 142:Processes.c   **** {
 143:Processes.c   ****     TC_STATE = TC_STATE_ARM_OUT_START;
 144:Processes.c   ****     if((SENSE_PORT & Pin_Tool_Arm_In_MASK) == 0)  // check for tool to get off the tool back sensor
 145:Processes.c   ****     {
 146:Processes.c   ****         TC_SM = &TC_Arm_Move_Out;    // change the state to Arm Move In
 147:Processes.c   ****         TC_Set_Delay(ARM_MOVE_TIME);
 148:Processes.c   ****     }
 149:Processes.c   ****     RunningTooLong();   // took too long to get off the sensor
 150:Processes.c   **** }
 151:Processes.c   **** 
 152:Processes.c   **** void TC_Arm_Move_Out(void)
 153:Processes.c   **** {
 154:Processes.c   ****     TC_STATE = TC_STATE_ARM_OUT;
 155:Processes.c   ****     RunningTooLong();    
 156:Processes.c   ****     if((SENSE_PORT & Pin_Tool_Arm_Out_MASK) == 0)   //  detect Arm Back
 157:Processes.c   ****     {
 158:Processes.c   ****         TC_Set_Delay(MOTOR_STOP_DELAY);  // change the state to motor brake - not really a brake, j
 159:Processes.c   ****         TC_SM = TC_Motor_Brake;
 160:Processes.c   ****     }
 161:Processes.c   **** }
 162:Processes.c   **** 
 163:Processes.c   **** void TC_Motor_Brake(void)
 164:Processes.c   **** {
 165:Processes.c   ****     TC_STATE = TC_STATE_BRAKE;
 166:Processes.c   ****     if((MS_Time - TC_DelayStart) > TC_Delay)
 167:Processes.c   ****     {
 168:Processes.c   ****         Motors_Off();   // after a short delay then all motors off, change state to Idle
 169:Processes.c   ****         TC_SM = &TC_IDLE;
 170:Processes.c   ****     }
 171:Processes.c   **** }
 172:Processes.c   **** 
 173:Processes.c   **** void TC_Carousel_Moving_Start(void)
 174:Processes.c   **** {
 175:Processes.c   ****     TC_STATE = TC_STATE_CAROUSEL_START;
 176:Processes.c   ****      // look for both sensor to be high, ie. off of he currrent tool position
 177:Processes.c   ****     if((SENSE_PORT & Pin_Tool_Count_MASK) != 0)   // stay in this state until off the sensor or tim
 178:Processes.c   ****     {
 179:Processes.c   ****         TC_SM = &TC_Carousel_Moving;    // change status to carousel moving
 180:Processes.c   ****         TC_Set_Delay(CAROUSEL_MOVING_DELAY);
 181:Processes.c   ****         // PutStr("P_Car 1\n");
 182:Processes.c   ****     }
 183:Processes.c   ****     RunningTooLong();   // too long on sensor? then timeout ie. next state is Fault...
 184:Processes.c   **** }
 185:Processes.c   **** 
 186:Processes.c   **** void TC_Carousel_Moving(void)
 187:Processes.c   **** {
 188:Processes.c   ****     TC_STATE = TC_STATE_CAROUSEL;
 189:Processes.c   ****     RunningTooLong();   // if timeout then next state is Fault.
 190:Processes.c   ****     
 191:Processes.c   ****     if((SENSE_PORT & Pin_Tool_Count_MASK) == 0) // look for next sensor detect 
 192:Processes.c   ****     {
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 10


 193:Processes.c   ****         // PutStr("P_Car 2\n");
 194:Processes.c   ****         Current_Tool = Current_Tool + Carousel_Dir;     // Increment/decrement Current Tool positio
 195:Processes.c   ****         if(Current_Tool > NUMBER_OF_TOOLS)              // There has to be some modulus stuff here 
 196:Processes.c   ****         {
 197:Processes.c   ****             Current_Tool = 1;
 198:Processes.c   ****         }
 199:Processes.c   ****         else if(Current_Tool < 1)
 200:Processes.c   ****         {
 201:Processes.c   ****             Current_Tool = NUMBER_OF_TOOLS;
 202:Processes.c   ****         }
 203:Processes.c   ****         
 204:Processes.c   ****         if((Current_Tool == 1) && ((SENSE_PORT & Pin_Tool_1_MASK) != 0))    // if the current tool 
 205:Processes.c   ****         {   
 206:Processes.c   ****             // PutStr("Not on tool 1\n");
 207:Processes.c   ****             TC_SM = &TC_Fault;
 208:Processes.c   ****             Motors_Off();
 209:Processes.c   ****         }
 210:Processes.c   ****         if(Current_Tool == Target_Tool)    // if sensor detected position is destination, then done
 211:Processes.c   ****         {
 212:Processes.c   ****             // stop the tool
 213:Processes.c   ****             TC_Set_Delay(CAROUSEL_STOP_DELAY);
 214:Processes.c   ****             TC_SM = &TC_Motor_Brake;
 215:Processes.c   ****         }
 216:Processes.c   ****         else
 217:Processes.c   ****         {
 218:Processes.c   ****             TC_Set_Delay(CAROUSEL_START_DELAY); // otherwise continue - back to moving start until 
 219:Processes.c   ****             TC_SM = &TC_Carousel_Moving_Start;
 220:Processes.c   ****             // PutStr("P_Car Restart\n");
 221:Processes.c   ****         }
 222:Processes.c   ****     }  
 223:Processes.c   **** }
 224:Processes.c   **** 
 225:Processes.c   **** void TC_Clamp_AirBlast(void)
 226:Processes.c   **** {
 294              		.loc 1 226 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 227:Processes.c   ****     TC_STATE = TC_STATE_AIR_BLAST;
 299              		.loc 1 227 0
 300 0000 0922     		movs	r2, #9
 301 0002 094B     		ldr	r3, .L31
 302 0004 1A70     		strb	r2, [r3]
 228:Processes.c   ****     // clamp is released - Air Blast for XX ms
 229:Processes.c   ****     if((MS_Time - TC_DelayStart) > TC_Delay)
 303              		.loc 1 229 0
 304 0006 094B     		ldr	r3, .L31+4
 305 0008 1B68     		ldr	r3, [r3]
 306 000a 094A     		ldr	r2, .L31+8
 307 000c 9168     		ldr	r1, [r2, #8]
 308 000e 5B1A     		subs	r3, r3, r1
 309 0010 D268     		ldr	r2, [r2, #12]
 310 0012 9342     		cmp	r3, r2
 311 0014 07D9     		bls	.L29
 230:Processes.c   ****     {
 231:Processes.c   ****         // after timeout shut off air and move to IDLE
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 11


 232:Processes.c   ****         TRIAC_PORT &= ~(Pin_Tool_Air_MASK);
 312              		.loc 1 232 0
 313 0016 074A     		ldr	r2, .L31+12
 314 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 315 001a 03F0FD03 		and	r3, r3, #253
 316 001e 1370     		strb	r3, [r2]
 233:Processes.c   ****         TC_SM = &TC_IDLE;
 317              		.loc 1 233 0
 318 0020 054A     		ldr	r2, .L31+16
 319 0022 064B     		ldr	r3, .L31+20
 320 0024 1A60     		str	r2, [r3]
 321              	.L29:
 322 0026 7047     		bx	lr
 323              	.L32:
 324              		.align	2
 325              	.L31:
 326 0028 00000000 		.word	TC_STATE
 327 002c 00000000 		.word	MS_Time
 328 0030 00000000 		.word	.LANCHOR0
 329 0034 30510040 		.word	1073762608
 330 0038 00000000 		.word	TC_IDLE
 331 003c 00000000 		.word	TC_SM
 332              		.cfi_endproc
 333              	.LFE78:
 334              		.size	TC_Clamp_AirBlast, .-TC_Clamp_AirBlast
 335              		.section	.text.TC_Set_Delay,"ax",%progbits
 336              		.align	2
 337              		.global	TC_Set_Delay
 338              		.thumb
 339              		.thumb_func
 340              		.type	TC_Set_Delay, %function
 341              	TC_Set_Delay:
 342              	.LFB81:
 234:Processes.c   ****     }
 235:Processes.c   **** }
 236:Processes.c   **** 
 237:Processes.c   **** void TC_Fault(void)
 238:Processes.c   **** {
 239:Processes.c   ****     TC_STATE = TC_STATE_FAULT;
 240:Processes.c   ****     // Fault!
 241:Processes.c   ****     // There are two ways to get out of the fault state.
 242:Processes.c   ****     // the first is via a HOME command 
 243:Processes.c   ****     // the second is for the tool changer to be in the HOME position with no faults.
 244:Processes.c   ****     if((At_Home() == 1) && (In_Fault() == 0))
 245:Processes.c   ****     {
 246:Processes.c   ****         Set_Current_Tool(1);    //this is needed for coming out of fault on startup 
 247:Processes.c   ****         TC_SM = &TC_IDLE;   // change state back to idle
 248:Processes.c   ****         Motors_Off();       // make sure the motors are off... 
 249:Processes.c   ****     }
 250:Processes.c   **** }
 251:Processes.c   **** 
 252:Processes.c   **** void TC_Test_Delay(void)
 253:Processes.c   **** {
 254:Processes.c   ****     TC_STATE = TC_STATE_TEST;
 255:Processes.c   ****     
 256:Processes.c   ****     if((MS_Time - TC_DelayStart) > TC_Delay)
 257:Processes.c   ****     {
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 12


 258:Processes.c   ****         // when done move state back to IDLE
 259:Processes.c   ****         Motors_Off();   // turn everything that can move off first... 
 260:Processes.c   ****         TC_SM = &TC_IDLE;    
 261:Processes.c   ****         PutStr("Delay Done\n");
 262:Processes.c   ****     }
 263:Processes.c   **** }
 264:Processes.c   **** 
 265:Processes.c   **** void TC_Set_Delay(uint32 delay)
 266:Processes.c   **** {
 343              		.loc 1 266 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 348              	.LVL9:
 267:Processes.c   ****     TC_Delay = delay;
 349              		.loc 1 267 0
 350 0000 024B     		ldr	r3, .L34
 351 0002 D860     		str	r0, [r3, #12]
 268:Processes.c   ****     TC_DelayStart = MS_Time;
 352              		.loc 1 268 0
 353 0004 024A     		ldr	r2, .L34+4
 354 0006 1268     		ldr	r2, [r2]
 355 0008 9A60     		str	r2, [r3, #8]
 356 000a 7047     		bx	lr
 357              	.L35:
 358              		.align	2
 359              	.L34:
 360 000c 00000000 		.word	.LANCHOR0
 361 0010 00000000 		.word	MS_Time
 362              		.cfi_endproc
 363              	.LFE81:
 364              		.size	TC_Set_Delay, .-TC_Set_Delay
 365              		.section	.text.Motors_Off,"ax",%progbits
 366              		.align	2
 367              		.global	Motors_Off
 368              		.thumb
 369              		.thumb_func
 370              		.type	Motors_Off, %function
 371              	Motors_Off:
 372              	.LFB82:
 269:Processes.c   **** }
 270:Processes.c   **** 
 271:Processes.c   **** // Turn all the motors off - precursor to switching back to Idle or fault
 272:Processes.c   **** void Motors_Off(void)
 273:Processes.c   **** {
 373              		.loc 1 273 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 274:Processes.c   ****     // since all motors are on the same port... 
 275:Processes.c   ****     TRIAC_PORT &= ~(Pin_Tool_Arm_FWD_MASK | Pin_Tool_Arm_REV_MASK | Pin_Car_FWD_MASK | Pin_Car_REV_
 378              		.loc 1 275 0
 379 0000 024A     		ldr	r2, .L37
 380 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 381 0004 03F00703 		and	r3, r3, #7
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 13


 382 0008 1370     		strb	r3, [r2]
 383 000a 7047     		bx	lr
 384              	.L38:
 385              		.align	2
 386              	.L37:
 387 000c 30510040 		.word	1073762608
 388              		.cfi_endproc
 389              	.LFE82:
 390              		.size	Motors_Off, .-Motors_Off
 391              		.section	.text.TC_Motor_Brake,"ax",%progbits
 392              		.align	2
 393              		.global	TC_Motor_Brake
 394              		.thumb
 395              		.thumb_func
 396              		.type	TC_Motor_Brake, %function
 397              	TC_Motor_Brake:
 398              	.LFB75:
 164:Processes.c   ****     TC_STATE = TC_STATE_BRAKE;
 399              		.loc 1 164 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403 0000 08B5     		push	{r3, lr}
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 3, -8
 406              		.cfi_offset 14, -4
 165:Processes.c   ****     if((MS_Time - TC_DelayStart) > TC_Delay)
 407              		.loc 1 165 0
 408 0002 0622     		movs	r2, #6
 409 0004 074B     		ldr	r3, .L42
 410 0006 1A70     		strb	r2, [r3]
 166:Processes.c   ****     {
 411              		.loc 1 166 0
 412 0008 074B     		ldr	r3, .L42+4
 413 000a 1B68     		ldr	r3, [r3]
 414 000c 074A     		ldr	r2, .L42+8
 415 000e 9168     		ldr	r1, [r2, #8]
 416 0010 5B1A     		subs	r3, r3, r1
 417 0012 D268     		ldr	r2, [r2, #12]
 418 0014 9342     		cmp	r3, r2
 419 0016 04D9     		bls	.L39
 168:Processes.c   ****         TC_SM = &TC_IDLE;
 420              		.loc 1 168 0
 421 0018 FFF7FEFF 		bl	Motors_Off
 422              	.LVL10:
 169:Processes.c   ****     }
 423              		.loc 1 169 0
 424 001c 044A     		ldr	r2, .L42+12
 425 001e 054B     		ldr	r3, .L42+16
 426 0020 1A60     		str	r2, [r3]
 427              	.L39:
 428 0022 08BD     		pop	{r3, pc}
 429              	.L43:
 430              		.align	2
 431              	.L42:
 432 0024 00000000 		.word	TC_STATE
 433 0028 00000000 		.word	MS_Time
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 14


 434 002c 00000000 		.word	.LANCHOR0
 435 0030 00000000 		.word	TC_IDLE
 436 0034 00000000 		.word	TC_SM
 437              		.cfi_endproc
 438              	.LFE75:
 439              		.size	TC_Motor_Brake, .-TC_Motor_Brake
 440              		.section	.text.TC_Test_Delay,"ax",%progbits
 441              		.align	2
 442              		.global	TC_Test_Delay
 443              		.thumb
 444              		.thumb_func
 445              		.type	TC_Test_Delay, %function
 446              	TC_Test_Delay:
 447              	.LFB80:
 253:Processes.c   ****     TC_STATE = TC_STATE_TEST;
 448              		.loc 1 253 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452 0000 08B5     		push	{r3, lr}
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 3, -8
 455              		.cfi_offset 14, -4
 254:Processes.c   ****     
 456              		.loc 1 254 0
 457 0002 0C22     		movs	r2, #12
 458 0004 094B     		ldr	r3, .L47
 459 0006 1A70     		strb	r2, [r3]
 256:Processes.c   ****     {
 460              		.loc 1 256 0
 461 0008 094B     		ldr	r3, .L47+4
 462 000a 1B68     		ldr	r3, [r3]
 463 000c 094A     		ldr	r2, .L47+8
 464 000e 9168     		ldr	r1, [r2, #8]
 465 0010 5B1A     		subs	r3, r3, r1
 466 0012 D268     		ldr	r2, [r2, #12]
 467 0014 9342     		cmp	r3, r2
 468 0016 07D9     		bls	.L44
 259:Processes.c   ****         TC_SM = &TC_IDLE;    
 469              		.loc 1 259 0
 470 0018 FFF7FEFF 		bl	Motors_Off
 471              	.LVL11:
 260:Processes.c   ****         PutStr("Delay Done\n");
 472              		.loc 1 260 0
 473 001c 064A     		ldr	r2, .L47+12
 474 001e 074B     		ldr	r3, .L47+16
 475 0020 1A60     		str	r2, [r3]
 261:Processes.c   ****     }
 476              		.loc 1 261 0
 477 0022 0748     		ldr	r0, .L47+20
 478 0024 FFF7FEFF 		bl	USB_PutString
 479              	.LVL12:
 480              	.L44:
 481 0028 08BD     		pop	{r3, pc}
 482              	.L48:
 483 002a 00BF     		.align	2
 484              	.L47:
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 15


 485 002c 00000000 		.word	TC_STATE
 486 0030 00000000 		.word	MS_Time
 487 0034 00000000 		.word	.LANCHOR0
 488 0038 00000000 		.word	TC_IDLE
 489 003c 00000000 		.word	TC_SM
 490 0040 58000000 		.word	.LC4
 491              		.cfi_endproc
 492              	.LFE80:
 493              		.size	TC_Test_Delay, .-TC_Test_Delay
 494              		.section	.text.TC_Home_Delay,"ax",%progbits
 495              		.align	2
 496              		.global	TC_Home_Delay
 497              		.thumb
 498              		.thumb_func
 499              		.type	TC_Home_Delay, %function
 500              	TC_Home_Delay:
 501              	.LFB91:
 276:Processes.c   **** }
 277:Processes.c   **** 
 278:Processes.c   **** uint8 Get_Current_Tool(void)
 279:Processes.c   **** {
 280:Processes.c   ****     return Current_Tool;
 281:Processes.c   **** }
 282:Processes.c   **** 
 283:Processes.c   **** void Set_Current_Tool(uint8 tool)
 284:Processes.c   **** {
 285:Processes.c   ****     Current_Tool = tool;
 286:Processes.c   **** }
 287:Processes.c   **** 
 288:Processes.c   **** void Set_Target_Tool(uint8 targ, int8 dir)
 289:Processes.c   **** {
 290:Processes.c   ****     Target_Tool = targ;
 291:Processes.c   ****     Carousel_Dir = dir;
 292:Processes.c   **** }
 293:Processes.c   **** 
 294:Processes.c   **** void TC_Status(void)
 295:Processes.c   **** {
 296:Processes.c   ****     switch(TC_STATE)
 297:Processes.c   ****     {
 298:Processes.c   ****         case TC_STATE_IDLE  : 
 299:Processes.c   ****             PutStr("TC IDLE");
 300:Processes.c   ****             break;
 301:Processes.c   ****         case TC_STATE_ARM_IN_START :
 302:Processes.c   ****         case TC_STATE_ARM_IN :
 303:Processes.c   ****             PutStr("TC ARM REV");
 304:Processes.c   ****             break;
 305:Processes.c   ****         case TC_STATE_ARM_OUT_START :
 306:Processes.c   ****         case TC_STATE_ARM_OUT :
 307:Processes.c   ****             PutStr("TC ARM FWD");
 308:Processes.c   ****             break;
 309:Processes.c   ****         case TC_STATE_BRAKE :
 310:Processes.c   ****             PutStr("TC BRAKE");
 311:Processes.c   ****             break;
 312:Processes.c   ****         case TC_STATE_CAROUSEL_START :
 313:Processes.c   ****         case TC_STATE_CAROUSEL       :
 314:Processes.c   ****             PutStr("TC CAROUSEL");
 315:Processes.c   ****             break;
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 16


 316:Processes.c   ****         case TC_STATE_AIR_BLAST :
 317:Processes.c   ****             PutStr("TC AIR BLAST");
 318:Processes.c   ****             break;
 319:Processes.c   ****         case TC_STATE_CLAMP :
 320:Processes.c   ****             PutStr("TC CLAMP");
 321:Processes.c   ****             break;
 322:Processes.c   ****         case TC_STATE_FAULT :
 323:Processes.c   ****             PutStr("TC FAULT");
 324:Processes.c   ****             break;
 325:Processes.c   ****         case TC_STATE_TEST :
 326:Processes.c   ****             PutStr("TC TEST");
 327:Processes.c   ****             break;
 328:Processes.c   ****     }
 329:Processes.c   **** }
 330:Processes.c   **** // is the tool changer at the home position? 1 = yes, 0 = no
 331:Processes.c   **** int At_Home(void)
 332:Processes.c   **** {
 333:Processes.c   ****     if((SENSE_PORT & (Pin_Tool_1_MASK | Pin_Tool_Count_MASK | Pin_Tool_Arm_In_MASK)) == 0)    // al
 334:Processes.c   ****     {
 335:Processes.c   ****         return 1;   // at home
 336:Processes.c   ****     } 
 337:Processes.c   ****     else 
 338:Processes.c   ****     {
 339:Processes.c   ****         return 0;   // not home
 340:Processes.c   ****     }
 341:Processes.c   **** }
 342:Processes.c   **** 
 343:Processes.c   **** // is there an existing fault condition? 1 = yes, 0 = no
 344:Processes.c   **** int In_Fault(void)
 345:Processes.c   **** {
 346:Processes.c   ****     uint8 fault = (FAULT_PORT & (Pin_V_Mon2_MASK | Pin_AC_Mon_MASK | Pin_ESTOP_MASK));
 347:Processes.c   ****     if(fault == (Pin_V_Mon2_MASK | Pin_ESTOP_MASK))
 348:Processes.c   ****     {
 349:Processes.c   ****         return 0;   // no fault
 350:Processes.c   ****     }
 351:Processes.c   ****     else
 352:Processes.c   ****     {
 353:Processes.c   ****         return 1;   // in fault
 354:Processes.c   ****     }
 355:Processes.c   **** }
 356:Processes.c   **** 
 357:Processes.c   **** void TC_Home_Arm(void)
 358:Processes.c   **** {
 359:Processes.c   ****     TC_STATE = TC_STATE_HOME_ARM;
 360:Processes.c   ****     RunningTooLong();
 361:Processes.c   ****     if((SENSE_PORT & Pin_Tool_Arm_In_MASK) == 0)   //  detect Arm Back
 362:Processes.c   ****     {
 363:Processes.c   ****         TC_Set_Delay(MOTOR_STOP_DELAY);  // change the state to motor brake - not really a brake, j
 364:Processes.c   ****         TC_SM = TC_Home_Delay;
 365:Processes.c   ****     }
 366:Processes.c   **** }
 367:Processes.c   **** 
 368:Processes.c   **** void TC_Home_Carousel(void)
 369:Processes.c   **** {
 370:Processes.c   ****     RunningTooLong();
 371:Processes.c   ****     // move until the carousel reaches tool 1
 372:Processes.c   ****     if((SENSE_PORT & (Pin_Tool_Count_MASK | Pin_Tool_1_MASK)) == 0) // is the carousel at tool 1?
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 17


 373:Processes.c   ****     {
 374:Processes.c   ****         TC_Set_Delay(CAROUSEL_STOP_DELAY);
 375:Processes.c   ****         TC_SM = &TC_Motor_Brake;
 376:Processes.c   ****         Current_Tool = 1;   // current tool reset to 1! 
 377:Processes.c   ****     }
 378:Processes.c   **** }
 379:Processes.c   **** 
 380:Processes.c   **** void TC_Home_Delay(void)
 381:Processes.c   **** {
 502              		.loc 1 381 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506 0000 08B5     		push	{r3, lr}
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 3, -8
 509              		.cfi_offset 14, -4
 382:Processes.c   ****     TC_STATE = TC_STATE_BRAKE;  // yes this really isn't the correct state...
 510              		.loc 1 382 0
 511 0002 0622     		movs	r2, #6
 512 0004 144B     		ldr	r3, .L53
 513 0006 1A70     		strb	r2, [r3]
 383:Processes.c   ****     if((MS_Time - TC_DelayStart) > TC_Delay)
 514              		.loc 1 383 0
 515 0008 144B     		ldr	r3, .L53+4
 516 000a 1B68     		ldr	r3, [r3]
 517 000c 144A     		ldr	r2, .L53+8
 518 000e 9168     		ldr	r1, [r2, #8]
 519 0010 5B1A     		subs	r3, r3, r1
 520 0012 D268     		ldr	r2, [r2, #12]
 521 0014 9342     		cmp	r3, r2
 522 0016 1DD9     		bls	.L49
 384:Processes.c   ****     {
 385:Processes.c   ****         Motors_Off();   // after a short delay then all motors off, change state to TC_Home_Carouse
 523              		.loc 1 385 0
 524 0018 FFF7FEFF 		bl	Motors_Off
 525              	.LVL13:
 386:Processes.c   ****         
 387:Processes.c   ****         if((SENSE_PORT & (Pin_Tool_Count_MASK | Pin_Tool_1_MASK)) == 0) // check for already at Too
 526              		.loc 1 387 0
 527 001c 114B     		ldr	r3, .L53+12
 528 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 529 0020 13F0050F 		tst	r3, #5
 530 0024 06D1     		bne	.L51
 388:Processes.c   ****         {
 389:Processes.c   ****             TC_SM = &TC_IDLE;
 531              		.loc 1 389 0
 532 0026 104A     		ldr	r2, .L53+16
 533 0028 104B     		ldr	r3, .L53+20
 534 002a 1A60     		str	r2, [r3]
 390:Processes.c   ****             Current_Tool = 1;
 535              		.loc 1 390 0
 536 002c 0122     		movs	r2, #1
 537 002e 104B     		ldr	r3, .L53+24
 538 0030 1A70     		strb	r2, [r3]
 539 0032 08BD     		pop	{r3, pc}
 540              	.L51:
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 18


 391:Processes.c   ****         }
 392:Processes.c   ****         else
 393:Processes.c   ****         {
 394:Processes.c   ****             // start the carousel move
 395:Processes.c   ****             TC_Set_Delay(CAROUSEL_HOME_DELAY);
 541              		.loc 1 395 0
 542 0034 42F21070 		movw	r0, #10000
 543 0038 FFF7FEFF 		bl	TC_Set_Delay
 544              	.LVL14:
 396:Processes.c   ****             TC_SM = &TC_Home_Carousel; 
 545              		.loc 1 396 0
 546 003c 0D4A     		ldr	r2, .L53+28
 547 003e 0B4B     		ldr	r3, .L53+20
 548 0040 1A60     		str	r2, [r3]
 397:Processes.c   ****             TRIAC_PORT &= ~(Pin_Car_REV_MASK);  // make sure that REV is off!
 549              		.loc 1 397 0
 550 0042 0D4B     		ldr	r3, .L53+32
 551 0044 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 552 0046 02F0F702 		and	r2, r2, #247
 553 004a 1A70     		strb	r2, [r3]
 398:Processes.c   ****             TRIAC_PORT |= Pin_Car_FWD_MASK; // start moving the carousel forward
 554              		.loc 1 398 0
 555 004c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 556 004e 42F01002 		orr	r2, r2, #16
 557 0052 1A70     		strb	r2, [r3]
 558              	.L49:
 559 0054 08BD     		pop	{r3, pc}
 560              	.L54:
 561 0056 00BF     		.align	2
 562              	.L53:
 563 0058 00000000 		.word	TC_STATE
 564 005c 00000000 		.word	MS_Time
 565 0060 00000000 		.word	.LANCHOR0
 566 0064 01510040 		.word	1073762561
 567 0068 00000000 		.word	TC_IDLE
 568 006c 00000000 		.word	TC_SM
 569 0070 00000000 		.word	Current_Tool
 570 0074 00000000 		.word	TC_Home_Carousel
 571 0078 30510040 		.word	1073762608
 572              		.cfi_endproc
 573              	.LFE91:
 574              		.size	TC_Home_Delay, .-TC_Home_Delay
 575              		.section	.text.Get_Current_Tool,"ax",%progbits
 576              		.align	2
 577              		.global	Get_Current_Tool
 578              		.thumb
 579              		.thumb_func
 580              		.type	Get_Current_Tool, %function
 581              	Get_Current_Tool:
 582              	.LFB83:
 279:Processes.c   ****     return Current_Tool;
 583              		.loc 1 279 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              		@ link register save eliminated.
 281:Processes.c   **** 
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 19


 588              		.loc 1 281 0
 589 0000 014B     		ldr	r3, .L56
 590 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 591 0004 7047     		bx	lr
 592              	.L57:
 593 0006 00BF     		.align	2
 594              	.L56:
 595 0008 00000000 		.word	Current_Tool
 596              		.cfi_endproc
 597              	.LFE83:
 598              		.size	Get_Current_Tool, .-Get_Current_Tool
 599              		.section	.text.Set_Current_Tool,"ax",%progbits
 600              		.align	2
 601              		.global	Set_Current_Tool
 602              		.thumb
 603              		.thumb_func
 604              		.type	Set_Current_Tool, %function
 605              	Set_Current_Tool:
 606              	.LFB84:
 284:Processes.c   ****     Current_Tool = tool;
 607              		.loc 1 284 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 612              	.LVL15:
 285:Processes.c   **** }
 613              		.loc 1 285 0
 614 0000 014B     		ldr	r3, .L59
 615 0002 1870     		strb	r0, [r3]
 616 0004 7047     		bx	lr
 617              	.L60:
 618 0006 00BF     		.align	2
 619              	.L59:
 620 0008 00000000 		.word	Current_Tool
 621              		.cfi_endproc
 622              	.LFE84:
 623              		.size	Set_Current_Tool, .-Set_Current_Tool
 624              		.section	.text.Set_Target_Tool,"ax",%progbits
 625              		.align	2
 626              		.global	Set_Target_Tool
 627              		.thumb
 628              		.thumb_func
 629              		.type	Set_Target_Tool, %function
 630              	Set_Target_Tool:
 631              	.LFB85:
 289:Processes.c   ****     Target_Tool = targ;
 632              		.loc 1 289 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 637              	.LVL16:
 290:Processes.c   ****     Carousel_Dir = dir;
 638              		.loc 1 290 0
 639 0000 024B     		ldr	r3, .L62
 640 0002 1870     		strb	r0, [r3]
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 20


 291:Processes.c   **** }
 641              		.loc 1 291 0
 642 0004 024B     		ldr	r3, .L62+4
 643 0006 1970     		strb	r1, [r3]
 644 0008 7047     		bx	lr
 645              	.L63:
 646 000a 00BF     		.align	2
 647              	.L62:
 648 000c 00000000 		.word	Target_Tool
 649 0010 00000000 		.word	Carousel_Dir
 650              		.cfi_endproc
 651              	.LFE85:
 652              		.size	Set_Target_Tool, .-Set_Target_Tool
 653              		.section	.text.TC_Status,"ax",%progbits
 654              		.align	2
 655              		.global	TC_Status
 656              		.thumb
 657              		.thumb_func
 658              		.type	TC_Status, %function
 659              	TC_Status:
 660              	.LFB86:
 295:Processes.c   ****     switch(TC_STATE)
 661              		.loc 1 295 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665 0000 08B5     		push	{r3, lr}
 666              		.cfi_def_cfa_offset 8
 667              		.cfi_offset 3, -8
 668              		.cfi_offset 14, -4
 296:Processes.c   ****     {
 669              		.loc 1 296 0
 670 0002 184B     		ldr	r3, .L77
 671 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 672 0006 013B     		subs	r3, r3, #1
 673 0008 0B2B     		cmp	r3, #11
 674 000a 2AD8     		bhi	.L64
 675 000c DFE803F0 		tbb	[pc, r3]
 676              	.L67:
 677 0010 06       		.byte	(.L66-.L67)/2
 678 0011 0A       		.byte	(.L68-.L67)/2
 679 0012 0A       		.byte	(.L68-.L67)/2
 680 0013 0E       		.byte	(.L69-.L67)/2
 681 0014 0E       		.byte	(.L69-.L67)/2
 682 0015 12       		.byte	(.L70-.L67)/2
 683 0016 16       		.byte	(.L71-.L67)/2
 684 0017 16       		.byte	(.L71-.L67)/2
 685 0018 1A       		.byte	(.L72-.L67)/2
 686 0019 1E       		.byte	(.L73-.L67)/2
 687 001a 22       		.byte	(.L74-.L67)/2
 688 001b 26       		.byte	(.L75-.L67)/2
 689              		.p2align 1
 690              	.L66:
 299:Processes.c   ****             break;
 691              		.loc 1 299 0
 692 001c 1248     		ldr	r0, .L77+4
 693 001e FFF7FEFF 		bl	USB_PutString
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 21


 694              	.LVL17:
 300:Processes.c   ****         case TC_STATE_ARM_IN_START :
 695              		.loc 1 300 0
 696 0022 08BD     		pop	{r3, pc}
 697              	.L68:
 303:Processes.c   ****             break;
 698              		.loc 1 303 0
 699 0024 1148     		ldr	r0, .L77+8
 700 0026 FFF7FEFF 		bl	USB_PutString
 701              	.LVL18:
 304:Processes.c   ****         case TC_STATE_ARM_OUT_START :
 702              		.loc 1 304 0
 703 002a 08BD     		pop	{r3, pc}
 704              	.L69:
 307:Processes.c   ****             break;
 705              		.loc 1 307 0
 706 002c 1048     		ldr	r0, .L77+12
 707 002e FFF7FEFF 		bl	USB_PutString
 708              	.LVL19:
 308:Processes.c   ****         case TC_STATE_BRAKE :
 709              		.loc 1 308 0
 710 0032 08BD     		pop	{r3, pc}
 711              	.L70:
 310:Processes.c   ****             break;
 712              		.loc 1 310 0
 713 0034 0F48     		ldr	r0, .L77+16
 714 0036 FFF7FEFF 		bl	USB_PutString
 715              	.LVL20:
 311:Processes.c   ****         case TC_STATE_CAROUSEL_START :
 716              		.loc 1 311 0
 717 003a 08BD     		pop	{r3, pc}
 718              	.L71:
 314:Processes.c   ****             break;
 719              		.loc 1 314 0
 720 003c 0E48     		ldr	r0, .L77+20
 721 003e FFF7FEFF 		bl	USB_PutString
 722              	.LVL21:
 315:Processes.c   ****         case TC_STATE_AIR_BLAST :
 723              		.loc 1 315 0
 724 0042 08BD     		pop	{r3, pc}
 725              	.L72:
 317:Processes.c   ****             break;
 726              		.loc 1 317 0
 727 0044 0D48     		ldr	r0, .L77+24
 728 0046 FFF7FEFF 		bl	USB_PutString
 729              	.LVL22:
 318:Processes.c   ****         case TC_STATE_CLAMP :
 730              		.loc 1 318 0
 731 004a 08BD     		pop	{r3, pc}
 732              	.L73:
 320:Processes.c   ****             break;
 733              		.loc 1 320 0
 734 004c 0C48     		ldr	r0, .L77+28
 735 004e FFF7FEFF 		bl	USB_PutString
 736              	.LVL23:
 321:Processes.c   ****         case TC_STATE_FAULT :
 737              		.loc 1 321 0
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 22


 738 0052 08BD     		pop	{r3, pc}
 739              	.L74:
 323:Processes.c   ****             break;
 740              		.loc 1 323 0
 741 0054 0B48     		ldr	r0, .L77+32
 742 0056 FFF7FEFF 		bl	USB_PutString
 743              	.LVL24:
 324:Processes.c   ****         case TC_STATE_TEST :
 744              		.loc 1 324 0
 745 005a 08BD     		pop	{r3, pc}
 746              	.L75:
 326:Processes.c   ****             break;
 747              		.loc 1 326 0
 748 005c 0A48     		ldr	r0, .L77+36
 749 005e FFF7FEFF 		bl	USB_PutString
 750              	.LVL25:
 751              	.L64:
 752 0062 08BD     		pop	{r3, pc}
 753              	.L78:
 754              		.align	2
 755              	.L77:
 756 0064 00000000 		.word	TC_STATE
 757 0068 64000000 		.word	.LC5
 758 006c 6C000000 		.word	.LC6
 759 0070 78000000 		.word	.LC7
 760 0074 84000000 		.word	.LC8
 761 0078 90000000 		.word	.LC9
 762 007c 9C000000 		.word	.LC10
 763 0080 AC000000 		.word	.LC11
 764 0084 B8000000 		.word	.LC12
 765 0088 C4000000 		.word	.LC13
 766              		.cfi_endproc
 767              	.LFE86:
 768              		.size	TC_Status, .-TC_Status
 769              		.section	.text.At_Home,"ax",%progbits
 770              		.align	2
 771              		.global	At_Home
 772              		.thumb
 773              		.thumb_func
 774              		.type	At_Home, %function
 775              	At_Home:
 776              	.LFB87:
 332:Processes.c   ****     if((SENSE_PORT & (Pin_Tool_1_MASK | Pin_Tool_Count_MASK | Pin_Tool_Arm_In_MASK)) == 0)    // al
 777              		.loc 1 332 0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              		@ link register save eliminated.
 333:Processes.c   ****     {
 782              		.loc 1 333 0
 783 0000 044B     		ldr	r3, .L82
 784 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 785 0004 13F0850F 		tst	r3, #133
 786 0008 01D1     		bne	.L81
 335:Processes.c   ****     } 
 787              		.loc 1 335 0
 788 000a 0120     		movs	r0, #1
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 23


 789 000c 7047     		bx	lr
 790              	.L81:
 339:Processes.c   ****     }
 791              		.loc 1 339 0
 792 000e 0020     		movs	r0, #0
 341:Processes.c   **** 
 793              		.loc 1 341 0
 794 0010 7047     		bx	lr
 795              	.L83:
 796 0012 00BF     		.align	2
 797              	.L82:
 798 0014 01510040 		.word	1073762561
 799              		.cfi_endproc
 800              	.LFE87:
 801              		.size	At_Home, .-At_Home
 802              		.section	.text.In_Fault,"ax",%progbits
 803              		.align	2
 804              		.global	In_Fault
 805              		.thumb
 806              		.thumb_func
 807              		.type	In_Fault, %function
 808              	In_Fault:
 809              	.LFB88:
 345:Processes.c   ****     uint8 fault = (FAULT_PORT & (Pin_V_Mon2_MASK | Pin_AC_Mon_MASK | Pin_ESTOP_MASK));
 810              		.loc 1 345 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 814              		@ link register save eliminated.
 346:Processes.c   ****     if(fault == (Pin_V_Mon2_MASK | Pin_ESTOP_MASK))
 815              		.loc 1 346 0
 816 0000 044B     		ldr	r3, .L87
 817 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 818 0004 03F02C03 		and	r3, r3, #44
 819              	.LVL26:
 347:Processes.c   ****     {
 820              		.loc 1 347 0
 821 0008 242B     		cmp	r3, #36
 822 000a 01D1     		bne	.L86
 349:Processes.c   ****     }
 823              		.loc 1 349 0
 824 000c 0020     		movs	r0, #0
 825 000e 7047     		bx	lr
 826              	.L86:
 353:Processes.c   ****     }
 827              		.loc 1 353 0
 828 0010 0120     		movs	r0, #1
 355:Processes.c   **** 
 829              		.loc 1 355 0
 830 0012 7047     		bx	lr
 831              	.L88:
 832              		.align	2
 833              	.L87:
 834 0014 11510040 		.word	1073762577
 835              		.cfi_endproc
 836              	.LFE88:
 837              		.size	In_Fault, .-In_Fault
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 24


 838              		.section	.text.TC_IDLE,"ax",%progbits
 839              		.align	2
 840              		.global	TC_IDLE
 841              		.thumb
 842              		.thumb_func
 843              		.type	TC_IDLE, %function
 844              	TC_IDLE:
 845              	.LFB70:
 109:Processes.c   ****     TC_STATE = TC_STATE_IDLE;
 846              		.loc 1 109 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850 0000 08B5     		push	{r3, lr}
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 3, -8
 853              		.cfi_offset 14, -4
 110:Processes.c   ****     // waiting for a command to start a motion
 854              		.loc 1 110 0
 855 0002 0122     		movs	r2, #1
 856 0004 044B     		ldr	r3, .L92
 857 0006 1A70     		strb	r2, [r3]
 113:Processes.c   ****     {
 858              		.loc 1 113 0
 859 0008 FFF7FEFF 		bl	In_Fault
 860              	.LVL27:
 861 000c 0128     		cmp	r0, #1
 862 000e 02D1     		bne	.L89
 115:Processes.c   ****     }
 863              		.loc 1 115 0
 864 0010 024A     		ldr	r2, .L92+4
 865 0012 034B     		ldr	r3, .L92+8
 866 0014 1A60     		str	r2, [r3]
 867              	.L89:
 868 0016 08BD     		pop	{r3, pc}
 869              	.L93:
 870              		.align	2
 871              	.L92:
 872 0018 00000000 		.word	TC_STATE
 873 001c 00000000 		.word	TC_Fault
 874 0020 00000000 		.word	TC_SM
 875              		.cfi_endproc
 876              	.LFE70:
 877              		.size	TC_IDLE, .-TC_IDLE
 878              		.section	.text.TC_Fault,"ax",%progbits
 879              		.align	2
 880              		.global	TC_Fault
 881              		.thumb
 882              		.thumb_func
 883              		.type	TC_Fault, %function
 884              	TC_Fault:
 885              	.LFB79:
 238:Processes.c   ****     TC_STATE = TC_STATE_FAULT;
 886              		.loc 1 238 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 25


 890 0000 08B5     		push	{r3, lr}
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 3, -8
 893              		.cfi_offset 14, -4
 239:Processes.c   ****     // Fault!
 894              		.loc 1 239 0
 895 0002 0B22     		movs	r2, #11
 896 0004 084B     		ldr	r3, .L97
 897 0006 1A70     		strb	r2, [r3]
 244:Processes.c   ****     {
 898              		.loc 1 244 0
 899 0008 FFF7FEFF 		bl	At_Home
 900              	.LVL28:
 901 000c 0128     		cmp	r0, #1
 902 000e 0AD1     		bne	.L94
 244:Processes.c   ****     {
 903              		.loc 1 244 0 is_stmt 0 discriminator 1
 904 0010 FFF7FEFF 		bl	In_Fault
 905              	.LVL29:
 906 0014 38B9     		cbnz	r0, .L94
 246:Processes.c   ****         TC_SM = &TC_IDLE;   // change state back to idle
 907              		.loc 1 246 0 is_stmt 1
 908 0016 0120     		movs	r0, #1
 909 0018 FFF7FEFF 		bl	Set_Current_Tool
 910              	.LVL30:
 247:Processes.c   ****         Motors_Off();       // make sure the motors are off... 
 911              		.loc 1 247 0
 912 001c 034A     		ldr	r2, .L97+4
 913 001e 044B     		ldr	r3, .L97+8
 914 0020 1A60     		str	r2, [r3]
 248:Processes.c   ****     }
 915              		.loc 1 248 0
 916 0022 FFF7FEFF 		bl	Motors_Off
 917              	.LVL31:
 918              	.L94:
 919 0026 08BD     		pop	{r3, pc}
 920              	.L98:
 921              		.align	2
 922              	.L97:
 923 0028 00000000 		.word	TC_STATE
 924 002c 00000000 		.word	TC_IDLE
 925 0030 00000000 		.word	TC_SM
 926              		.cfi_endproc
 927              	.LFE79:
 928              		.size	TC_Fault, .-TC_Fault
 929              		.section	.text.RunningTooLong,"ax",%progbits
 930              		.align	2
 931              		.global	RunningTooLong
 932              		.thumb
 933              		.thumb_func
 934              		.type	RunningTooLong, %function
 935              	RunningTooLong:
 936              	.LFB92:
 399:Processes.c   ****         }
 400:Processes.c   ****     }
 401:Processes.c   **** }
 402:Processes.c   **** 
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 26


 403:Processes.c   **** void RunningTooLong(void)
 404:Processes.c   **** {
 937              		.loc 1 404 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941 0000 08B5     		push	{r3, lr}
 942              		.cfi_def_cfa_offset 8
 943              		.cfi_offset 3, -8
 944              		.cfi_offset 14, -4
 405:Processes.c   ****     if((MS_Time - TC_DelayStart) > TC_Delay)    // motors have been running too long!
 945              		.loc 1 405 0
 946 0002 074B     		ldr	r3, .L102
 947 0004 1B68     		ldr	r3, [r3]
 948 0006 074A     		ldr	r2, .L102+4
 949 0008 9168     		ldr	r1, [r2, #8]
 950 000a 5B1A     		subs	r3, r3, r1
 951 000c D268     		ldr	r2, [r2, #12]
 952 000e 9342     		cmp	r3, r2
 953 0010 04D9     		bls	.L99
 406:Processes.c   ****     {
 407:Processes.c   ****         Motors_Off();
 954              		.loc 1 407 0
 955 0012 FFF7FEFF 		bl	Motors_Off
 956              	.LVL32:
 408:Processes.c   ****         TC_SM = &TC_Fault;
 957              		.loc 1 408 0
 958 0016 044A     		ldr	r2, .L102+8
 959 0018 044B     		ldr	r3, .L102+12
 960 001a 1A60     		str	r2, [r3]
 961              	.L99:
 962 001c 08BD     		pop	{r3, pc}
 963              	.L103:
 964 001e 00BF     		.align	2
 965              	.L102:
 966 0020 00000000 		.word	MS_Time
 967 0024 00000000 		.word	.LANCHOR0
 968 0028 00000000 		.word	TC_Fault
 969 002c 00000000 		.word	TC_SM
 970              		.cfi_endproc
 971              	.LFE92:
 972              		.size	RunningTooLong, .-RunningTooLong
 973              		.section	.text.TC_Arm_Move_In_Start,"ax",%progbits
 974              		.align	2
 975              		.global	TC_Arm_Move_In_Start
 976              		.thumb
 977              		.thumb_func
 978              		.type	TC_Arm_Move_In_Start, %function
 979              	TC_Arm_Move_In_Start:
 980              	.LFB71:
 120:Processes.c   ****     TC_STATE = TC_STATE_ARM_IN_START;
 981              		.loc 1 120 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985 0000 08B5     		push	{r3, lr}
 986              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 27


 987              		.cfi_offset 3, -8
 988              		.cfi_offset 14, -4
 121:Processes.c   ****     if((SENSE_PORT & Pin_Tool_Arm_Out_MASK) != 0)  // check for tool to get off the Arm Out sensor
 989              		.loc 1 121 0
 990 0002 0222     		movs	r2, #2
 991 0004 084B     		ldr	r3, .L107
 992 0006 1A70     		strb	r2, [r3]
 122:Processes.c   ****     {
 993              		.loc 1 122 0
 994 0008 084B     		ldr	r3, .L107+4
 995 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 996 000c 13F0200F 		tst	r3, #32
 997 0010 06D0     		beq	.L105
 124:Processes.c   ****         TC_Set_Delay(ARM_MOVE_TIME);
 998              		.loc 1 124 0
 999 0012 074A     		ldr	r2, .L107+8
 1000 0014 074B     		ldr	r3, .L107+12
 1001 0016 1A60     		str	r2, [r3]
 125:Processes.c   ****     }
 1002              		.loc 1 125 0
 1003 0018 40F6B830 		movw	r0, #3000
 1004 001c FFF7FEFF 		bl	TC_Set_Delay
 1005              	.LVL33:
 1006              	.L105:
 127:Processes.c   **** }
 1007              		.loc 1 127 0
 1008 0020 FFF7FEFF 		bl	RunningTooLong
 1009              	.LVL34:
 1010 0024 08BD     		pop	{r3, pc}
 1011              	.L108:
 1012 0026 00BF     		.align	2
 1013              	.L107:
 1014 0028 00000000 		.word	TC_STATE
 1015 002c 01510040 		.word	1073762561
 1016 0030 00000000 		.word	TC_Arm_Move_In
 1017 0034 00000000 		.word	TC_SM
 1018              		.cfi_endproc
 1019              	.LFE71:
 1020              		.size	TC_Arm_Move_In_Start, .-TC_Arm_Move_In_Start
 1021              		.section	.text.TC_Arm_Move_In,"ax",%progbits
 1022              		.align	2
 1023              		.global	TC_Arm_Move_In
 1024              		.thumb
 1025              		.thumb_func
 1026              		.type	TC_Arm_Move_In, %function
 1027              	TC_Arm_Move_In:
 1028              	.LFB72:
 131:Processes.c   ****     TC_STATE = TC_STATE_ARM_IN;
 1029              		.loc 1 131 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033 0000 08B5     		push	{r3, lr}
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 3, -8
 1036              		.cfi_offset 14, -4
 132:Processes.c   ****     RunningTooLong();
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 28


 1037              		.loc 1 132 0
 1038 0002 0322     		movs	r2, #3
 1039 0004 074B     		ldr	r3, .L112
 1040 0006 1A70     		strb	r2, [r3]
 133:Processes.c   ****     if((SENSE_PORT & Pin_Tool_Arm_In_MASK) == 0)   //  detect Arm In (retracted
 1041              		.loc 1 133 0
 1042 0008 FFF7FEFF 		bl	RunningTooLong
 1043              	.LVL35:
 134:Processes.c   ****     {
 1044              		.loc 1 134 0
 1045 000c 064B     		ldr	r3, .L112+4
 1046 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1047 0010 13F0800F 		tst	r3, #128
 1048 0014 05D1     		bne	.L109
 136:Processes.c   ****         TC_SM = TC_Motor_Brake;
 1049              		.loc 1 136 0
 1050 0016 0A20     		movs	r0, #10
 1051 0018 FFF7FEFF 		bl	TC_Set_Delay
 1052              	.LVL36:
 137:Processes.c   ****     }
 1053              		.loc 1 137 0
 1054 001c 034A     		ldr	r2, .L112+8
 1055 001e 044B     		ldr	r3, .L112+12
 1056 0020 1A60     		str	r2, [r3]
 1057              	.L109:
 1058 0022 08BD     		pop	{r3, pc}
 1059              	.L113:
 1060              		.align	2
 1061              	.L112:
 1062 0024 00000000 		.word	TC_STATE
 1063 0028 01510040 		.word	1073762561
 1064 002c 00000000 		.word	TC_Motor_Brake
 1065 0030 00000000 		.word	TC_SM
 1066              		.cfi_endproc
 1067              	.LFE72:
 1068              		.size	TC_Arm_Move_In, .-TC_Arm_Move_In
 1069              		.section	.text.TC_Arm_Move_Out_Start,"ax",%progbits
 1070              		.align	2
 1071              		.global	TC_Arm_Move_Out_Start
 1072              		.thumb
 1073              		.thumb_func
 1074              		.type	TC_Arm_Move_Out_Start, %function
 1075              	TC_Arm_Move_Out_Start:
 1076              	.LFB73:
 142:Processes.c   ****     TC_STATE = TC_STATE_ARM_OUT_START;
 1077              		.loc 1 142 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081 0000 08B5     		push	{r3, lr}
 1082              		.cfi_def_cfa_offset 8
 1083              		.cfi_offset 3, -8
 1084              		.cfi_offset 14, -4
 143:Processes.c   ****     if((SENSE_PORT & Pin_Tool_Arm_In_MASK) == 0)  // check for tool to get off the tool back sensor
 1085              		.loc 1 143 0
 1086 0002 0422     		movs	r2, #4
 1087 0004 084B     		ldr	r3, .L117
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 29


 1088 0006 1A70     		strb	r2, [r3]
 144:Processes.c   ****     {
 1089              		.loc 1 144 0
 1090 0008 084B     		ldr	r3, .L117+4
 1091 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1092 000c 13F0800F 		tst	r3, #128
 1093 0010 06D1     		bne	.L115
 146:Processes.c   ****         TC_Set_Delay(ARM_MOVE_TIME);
 1094              		.loc 1 146 0
 1095 0012 074A     		ldr	r2, .L117+8
 1096 0014 074B     		ldr	r3, .L117+12
 1097 0016 1A60     		str	r2, [r3]
 147:Processes.c   ****     }
 1098              		.loc 1 147 0
 1099 0018 40F6B830 		movw	r0, #3000
 1100 001c FFF7FEFF 		bl	TC_Set_Delay
 1101              	.LVL37:
 1102              	.L115:
 149:Processes.c   **** }
 1103              		.loc 1 149 0
 1104 0020 FFF7FEFF 		bl	RunningTooLong
 1105              	.LVL38:
 1106 0024 08BD     		pop	{r3, pc}
 1107              	.L118:
 1108 0026 00BF     		.align	2
 1109              	.L117:
 1110 0028 00000000 		.word	TC_STATE
 1111 002c 01510040 		.word	1073762561
 1112 0030 00000000 		.word	TC_Arm_Move_Out
 1113 0034 00000000 		.word	TC_SM
 1114              		.cfi_endproc
 1115              	.LFE73:
 1116              		.size	TC_Arm_Move_Out_Start, .-TC_Arm_Move_Out_Start
 1117              		.section	.text.TC_Arm_Move_Out,"ax",%progbits
 1118              		.align	2
 1119              		.global	TC_Arm_Move_Out
 1120              		.thumb
 1121              		.thumb_func
 1122              		.type	TC_Arm_Move_Out, %function
 1123              	TC_Arm_Move_Out:
 1124              	.LFB74:
 153:Processes.c   ****     TC_STATE = TC_STATE_ARM_OUT;
 1125              		.loc 1 153 0
 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 0
 1128              		@ frame_needed = 0, uses_anonymous_args = 0
 1129 0000 08B5     		push	{r3, lr}
 1130              		.cfi_def_cfa_offset 8
 1131              		.cfi_offset 3, -8
 1132              		.cfi_offset 14, -4
 154:Processes.c   ****     RunningTooLong();    
 1133              		.loc 1 154 0
 1134 0002 0522     		movs	r2, #5
 1135 0004 074B     		ldr	r3, .L122
 1136 0006 1A70     		strb	r2, [r3]
 155:Processes.c   ****     if((SENSE_PORT & Pin_Tool_Arm_Out_MASK) == 0)   //  detect Arm Back
 1137              		.loc 1 155 0
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 30


 1138 0008 FFF7FEFF 		bl	RunningTooLong
 1139              	.LVL39:
 156:Processes.c   ****     {
 1140              		.loc 1 156 0
 1141 000c 064B     		ldr	r3, .L122+4
 1142 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1143 0010 13F0200F 		tst	r3, #32
 1144 0014 05D1     		bne	.L119
 158:Processes.c   ****         TC_SM = TC_Motor_Brake;
 1145              		.loc 1 158 0
 1146 0016 0A20     		movs	r0, #10
 1147 0018 FFF7FEFF 		bl	TC_Set_Delay
 1148              	.LVL40:
 159:Processes.c   ****     }
 1149              		.loc 1 159 0
 1150 001c 034A     		ldr	r2, .L122+8
 1151 001e 044B     		ldr	r3, .L122+12
 1152 0020 1A60     		str	r2, [r3]
 1153              	.L119:
 1154 0022 08BD     		pop	{r3, pc}
 1155              	.L123:
 1156              		.align	2
 1157              	.L122:
 1158 0024 00000000 		.word	TC_STATE
 1159 0028 01510040 		.word	1073762561
 1160 002c 00000000 		.word	TC_Motor_Brake
 1161 0030 00000000 		.word	TC_SM
 1162              		.cfi_endproc
 1163              	.LFE74:
 1164              		.size	TC_Arm_Move_Out, .-TC_Arm_Move_Out
 1165              		.section	.text.TC_Carousel_Moving_Start,"ax",%progbits
 1166              		.align	2
 1167              		.global	TC_Carousel_Moving_Start
 1168              		.thumb
 1169              		.thumb_func
 1170              		.type	TC_Carousel_Moving_Start, %function
 1171              	TC_Carousel_Moving_Start:
 1172              	.LFB76:
 174:Processes.c   ****     TC_STATE = TC_STATE_CAROUSEL_START;
 1173              		.loc 1 174 0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
 1177 0000 08B5     		push	{r3, lr}
 1178              		.cfi_def_cfa_offset 8
 1179              		.cfi_offset 3, -8
 1180              		.cfi_offset 14, -4
 175:Processes.c   ****      // look for both sensor to be high, ie. off of he currrent tool position
 1181              		.loc 1 175 0
 1182 0002 0722     		movs	r2, #7
 1183 0004 084B     		ldr	r3, .L127
 1184 0006 1A70     		strb	r2, [r3]
 177:Processes.c   ****     {
 1185              		.loc 1 177 0
 1186 0008 084B     		ldr	r3, .L127+4
 1187 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1188 000c 13F0040F 		tst	r3, #4
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 31


 1189 0010 06D0     		beq	.L125
 179:Processes.c   ****         TC_Set_Delay(CAROUSEL_MOVING_DELAY);
 1190              		.loc 1 179 0
 1191 0012 074A     		ldr	r2, .L127+8
 1192 0014 074B     		ldr	r3, .L127+12
 1193 0016 1A60     		str	r2, [r3]
 180:Processes.c   ****         // PutStr("P_Car 1\n");
 1194              		.loc 1 180 0
 1195 0018 4FF4FA60 		mov	r0, #2000
 1196 001c FFF7FEFF 		bl	TC_Set_Delay
 1197              	.LVL41:
 1198              	.L125:
 183:Processes.c   **** }
 1199              		.loc 1 183 0
 1200 0020 FFF7FEFF 		bl	RunningTooLong
 1201              	.LVL42:
 1202 0024 08BD     		pop	{r3, pc}
 1203              	.L128:
 1204 0026 00BF     		.align	2
 1205              	.L127:
 1206 0028 00000000 		.word	TC_STATE
 1207 002c 01510040 		.word	1073762561
 1208 0030 00000000 		.word	TC_Carousel_Moving
 1209 0034 00000000 		.word	TC_SM
 1210              		.cfi_endproc
 1211              	.LFE76:
 1212              		.size	TC_Carousel_Moving_Start, .-TC_Carousel_Moving_Start
 1213              		.section	.text.TC_Carousel_Moving,"ax",%progbits
 1214              		.align	2
 1215              		.global	TC_Carousel_Moving
 1216              		.thumb
 1217              		.thumb_func
 1218              		.type	TC_Carousel_Moving, %function
 1219              	TC_Carousel_Moving:
 1220              	.LFB77:
 187:Processes.c   ****     TC_STATE = TC_STATE_CAROUSEL;
 1221              		.loc 1 187 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 0
 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225 0000 08B5     		push	{r3, lr}
 1226              		.cfi_def_cfa_offset 8
 1227              		.cfi_offset 3, -8
 1228              		.cfi_offset 14, -4
 188:Processes.c   ****     RunningTooLong();   // if timeout then next state is Fault.
 1229              		.loc 1 188 0
 1230 0002 0822     		movs	r2, #8
 1231 0004 1F4B     		ldr	r3, .L136
 1232 0006 1A70     		strb	r2, [r3]
 189:Processes.c   ****     
 1233              		.loc 1 189 0
 1234 0008 FFF7FEFF 		bl	RunningTooLong
 1235              	.LVL43:
 191:Processes.c   ****     {
 1236              		.loc 1 191 0
 1237 000c 1E4B     		ldr	r3, .L136+4
 1238 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 32


 1239 0010 13F0040F 		tst	r3, #4
 1240 0014 35D1     		bne	.L129
 194:Processes.c   ****         if(Current_Tool > NUMBER_OF_TOOLS)              // There has to be some modulus stuff here 
 1241              		.loc 1 194 0
 1242 0016 1D4A     		ldr	r2, .L136+8
 1243 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1244 001a 1D4B     		ldr	r3, .L136+12
 1245 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1246 001e 0B44     		add	r3, r3, r1
 1247 0020 DBB2     		uxtb	r3, r3
 1248 0022 1370     		strb	r3, [r2]
 195:Processes.c   ****         {
 1249              		.loc 1 195 0
 1250 0024 082B     		cmp	r3, #8
 1251 0026 03D9     		bls	.L131
 197:Processes.c   ****         }
 1252              		.loc 1 197 0
 1253 0028 0122     		movs	r2, #1
 1254 002a 184B     		ldr	r3, .L136+8
 1255 002c 1A70     		strb	r2, [r3]
 1256 002e 03E0     		b	.L132
 1257              	.L131:
 199:Processes.c   ****         {
 1258              		.loc 1 199 0
 1259 0030 13B9     		cbnz	r3, .L132
 201:Processes.c   ****         }
 1260              		.loc 1 201 0
 1261 0032 0822     		movs	r2, #8
 1262 0034 154B     		ldr	r3, .L136+8
 1263 0036 1A70     		strb	r2, [r3]
 1264              	.L132:
 204:Processes.c   ****         {   
 1265              		.loc 1 204 0
 1266 0038 144B     		ldr	r3, .L136+8
 1267 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1268 003c 012B     		cmp	r3, #1
 1269 003e 0CD1     		bne	.L133
 204:Processes.c   ****         {   
 1270              		.loc 1 204 0 is_stmt 0 discriminator 1
 1271 0040 03F18043 		add	r3, r3, #1073741824
 1272 0044 03F5A243 		add	r3, r3, #20736
 1273 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1274 004a 13F0010F 		tst	r3, #1
 1275 004e 04D0     		beq	.L133
 207:Processes.c   ****             Motors_Off();
 1276              		.loc 1 207 0 is_stmt 1
 1277 0050 104A     		ldr	r2, .L136+16
 1278 0052 114B     		ldr	r3, .L136+20
 1279 0054 1A60     		str	r2, [r3]
 208:Processes.c   ****         }
 1280              		.loc 1 208 0
 1281 0056 FFF7FEFF 		bl	Motors_Off
 1282              	.LVL44:
 1283              	.L133:
 210:Processes.c   ****         {
 1284              		.loc 1 210 0
 1285 005a 0C4B     		ldr	r3, .L136+8
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 33


 1286 005c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1287 005e 0F4B     		ldr	r3, .L136+24
 1288 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1289 0062 9A42     		cmp	r2, r3
 1290 0064 06D1     		bne	.L134
 213:Processes.c   ****             TC_SM = &TC_Motor_Brake;
 1291              		.loc 1 213 0
 1292 0066 0A20     		movs	r0, #10
 1293 0068 FFF7FEFF 		bl	TC_Set_Delay
 1294              	.LVL45:
 214:Processes.c   ****         }
 1295              		.loc 1 214 0
 1296 006c 0C4A     		ldr	r2, .L136+28
 1297 006e 0A4B     		ldr	r3, .L136+20
 1298 0070 1A60     		str	r2, [r3]
 1299 0072 08BD     		pop	{r3, pc}
 1300              	.L134:
 218:Processes.c   ****             TC_SM = &TC_Carousel_Moving_Start;
 1301              		.loc 1 218 0
 1302 0074 4FF4FA70 		mov	r0, #500
 1303 0078 FFF7FEFF 		bl	TC_Set_Delay
 1304              	.LVL46:
 219:Processes.c   ****             // PutStr("P_Car Restart\n");
 1305              		.loc 1 219 0
 1306 007c 094A     		ldr	r2, .L136+32
 1307 007e 064B     		ldr	r3, .L136+20
 1308 0080 1A60     		str	r2, [r3]
 1309              	.L129:
 1310 0082 08BD     		pop	{r3, pc}
 1311              	.L137:
 1312              		.align	2
 1313              	.L136:
 1314 0084 00000000 		.word	TC_STATE
 1315 0088 01510040 		.word	1073762561
 1316 008c 00000000 		.word	Current_Tool
 1317 0090 00000000 		.word	Carousel_Dir
 1318 0094 00000000 		.word	TC_Fault
 1319 0098 00000000 		.word	TC_SM
 1320 009c 00000000 		.word	Target_Tool
 1321 00a0 00000000 		.word	TC_Motor_Brake
 1322 00a4 00000000 		.word	TC_Carousel_Moving_Start
 1323              		.cfi_endproc
 1324              	.LFE77:
 1325              		.size	TC_Carousel_Moving, .-TC_Carousel_Moving
 1326              		.section	.text.TC_Home_Arm,"ax",%progbits
 1327              		.align	2
 1328              		.global	TC_Home_Arm
 1329              		.thumb
 1330              		.thumb_func
 1331              		.type	TC_Home_Arm, %function
 1332              	TC_Home_Arm:
 1333              	.LFB89:
 358:Processes.c   ****     TC_STATE = TC_STATE_HOME_ARM;
 1334              		.loc 1 358 0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 0
 1337              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 34


 1338 0000 08B5     		push	{r3, lr}
 1339              		.cfi_def_cfa_offset 8
 1340              		.cfi_offset 3, -8
 1341              		.cfi_offset 14, -4
 359:Processes.c   ****     RunningTooLong();
 1342              		.loc 1 359 0
 1343 0002 0D22     		movs	r2, #13
 1344 0004 074B     		ldr	r3, .L141
 1345 0006 1A70     		strb	r2, [r3]
 360:Processes.c   ****     if((SENSE_PORT & Pin_Tool_Arm_In_MASK) == 0)   //  detect Arm Back
 1346              		.loc 1 360 0
 1347 0008 FFF7FEFF 		bl	RunningTooLong
 1348              	.LVL47:
 361:Processes.c   ****     {
 1349              		.loc 1 361 0
 1350 000c 064B     		ldr	r3, .L141+4
 1351 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1352 0010 13F0800F 		tst	r3, #128
 1353 0014 05D1     		bne	.L138
 363:Processes.c   ****         TC_SM = TC_Home_Delay;
 1354              		.loc 1 363 0
 1355 0016 0A20     		movs	r0, #10
 1356 0018 FFF7FEFF 		bl	TC_Set_Delay
 1357              	.LVL48:
 364:Processes.c   ****     }
 1358              		.loc 1 364 0
 1359 001c 034A     		ldr	r2, .L141+8
 1360 001e 044B     		ldr	r3, .L141+12
 1361 0020 1A60     		str	r2, [r3]
 1362              	.L138:
 1363 0022 08BD     		pop	{r3, pc}
 1364              	.L142:
 1365              		.align	2
 1366              	.L141:
 1367 0024 00000000 		.word	TC_STATE
 1368 0028 01510040 		.word	1073762561
 1369 002c 00000000 		.word	TC_Home_Delay
 1370 0030 00000000 		.word	TC_SM
 1371              		.cfi_endproc
 1372              	.LFE89:
 1373              		.size	TC_Home_Arm, .-TC_Home_Arm
 1374              		.section	.text.TC_Home_Carousel,"ax",%progbits
 1375              		.align	2
 1376              		.global	TC_Home_Carousel
 1377              		.thumb
 1378              		.thumb_func
 1379              		.type	TC_Home_Carousel, %function
 1380              	TC_Home_Carousel:
 1381              	.LFB90:
 369:Processes.c   ****     RunningTooLong();
 1382              		.loc 1 369 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 0
 1385              		@ frame_needed = 0, uses_anonymous_args = 0
 1386 0000 08B5     		push	{r3, lr}
 1387              		.cfi_def_cfa_offset 8
 1388              		.cfi_offset 3, -8
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 35


 1389              		.cfi_offset 14, -4
 370:Processes.c   ****     // move until the carousel reaches tool 1
 1390              		.loc 1 370 0
 1391 0002 FFF7FEFF 		bl	RunningTooLong
 1392              	.LVL49:
 372:Processes.c   ****     {
 1393              		.loc 1 372 0
 1394 0006 074B     		ldr	r3, .L146
 1395 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1396 000a 13F0050F 		tst	r3, #5
 1397 000e 08D1     		bne	.L143
 374:Processes.c   ****         TC_SM = &TC_Motor_Brake;
 1398              		.loc 1 374 0
 1399 0010 0A20     		movs	r0, #10
 1400 0012 FFF7FEFF 		bl	TC_Set_Delay
 1401              	.LVL50:
 375:Processes.c   ****         Current_Tool = 1;   // current tool reset to 1! 
 1402              		.loc 1 375 0
 1403 0016 044A     		ldr	r2, .L146+4
 1404 0018 044B     		ldr	r3, .L146+8
 1405 001a 1A60     		str	r2, [r3]
 376:Processes.c   ****     }
 1406              		.loc 1 376 0
 1407 001c 0122     		movs	r2, #1
 1408 001e 044B     		ldr	r3, .L146+12
 1409 0020 1A70     		strb	r2, [r3]
 1410              	.L143:
 1411 0022 08BD     		pop	{r3, pc}
 1412              	.L147:
 1413              		.align	2
 1414              	.L146:
 1415 0024 01510040 		.word	1073762561
 1416 0028 00000000 		.word	TC_Motor_Brake
 1417 002c 00000000 		.word	TC_SM
 1418 0030 00000000 		.word	Current_Tool
 1419              		.cfi_endproc
 1420              	.LFE90:
 1421              		.size	TC_Home_Carousel, .-TC_Home_Carousel
 1422              		.comm	Carousel_Dir,1,1
 1423              		.comm	Target_Tool,1,1
 1424              		.comm	Current_Tool,1,1
 1425              		.comm	TC_STATE,1,1
 1426              		.comm	TC_SM,4,4
 1427              		.section	.rodata.str1.4,"aMS",%progbits,1
 1428              		.align	2
 1429              	.LC0:
 1430 0000 436F756E 		.ascii	"Count = %d\015\000"
 1430      74203D20 
 1430      25640D00 
 1431              	.LC1:
 1432 000c 416C7068 		.ascii	"Alpha = %c\015\000"
 1432      61203D20 
 1432      25630D00 
 1433              	.LC2:
 1434 0018 53746174 		.ascii	"Status Process already running!\012\000"
 1434      75732050 
 1434      726F6365 
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 36


 1434      73732061 
 1434      6C726561 
 1435 0039 000000   		.space	3
 1436              	.LC3:
 1437 003c 54435F53 		.ascii	"TC_State Machine Started\000"
 1437      74617465 
 1437      204D6163 
 1437      68696E65 
 1437      20537461 
 1438 0055 000000   		.space	3
 1439              	.LC4:
 1440 0058 44656C61 		.ascii	"Delay Done\012\000"
 1440      7920446F 
 1440      6E650A00 
 1441              	.LC5:
 1442 0064 54432049 		.ascii	"TC IDLE\000"
 1442      444C4500 
 1443              	.LC6:
 1444 006c 54432041 		.ascii	"TC ARM REV\000"
 1444      524D2052 
 1444      455600
 1445 0077 00       		.space	1
 1446              	.LC7:
 1447 0078 54432041 		.ascii	"TC ARM FWD\000"
 1447      524D2046 
 1447      574400
 1448 0083 00       		.space	1
 1449              	.LC8:
 1450 0084 54432042 		.ascii	"TC BRAKE\000"
 1450      52414B45 
 1450      00
 1451 008d 000000   		.space	3
 1452              	.LC9:
 1453 0090 54432043 		.ascii	"TC CAROUSEL\000"
 1453      41524F55 
 1453      53454C00 
 1454              	.LC10:
 1455 009c 54432041 		.ascii	"TC AIR BLAST\000"
 1455      49522042 
 1455      4C415354 
 1455      00
 1456 00a9 000000   		.space	3
 1457              	.LC11:
 1458 00ac 54432043 		.ascii	"TC CLAMP\000"
 1458      4C414D50 
 1458      00
 1459 00b5 000000   		.space	3
 1460              	.LC12:
 1461 00b8 54432046 		.ascii	"TC FAULT\000"
 1461      41554C54 
 1461      00
 1462 00c1 000000   		.space	3
 1463              	.LC13:
 1464 00c4 54432054 		.ascii	"TC TEST\000"
 1464      45535400 
 1465              		.bss
 1466              		.align	2
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 37


 1467              		.set	.LANCHOR0,. + 0
 1468              		.type	C_Count, %object
 1469              		.size	C_Count, 2
 1470              	C_Count:
 1471 0000 0000     		.space	2
 1472              		.type	SecCount, %object
 1473              		.size	SecCount, 2
 1474              	SecCount:
 1475 0002 0000     		.space	2
 1476              		.type	A_Count, %object
 1477              		.size	A_Count, 1
 1478              	A_Count:
 1479 0004 00       		.space	1
 1480 0005 00       		.space	1
 1481              		.type	S_Count, %object
 1482              		.size	S_Count, 2
 1483              	S_Count:
 1484 0006 0000     		.space	2
 1485              		.type	TC_DelayStart, %object
 1486              		.size	TC_DelayStart, 4
 1487              	TC_DelayStart:
 1488 0008 00000000 		.space	4
 1489              		.type	TC_Delay, %object
 1490              		.size	TC_Delay, 4
 1491              	TC_Delay:
 1492 000c 00000000 		.space	4
 1493              		.text
 1494              	.Letext0:
 1495              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1496              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1497              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1498              		.file 5 "State_Machine.h"
 1499              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1500              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1501              		.file 8 "U_HW.h"
 1502              		.section	.debug_info,"",%progbits
 1503              	.Ldebug_info0:
 1504 0000 F9070000 		.4byte	0x7f9
 1505 0004 0400     		.2byte	0x4
 1506 0006 00000000 		.4byte	.Ldebug_abbrev0
 1507 000a 04       		.byte	0x4
 1508 000b 01       		.uleb128 0x1
 1509 000c B3030000 		.4byte	.LASF74
 1510 0010 0C       		.byte	0xc
 1511 0011 C1000000 		.4byte	.LASF75
 1512 0015 00000000 		.4byte	.LASF76
 1513 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1514 001d 00000000 		.4byte	0
 1515 0021 00000000 		.4byte	.Ldebug_line0
 1516 0025 02       		.uleb128 0x2
 1517 0026 01       		.byte	0x1
 1518 0027 06       		.byte	0x6
 1519 0028 41020000 		.4byte	.LASF0
 1520 002c 02       		.uleb128 0x2
 1521 002d 01       		.byte	0x1
 1522 002e 08       		.byte	0x8
 1523 002f 23020000 		.4byte	.LASF1
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 38


 1524 0033 02       		.uleb128 0x2
 1525 0034 02       		.byte	0x2
 1526 0035 05       		.byte	0x5
 1527 0036 CD000000 		.4byte	.LASF2
 1528 003a 03       		.uleb128 0x3
 1529 003b 2B010000 		.4byte	.LASF4
 1530 003f 02       		.byte	0x2
 1531 0040 2B       		.byte	0x2b
 1532 0041 45000000 		.4byte	0x45
 1533 0045 02       		.uleb128 0x2
 1534 0046 02       		.byte	0x2
 1535 0047 07       		.byte	0x7
 1536 0048 C8020000 		.4byte	.LASF3
 1537 004c 03       		.uleb128 0x3
 1538 004d 67030000 		.4byte	.LASF5
 1539 0051 02       		.byte	0x2
 1540 0052 3F       		.byte	0x3f
 1541 0053 57000000 		.4byte	0x57
 1542 0057 02       		.uleb128 0x2
 1543 0058 04       		.byte	0x4
 1544 0059 05       		.byte	0x5
 1545 005a BF010000 		.4byte	.LASF6
 1546 005e 02       		.uleb128 0x2
 1547 005f 04       		.byte	0x4
 1548 0060 07       		.byte	0x7
 1549 0061 C8010000 		.4byte	.LASF7
 1550 0065 02       		.uleb128 0x2
 1551 0066 08       		.byte	0x8
 1552 0067 05       		.byte	0x5
 1553 0068 9F010000 		.4byte	.LASF8
 1554 006c 02       		.uleb128 0x2
 1555 006d 08       		.byte	0x8
 1556 006e 07       		.byte	0x7
 1557 006f 4D020000 		.4byte	.LASF9
 1558 0073 04       		.uleb128 0x4
 1559 0074 04       		.byte	0x4
 1560 0075 05       		.byte	0x5
 1561 0076 696E7400 		.ascii	"int\000"
 1562 007a 02       		.uleb128 0x2
 1563 007b 04       		.byte	0x4
 1564 007c 07       		.byte	0x7
 1565 007d 77020000 		.4byte	.LASF10
 1566 0081 03       		.uleb128 0x3
 1567 0082 8C020000 		.4byte	.LASF11
 1568 0086 03       		.byte	0x3
 1569 0087 24       		.byte	0x24
 1570 0088 3A000000 		.4byte	0x3a
 1571 008c 03       		.uleb128 0x3
 1572 008d F1020000 		.4byte	.LASF12
 1573 0091 03       		.byte	0x3
 1574 0092 2C       		.byte	0x2c
 1575 0093 4C000000 		.4byte	0x4c
 1576 0097 05       		.uleb128 0x5
 1577 0098 09030000 		.4byte	.LASF13
 1578 009c 04       		.byte	0x4
 1579 009d E401     		.2byte	0x1e4
 1580 009f 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 39


 1581 00a3 05       		.uleb128 0x5
 1582 00a4 36010000 		.4byte	.LASF14
 1583 00a8 04       		.byte	0x4
 1584 00a9 E501     		.2byte	0x1e5
 1585 00ab 45000000 		.4byte	0x45
 1586 00af 05       		.uleb128 0x5
 1587 00b0 1E030000 		.4byte	.LASF15
 1588 00b4 04       		.byte	0x4
 1589 00b5 E601     		.2byte	0x1e6
 1590 00b7 5E000000 		.4byte	0x5e
 1591 00bb 05       		.uleb128 0x5
 1592 00bc BA010000 		.4byte	.LASF16
 1593 00c0 04       		.byte	0x4
 1594 00c1 E701     		.2byte	0x1e7
 1595 00c3 25000000 		.4byte	0x25
 1596 00c7 02       		.uleb128 0x2
 1597 00c8 04       		.byte	0x4
 1598 00c9 04       		.byte	0x4
 1599 00ca 99010000 		.4byte	.LASF17
 1600 00ce 02       		.uleb128 0x2
 1601 00cf 08       		.byte	0x8
 1602 00d0 04       		.byte	0x4
 1603 00d1 32030000 		.4byte	.LASF18
 1604 00d5 02       		.uleb128 0x2
 1605 00d6 01       		.byte	0x1
 1606 00d7 08       		.byte	0x8
 1607 00d8 EC020000 		.4byte	.LASF19
 1608 00dc 05       		.uleb128 0x5
 1609 00dd 25030000 		.4byte	.LASF20
 1610 00e1 04       		.byte	0x4
 1611 00e2 8E02     		.2byte	0x28e
 1612 00e4 E8000000 		.4byte	0xe8
 1613 00e8 06       		.uleb128 0x6
 1614 00e9 97000000 		.4byte	0x97
 1615 00ed 06       		.uleb128 0x6
 1616 00ee AF000000 		.4byte	0xaf
 1617 00f2 07       		.uleb128 0x7
 1618 00f3 04       		.byte	0x4
 1619 00f4 F8000000 		.4byte	0xf8
 1620 00f8 08       		.uleb128 0x8
 1621 00f9 02       		.uleb128 0x2
 1622 00fa 08       		.byte	0x8
 1623 00fb 04       		.byte	0x4
 1624 00fc 17020000 		.4byte	.LASF21
 1625 0100 02       		.uleb128 0x2
 1626 0101 04       		.byte	0x4
 1627 0102 07       		.byte	0x7
 1628 0103 E5000000 		.4byte	.LASF22
 1629 0107 03       		.uleb128 0x3
 1630 0108 97030000 		.4byte	.LASF23
 1631 010c 05       		.byte	0x5
 1632 010d 10       		.byte	0x10
 1633 010e F2000000 		.4byte	0xf2
 1634 0112 09       		.uleb128 0x9
 1635 0113 15010000 		.4byte	.LASF24
 1636 0117 01       		.byte	0x1
 1637 0118 63       		.byte	0x63
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 40


 1638 0119 00000000 		.4byte	.LFB69
 1639 011d 10000000 		.4byte	.LFE69-.LFB69
 1640 0121 01       		.uleb128 0x1
 1641 0122 9C       		.byte	0x9c
 1642 0123 0A       		.uleb128 0xa
 1643 0124 49030000 		.4byte	.LASF25
 1644 0128 01       		.byte	0x1
 1645 0129 26       		.byte	0x26
 1646 012a 00000000 		.4byte	.LFB64
 1647 012e 14000000 		.4byte	.LFE64-.LFB64
 1648 0132 01       		.uleb128 0x1
 1649 0133 9C       		.byte	0x9c
 1650 0134 0B       		.uleb128 0xb
 1651 0135 AD010000 		.4byte	.LASF27
 1652 0139 01       		.byte	0x1
 1653 013a 2B       		.byte	0x2b
 1654 013b 00000000 		.4byte	.LFB65
 1655 013f 3C000000 		.4byte	.LFE65-.LFB65
 1656 0143 01       		.uleb128 0x1
 1657 0144 9C       		.byte	0x9c
 1658 0145 85010000 		.4byte	0x185
 1659 0149 0C       		.uleb128 0xc
 1660 014a 6D736700 		.ascii	"msg\000"
 1661 014e 01       		.byte	0x1
 1662 014f 2D       		.byte	0x2d
 1663 0150 85010000 		.4byte	0x185
 1664 0154 02       		.uleb128 0x2
 1665 0155 91       		.byte	0x91
 1666 0156 64       		.sleb128 -28
 1667 0157 0D       		.uleb128 0xd
 1668 0158 26000000 		.4byte	.LVL1
 1669 015c D0070000 		.4byte	0x7d0
 1670 0160 74010000 		.4byte	0x174
 1671 0164 0E       		.uleb128 0xe
 1672 0165 01       		.uleb128 0x1
 1673 0166 50       		.byte	0x50
 1674 0167 02       		.uleb128 0x2
 1675 0168 91       		.byte	0x91
 1676 0169 64       		.sleb128 -28
 1677 016a 0E       		.uleb128 0xe
 1678 016b 01       		.uleb128 0x1
 1679 016c 51       		.byte	0x51
 1680 016d 05       		.uleb128 0x5
 1681 016e 03       		.byte	0x3
 1682 016f 00000000 		.4byte	.LC0
 1683 0173 00       		.byte	0
 1684 0174 0F       		.uleb128 0xf
 1685 0175 2C000000 		.4byte	.LVL2
 1686 0179 DB070000 		.4byte	0x7db
 1687 017d 0E       		.uleb128 0xe
 1688 017e 01       		.uleb128 0x1
 1689 017f 50       		.byte	0x50
 1690 0180 02       		.uleb128 0x2
 1691 0181 91       		.byte	0x91
 1692 0182 64       		.sleb128 -28
 1693 0183 00       		.byte	0
 1694 0184 00       		.byte	0
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 41


 1695 0185 10       		.uleb128 0x10
 1696 0186 D5000000 		.4byte	0xd5
 1697 018a 95010000 		.4byte	0x195
 1698 018e 11       		.uleb128 0x11
 1699 018f 00010000 		.4byte	0x100
 1700 0193 13       		.byte	0x13
 1701 0194 00       		.byte	0
 1702 0195 0A       		.uleb128 0xa
 1703 0196 DB020000 		.4byte	.LASF26
 1704 019a 01       		.byte	0x1
 1705 019b 3A       		.byte	0x3a
 1706 019c 00000000 		.4byte	.LFB66
 1707 01a0 14000000 		.4byte	.LFE66-.LFB66
 1708 01a4 01       		.uleb128 0x1
 1709 01a5 9C       		.byte	0x9c
 1710 01a6 0B       		.uleb128 0xb
 1711 01a7 5A030000 		.4byte	.LASF28
 1712 01ab 01       		.byte	0x1
 1713 01ac 40       		.byte	0x40
 1714 01ad 00000000 		.4byte	.LFB67
 1715 01b1 48000000 		.4byte	.LFE67-.LFB67
 1716 01b5 01       		.uleb128 0x1
 1717 01b6 9C       		.byte	0x9c
 1718 01b7 F7010000 		.4byte	0x1f7
 1719 01bb 0C       		.uleb128 0xc
 1720 01bc 6D736700 		.ascii	"msg\000"
 1721 01c0 01       		.byte	0x1
 1722 01c1 43       		.byte	0x43
 1723 01c2 85010000 		.4byte	0x185
 1724 01c6 02       		.uleb128 0x2
 1725 01c7 91       		.byte	0x91
 1726 01c8 64       		.sleb128 -28
 1727 01c9 0D       		.uleb128 0xd
 1728 01ca 24000000 		.4byte	.LVL3
 1729 01ce D0070000 		.4byte	0x7d0
 1730 01d2 E6010000 		.4byte	0x1e6
 1731 01d6 0E       		.uleb128 0xe
 1732 01d7 01       		.uleb128 0x1
 1733 01d8 50       		.byte	0x50
 1734 01d9 02       		.uleb128 0x2
 1735 01da 91       		.byte	0x91
 1736 01db 64       		.sleb128 -28
 1737 01dc 0E       		.uleb128 0xe
 1738 01dd 01       		.uleb128 0x1
 1739 01de 51       		.byte	0x51
 1740 01df 05       		.uleb128 0x5
 1741 01e0 03       		.byte	0x3
 1742 01e1 0C000000 		.4byte	.LC1
 1743 01e5 00       		.byte	0
 1744 01e6 0F       		.uleb128 0xf
 1745 01e7 2A000000 		.4byte	.LVL4
 1746 01eb DB070000 		.4byte	0x7db
 1747 01ef 0E       		.uleb128 0xe
 1748 01f0 01       		.uleb128 0x1
 1749 01f1 50       		.byte	0x50
 1750 01f2 02       		.uleb128 0x2
 1751 01f3 91       		.byte	0x91
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 42


 1752 01f4 64       		.sleb128 -28
 1753 01f5 00       		.byte	0
 1754 01f6 00       		.byte	0
 1755 01f7 0B       		.uleb128 0xb
 1756 01f8 61010000 		.4byte	.LASF29
 1757 01fc 01       		.byte	0x1
 1758 01fd 55       		.byte	0x55
 1759 01fe 00000000 		.4byte	.LFB68
 1760 0202 44000000 		.4byte	.LFE68-.LFB68
 1761 0206 01       		.uleb128 0x1
 1762 0207 9C       		.byte	0x9c
 1763 0208 65020000 		.4byte	0x265
 1764 020c 0D       		.uleb128 0xd
 1765 020d 0A000000 		.4byte	.LVL5
 1766 0211 E6070000 		.4byte	0x7e6
 1767 0215 23020000 		.4byte	0x223
 1768 0219 0E       		.uleb128 0xe
 1769 021a 01       		.uleb128 0x1
 1770 021b 51       		.byte	0x51
 1771 021c 05       		.uleb128 0x5
 1772 021d 03       		.byte	0x3
 1773 021e 00000000 		.4byte	TC_StateMachine
 1774 0222 00       		.byte	0
 1775 0223 0D       		.uleb128 0xd
 1776 0224 12000000 		.4byte	.LVL6
 1777 0228 DB070000 		.4byte	0x7db
 1778 022c 3A020000 		.4byte	0x23a
 1779 0230 0E       		.uleb128 0xe
 1780 0231 01       		.uleb128 0x1
 1781 0232 50       		.byte	0x50
 1782 0233 05       		.uleb128 0x5
 1783 0234 03       		.byte	0x3
 1784 0235 18000000 		.4byte	.LC2
 1785 0239 00       		.byte	0
 1786 023a 0D       		.uleb128 0xd
 1787 023b 1C000000 		.4byte	.LVL7
 1788 023f F1070000 		.4byte	0x7f1
 1789 0243 51020000 		.4byte	0x251
 1790 0247 0E       		.uleb128 0xe
 1791 0248 01       		.uleb128 0x1
 1792 0249 51       		.byte	0x51
 1793 024a 05       		.uleb128 0x5
 1794 024b 03       		.byte	0x3
 1795 024c 00000000 		.4byte	TC_StateMachine
 1796 0250 00       		.byte	0
 1797 0251 0F       		.uleb128 0xf
 1798 0252 22000000 		.4byte	.LVL8
 1799 0256 DB070000 		.4byte	0x7db
 1800 025a 0E       		.uleb128 0xe
 1801 025b 01       		.uleb128 0x1
 1802 025c 50       		.byte	0x50
 1803 025d 05       		.uleb128 0x5
 1804 025e 03       		.byte	0x3
 1805 025f 3C000000 		.4byte	.LC3
 1806 0263 00       		.byte	0
 1807 0264 00       		.byte	0
 1808 0265 0A       		.uleb128 0xa
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 43


 1809 0266 F4010000 		.4byte	.LASF30
 1810 026a 01       		.byte	0x1
 1811 026b E1       		.byte	0xe1
 1812 026c 00000000 		.4byte	.LFB78
 1813 0270 40000000 		.4byte	.LFE78-.LFB78
 1814 0274 01       		.uleb128 0x1
 1815 0275 9C       		.byte	0x9c
 1816 0276 12       		.uleb128 0x12
 1817 0277 3D010000 		.4byte	.LASF31
 1818 027b 01       		.byte	0x1
 1819 027c 0901     		.2byte	0x109
 1820 027e 00000000 		.4byte	.LFB81
 1821 0282 14000000 		.4byte	.LFE81-.LFB81
 1822 0286 01       		.uleb128 0x1
 1823 0287 9C       		.byte	0x9c
 1824 0288 9B020000 		.4byte	0x29b
 1825 028c 13       		.uleb128 0x13
 1826 028d 25010000 		.4byte	.LASF37
 1827 0291 01       		.byte	0x1
 1828 0292 0901     		.2byte	0x109
 1829 0294 AF000000 		.4byte	0xaf
 1830 0298 01       		.uleb128 0x1
 1831 0299 50       		.byte	0x50
 1832 029a 00       		.byte	0
 1833 029b 14       		.uleb128 0x14
 1834 029c E9010000 		.4byte	.LASF32
 1835 02a0 01       		.byte	0x1
 1836 02a1 1001     		.2byte	0x110
 1837 02a3 00000000 		.4byte	.LFB82
 1838 02a7 10000000 		.4byte	.LFE82-.LFB82
 1839 02ab 01       		.uleb128 0x1
 1840 02ac 9C       		.byte	0x9c
 1841 02ad 0B       		.uleb128 0xb
 1842 02ae B2000000 		.4byte	.LASF33
 1843 02b2 01       		.byte	0x1
 1844 02b3 A3       		.byte	0xa3
 1845 02b4 00000000 		.4byte	.LFB75
 1846 02b8 38000000 		.4byte	.LFE75-.LFB75
 1847 02bc 01       		.uleb128 0x1
 1848 02bd 9C       		.byte	0x9c
 1849 02be CC020000 		.4byte	0x2cc
 1850 02c2 15       		.uleb128 0x15
 1851 02c3 1C000000 		.4byte	.LVL10
 1852 02c7 9B020000 		.4byte	0x29b
 1853 02cb 00       		.byte	0
 1854 02cc 0B       		.uleb128 0xb
 1855 02cd 76010000 		.4byte	.LASF34
 1856 02d1 01       		.byte	0x1
 1857 02d2 FC       		.byte	0xfc
 1858 02d3 00000000 		.4byte	.LFB80
 1859 02d7 44000000 		.4byte	.LFE80-.LFB80
 1860 02db 01       		.uleb128 0x1
 1861 02dc 9C       		.byte	0x9c
 1862 02dd FE020000 		.4byte	0x2fe
 1863 02e1 15       		.uleb128 0x15
 1864 02e2 1C000000 		.4byte	.LVL11
 1865 02e6 9B020000 		.4byte	0x29b
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 44


 1866 02ea 0F       		.uleb128 0xf
 1867 02eb 28000000 		.4byte	.LVL12
 1868 02ef DB070000 		.4byte	0x7db
 1869 02f3 0E       		.uleb128 0xe
 1870 02f4 01       		.uleb128 0x1
 1871 02f5 50       		.byte	0x50
 1872 02f6 05       		.uleb128 0x5
 1873 02f7 03       		.byte	0x3
 1874 02f8 58000000 		.4byte	.LC4
 1875 02fc 00       		.byte	0
 1876 02fd 00       		.byte	0
 1877 02fe 12       		.uleb128 0x12
 1878 02ff D7000000 		.4byte	.LASF35
 1879 0303 01       		.byte	0x1
 1880 0304 7C01     		.2byte	0x17c
 1881 0306 00000000 		.4byte	.LFB91
 1882 030a 7C000000 		.4byte	.LFE91-.LFB91
 1883 030e 01       		.uleb128 0x1
 1884 030f 9C       		.byte	0x9c
 1885 0310 2F030000 		.4byte	0x32f
 1886 0314 15       		.uleb128 0x15
 1887 0315 1C000000 		.4byte	.LVL13
 1888 0319 9B020000 		.4byte	0x29b
 1889 031d 0F       		.uleb128 0xf
 1890 031e 3C000000 		.4byte	.LVL14
 1891 0322 76020000 		.4byte	0x276
 1892 0326 0E       		.uleb128 0xe
 1893 0327 01       		.uleb128 0x1
 1894 0328 50       		.byte	0x50
 1895 0329 03       		.uleb128 0x3
 1896 032a 0A       		.byte	0xa
 1897 032b 1027     		.2byte	0x2710
 1898 032d 00       		.byte	0
 1899 032e 00       		.byte	0
 1900 032f 16       		.uleb128 0x16
 1901 0330 4D040000 		.4byte	.LASF42
 1902 0334 01       		.byte	0x1
 1903 0335 1601     		.2byte	0x116
 1904 0337 97000000 		.4byte	0x97
 1905 033b 00000000 		.4byte	.LFB83
 1906 033f 0C000000 		.4byte	.LFE83-.LFB83
 1907 0343 01       		.uleb128 0x1
 1908 0344 9C       		.byte	0x9c
 1909 0345 12       		.uleb128 0x12
 1910 0346 91000000 		.4byte	.LASF36
 1911 034a 01       		.byte	0x1
 1912 034b 1B01     		.2byte	0x11b
 1913 034d 00000000 		.4byte	.LFB84
 1914 0351 0C000000 		.4byte	.LFE84-.LFB84
 1915 0355 01       		.uleb128 0x1
 1916 0356 9C       		.byte	0x9c
 1917 0357 6A030000 		.4byte	0x36a
 1918 035b 13       		.uleb128 0x13
 1919 035c 12020000 		.4byte	.LASF38
 1920 0360 01       		.byte	0x1
 1921 0361 1B01     		.2byte	0x11b
 1922 0363 97000000 		.4byte	0x97
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 45


 1923 0367 01       		.uleb128 0x1
 1924 0368 50       		.byte	0x50
 1925 0369 00       		.byte	0
 1926 036a 12       		.uleb128 0x12
 1927 036b A2000000 		.4byte	.LASF39
 1928 036f 01       		.byte	0x1
 1929 0370 2001     		.2byte	0x120
 1930 0372 00000000 		.4byte	.LFB85
 1931 0376 14000000 		.4byte	.LFE85-.LFB85
 1932 037a 01       		.uleb128 0x1
 1933 037b 9C       		.byte	0x9c
 1934 037c 9D030000 		.4byte	0x39d
 1935 0380 13       		.uleb128 0x13
 1936 0381 71030000 		.4byte	.LASF40
 1937 0385 01       		.byte	0x1
 1938 0386 2001     		.2byte	0x120
 1939 0388 97000000 		.4byte	0x97
 1940 038c 01       		.uleb128 0x1
 1941 038d 50       		.byte	0x50
 1942 038e 17       		.uleb128 0x17
 1943 038f 64697200 		.ascii	"dir\000"
 1944 0393 01       		.byte	0x1
 1945 0394 2001     		.2byte	0x120
 1946 0396 BB000000 		.4byte	0xbb
 1947 039a 01       		.uleb128 0x1
 1948 039b 51       		.byte	0x51
 1949 039c 00       		.byte	0
 1950 039d 12       		.uleb128 0x12
 1951 039e 7F030000 		.4byte	.LASF41
 1952 03a2 01       		.byte	0x1
 1953 03a3 2601     		.2byte	0x126
 1954 03a5 00000000 		.4byte	.LFB86
 1955 03a9 8C000000 		.4byte	.LFE86-.LFB86
 1956 03ad 01       		.uleb128 0x1
 1957 03ae 9C       		.byte	0x9c
 1958 03af 7F040000 		.4byte	0x47f
 1959 03b3 0D       		.uleb128 0xd
 1960 03b4 22000000 		.4byte	.LVL17
 1961 03b8 DB070000 		.4byte	0x7db
 1962 03bc CA030000 		.4byte	0x3ca
 1963 03c0 0E       		.uleb128 0xe
 1964 03c1 01       		.uleb128 0x1
 1965 03c2 50       		.byte	0x50
 1966 03c3 05       		.uleb128 0x5
 1967 03c4 03       		.byte	0x3
 1968 03c5 64000000 		.4byte	.LC5
 1969 03c9 00       		.byte	0
 1970 03ca 0D       		.uleb128 0xd
 1971 03cb 2A000000 		.4byte	.LVL18
 1972 03cf DB070000 		.4byte	0x7db
 1973 03d3 E1030000 		.4byte	0x3e1
 1974 03d7 0E       		.uleb128 0xe
 1975 03d8 01       		.uleb128 0x1
 1976 03d9 50       		.byte	0x50
 1977 03da 05       		.uleb128 0x5
 1978 03db 03       		.byte	0x3
 1979 03dc 6C000000 		.4byte	.LC6
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 46


 1980 03e0 00       		.byte	0
 1981 03e1 0D       		.uleb128 0xd
 1982 03e2 32000000 		.4byte	.LVL19
 1983 03e6 DB070000 		.4byte	0x7db
 1984 03ea F8030000 		.4byte	0x3f8
 1985 03ee 0E       		.uleb128 0xe
 1986 03ef 01       		.uleb128 0x1
 1987 03f0 50       		.byte	0x50
 1988 03f1 05       		.uleb128 0x5
 1989 03f2 03       		.byte	0x3
 1990 03f3 78000000 		.4byte	.LC7
 1991 03f7 00       		.byte	0
 1992 03f8 0D       		.uleb128 0xd
 1993 03f9 3A000000 		.4byte	.LVL20
 1994 03fd DB070000 		.4byte	0x7db
 1995 0401 0F040000 		.4byte	0x40f
 1996 0405 0E       		.uleb128 0xe
 1997 0406 01       		.uleb128 0x1
 1998 0407 50       		.byte	0x50
 1999 0408 05       		.uleb128 0x5
 2000 0409 03       		.byte	0x3
 2001 040a 84000000 		.4byte	.LC8
 2002 040e 00       		.byte	0
 2003 040f 0D       		.uleb128 0xd
 2004 0410 42000000 		.4byte	.LVL21
 2005 0414 DB070000 		.4byte	0x7db
 2006 0418 26040000 		.4byte	0x426
 2007 041c 0E       		.uleb128 0xe
 2008 041d 01       		.uleb128 0x1
 2009 041e 50       		.byte	0x50
 2010 041f 05       		.uleb128 0x5
 2011 0420 03       		.byte	0x3
 2012 0421 90000000 		.4byte	.LC9
 2013 0425 00       		.byte	0
 2014 0426 0D       		.uleb128 0xd
 2015 0427 4A000000 		.4byte	.LVL22
 2016 042b DB070000 		.4byte	0x7db
 2017 042f 3D040000 		.4byte	0x43d
 2018 0433 0E       		.uleb128 0xe
 2019 0434 01       		.uleb128 0x1
 2020 0435 50       		.byte	0x50
 2021 0436 05       		.uleb128 0x5
 2022 0437 03       		.byte	0x3
 2023 0438 9C000000 		.4byte	.LC10
 2024 043c 00       		.byte	0
 2025 043d 0D       		.uleb128 0xd
 2026 043e 52000000 		.4byte	.LVL23
 2027 0442 DB070000 		.4byte	0x7db
 2028 0446 54040000 		.4byte	0x454
 2029 044a 0E       		.uleb128 0xe
 2030 044b 01       		.uleb128 0x1
 2031 044c 50       		.byte	0x50
 2032 044d 05       		.uleb128 0x5
 2033 044e 03       		.byte	0x3
 2034 044f AC000000 		.4byte	.LC11
 2035 0453 00       		.byte	0
 2036 0454 0D       		.uleb128 0xd
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 47


 2037 0455 5A000000 		.4byte	.LVL24
 2038 0459 DB070000 		.4byte	0x7db
 2039 045d 6B040000 		.4byte	0x46b
 2040 0461 0E       		.uleb128 0xe
 2041 0462 01       		.uleb128 0x1
 2042 0463 50       		.byte	0x50
 2043 0464 05       		.uleb128 0x5
 2044 0465 03       		.byte	0x3
 2045 0466 B8000000 		.4byte	.LC12
 2046 046a 00       		.byte	0
 2047 046b 0F       		.uleb128 0xf
 2048 046c 62000000 		.4byte	.LVL25
 2049 0470 DB070000 		.4byte	0x7db
 2050 0474 0E       		.uleb128 0xe
 2051 0475 01       		.uleb128 0x1
 2052 0476 50       		.byte	0x50
 2053 0477 05       		.uleb128 0x5
 2054 0478 03       		.byte	0x3
 2055 0479 C4000000 		.4byte	.LC13
 2056 047d 00       		.byte	0
 2057 047e 00       		.byte	0
 2058 047f 16       		.uleb128 0x16
 2059 0480 04010000 		.4byte	.LASF43
 2060 0484 01       		.byte	0x1
 2061 0485 4B01     		.2byte	0x14b
 2062 0487 73000000 		.4byte	0x73
 2063 048b 00000000 		.4byte	.LFB87
 2064 048f 18000000 		.4byte	.LFE87-.LFB87
 2065 0493 01       		.uleb128 0x1
 2066 0494 9C       		.byte	0x9c
 2067 0495 18       		.uleb128 0x18
 2068 0496 4A010000 		.4byte	.LASF77
 2069 049a 01       		.byte	0x1
 2070 049b 5801     		.2byte	0x158
 2071 049d 73000000 		.4byte	0x73
 2072 04a1 00000000 		.4byte	.LFB88
 2073 04a5 18000000 		.4byte	.LFE88-.LFB88
 2074 04a9 01       		.uleb128 0x1
 2075 04aa 9C       		.byte	0x9c
 2076 04ab BE040000 		.4byte	0x4be
 2077 04af 19       		.uleb128 0x19
 2078 04b0 18030000 		.4byte	.LASF44
 2079 04b4 01       		.byte	0x1
 2080 04b5 5A01     		.2byte	0x15a
 2081 04b7 97000000 		.4byte	0x97
 2082 04bb 01       		.uleb128 0x1
 2083 04bc 53       		.byte	0x53
 2084 04bd 00       		.byte	0
 2085 04be 0B       		.uleb128 0xb
 2086 04bf 84020000 		.4byte	.LASF45
 2087 04c3 01       		.byte	0x1
 2088 04c4 6C       		.byte	0x6c
 2089 04c5 00000000 		.4byte	.LFB70
 2090 04c9 24000000 		.4byte	.LFE70-.LFB70
 2091 04cd 01       		.uleb128 0x1
 2092 04ce 9C       		.byte	0x9c
 2093 04cf DD040000 		.4byte	0x4dd
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 48


 2094 04d3 15       		.uleb128 0x15
 2095 04d4 0C000000 		.4byte	.LVL27
 2096 04d8 95040000 		.4byte	0x495
 2097 04dc 00       		.byte	0
 2098 04dd 0B       		.uleb128 0xb
 2099 04de 0F030000 		.4byte	.LASF46
 2100 04e2 01       		.byte	0x1
 2101 04e3 ED       		.byte	0xed
 2102 04e4 00000000 		.4byte	.LFB79
 2103 04e8 34000000 		.4byte	.LFE79-.LFB79
 2104 04ec 01       		.uleb128 0x1
 2105 04ed 9C       		.byte	0x9c
 2106 04ee 21050000 		.4byte	0x521
 2107 04f2 15       		.uleb128 0x15
 2108 04f3 0C000000 		.4byte	.LVL28
 2109 04f7 7F040000 		.4byte	0x47f
 2110 04fb 15       		.uleb128 0x15
 2111 04fc 14000000 		.4byte	.LVL29
 2112 0500 95040000 		.4byte	0x495
 2113 0504 0D       		.uleb128 0xd
 2114 0505 1C000000 		.4byte	.LVL30
 2115 0509 45030000 		.4byte	0x345
 2116 050d 17050000 		.4byte	0x517
 2117 0511 0E       		.uleb128 0xe
 2118 0512 01       		.uleb128 0x1
 2119 0513 50       		.byte	0x50
 2120 0514 01       		.uleb128 0x1
 2121 0515 31       		.byte	0x31
 2122 0516 00       		.byte	0
 2123 0517 15       		.uleb128 0x15
 2124 0518 26000000 		.4byte	.LVL31
 2125 051c 9B020000 		.4byte	0x29b
 2126 0520 00       		.byte	0
 2127 0521 12       		.uleb128 0x12
 2128 0522 DA010000 		.4byte	.LASF47
 2129 0526 01       		.byte	0x1
 2130 0527 9301     		.2byte	0x193
 2131 0529 00000000 		.4byte	.LFB92
 2132 052d 30000000 		.4byte	.LFE92-.LFB92
 2133 0531 01       		.uleb128 0x1
 2134 0532 9C       		.byte	0x9c
 2135 0533 41050000 		.4byte	0x541
 2136 0537 15       		.uleb128 0x15
 2137 0538 16000000 		.4byte	.LVL32
 2138 053c 9B020000 		.4byte	0x29b
 2139 0540 00       		.byte	0
 2140 0541 0B       		.uleb128 0xb
 2141 0542 A2020000 		.4byte	.LASF48
 2142 0546 01       		.byte	0x1
 2143 0547 77       		.byte	0x77
 2144 0548 00000000 		.4byte	.LFB71
 2145 054c 38000000 		.4byte	.LFE71-.LFB71
 2146 0550 01       		.uleb128 0x1
 2147 0551 9C       		.byte	0x9c
 2148 0552 75050000 		.4byte	0x575
 2149 0556 0D       		.uleb128 0xd
 2150 0557 20000000 		.4byte	.LVL33
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 49


 2151 055b 76020000 		.4byte	0x276
 2152 055f 6B050000 		.4byte	0x56b
 2153 0563 0E       		.uleb128 0xe
 2154 0564 01       		.uleb128 0x1
 2155 0565 50       		.byte	0x50
 2156 0566 03       		.uleb128 0x3
 2157 0567 0A       		.byte	0xa
 2158 0568 B80B     		.2byte	0xbb8
 2159 056a 00       		.byte	0
 2160 056b 15       		.uleb128 0x15
 2161 056c 24000000 		.4byte	.LVL34
 2162 0570 21050000 		.4byte	0x521
 2163 0574 00       		.byte	0
 2164 0575 0B       		.uleb128 0xb
 2165 0576 82000000 		.4byte	.LASF49
 2166 057a 01       		.byte	0x1
 2167 057b 82       		.byte	0x82
 2168 057c 00000000 		.4byte	.LFB72
 2169 0580 34000000 		.4byte	.LFE72-.LFB72
 2170 0584 01       		.uleb128 0x1
 2171 0585 9C       		.byte	0x9c
 2172 0586 A3050000 		.4byte	0x5a3
 2173 058a 15       		.uleb128 0x15
 2174 058b 0C000000 		.4byte	.LVL35
 2175 058f 21050000 		.4byte	0x521
 2176 0593 0F       		.uleb128 0xf
 2177 0594 1C000000 		.4byte	.LVL36
 2178 0598 76020000 		.4byte	0x276
 2179 059c 0E       		.uleb128 0xe
 2180 059d 01       		.uleb128 0x1
 2181 059e 50       		.byte	0x50
 2182 059f 01       		.uleb128 0x1
 2183 05a0 3A       		.byte	0x3a
 2184 05a1 00       		.byte	0
 2185 05a2 00       		.byte	0
 2186 05a3 0B       		.uleb128 0xb
 2187 05a4 EE000000 		.4byte	.LASF50
 2188 05a8 01       		.byte	0x1
 2189 05a9 8D       		.byte	0x8d
 2190 05aa 00000000 		.4byte	.LFB73
 2191 05ae 38000000 		.4byte	.LFE73-.LFB73
 2192 05b2 01       		.uleb128 0x1
 2193 05b3 9C       		.byte	0x9c
 2194 05b4 D7050000 		.4byte	0x5d7
 2195 05b8 0D       		.uleb128 0xd
 2196 05b9 20000000 		.4byte	.LVL37
 2197 05bd 76020000 		.4byte	0x276
 2198 05c1 CD050000 		.4byte	0x5cd
 2199 05c5 0E       		.uleb128 0xe
 2200 05c6 01       		.uleb128 0x1
 2201 05c7 50       		.byte	0x50
 2202 05c8 03       		.uleb128 0x3
 2203 05c9 0A       		.byte	0xa
 2204 05ca B80B     		.2byte	0xbb8
 2205 05cc 00       		.byte	0
 2206 05cd 15       		.uleb128 0x15
 2207 05ce 24000000 		.4byte	.LVL38
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 50


 2208 05d2 21050000 		.4byte	0x521
 2209 05d6 00       		.byte	0
 2210 05d7 0B       		.uleb128 0xb
 2211 05d8 F9020000 		.4byte	.LASF51
 2212 05dc 01       		.byte	0x1
 2213 05dd 98       		.byte	0x98
 2214 05de 00000000 		.4byte	.LFB74
 2215 05e2 34000000 		.4byte	.LFE74-.LFB74
 2216 05e6 01       		.uleb128 0x1
 2217 05e7 9C       		.byte	0x9c
 2218 05e8 05060000 		.4byte	0x605
 2219 05ec 15       		.uleb128 0x15
 2220 05ed 0C000000 		.4byte	.LVL39
 2221 05f1 21050000 		.4byte	0x521
 2222 05f5 0F       		.uleb128 0xf
 2223 05f6 1C000000 		.4byte	.LVL40
 2224 05fa 76020000 		.4byte	0x276
 2225 05fe 0E       		.uleb128 0xe
 2226 05ff 01       		.uleb128 0x1
 2227 0600 50       		.byte	0x50
 2228 0601 01       		.uleb128 0x1
 2229 0602 3A       		.byte	0x3a
 2230 0603 00       		.byte	0
 2231 0604 00       		.byte	0
 2232 0605 0B       		.uleb128 0xb
 2233 0606 59000000 		.4byte	.LASF52
 2234 060a 01       		.byte	0x1
 2235 060b AD       		.byte	0xad
 2236 060c 00000000 		.4byte	.LFB76
 2237 0610 38000000 		.4byte	.LFE76-.LFB76
 2238 0614 01       		.uleb128 0x1
 2239 0615 9C       		.byte	0x9c
 2240 0616 39060000 		.4byte	0x639
 2241 061a 0D       		.uleb128 0xd
 2242 061b 20000000 		.4byte	.LVL41
 2243 061f 76020000 		.4byte	0x276
 2244 0623 2F060000 		.4byte	0x62f
 2245 0627 0E       		.uleb128 0xe
 2246 0628 01       		.uleb128 0x1
 2247 0629 50       		.byte	0x50
 2248 062a 03       		.uleb128 0x3
 2249 062b 0A       		.byte	0xa
 2250 062c D007     		.2byte	0x7d0
 2251 062e 00       		.byte	0
 2252 062f 15       		.uleb128 0x15
 2253 0630 24000000 		.4byte	.LVL42
 2254 0634 21050000 		.4byte	0x521
 2255 0638 00       		.byte	0
 2256 0639 0B       		.uleb128 0xb
 2257 063a 64020000 		.4byte	.LASF53
 2258 063e 01       		.byte	0x1
 2259 063f BA       		.byte	0xba
 2260 0640 00000000 		.4byte	.LFB77
 2261 0644 A8000000 		.4byte	.LFE77-.LFB77
 2262 0648 01       		.uleb128 0x1
 2263 0649 9C       		.byte	0x9c
 2264 064a 85060000 		.4byte	0x685
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 51


 2265 064e 15       		.uleb128 0x15
 2266 064f 0C000000 		.4byte	.LVL43
 2267 0653 21050000 		.4byte	0x521
 2268 0657 15       		.uleb128 0x15
 2269 0658 5A000000 		.4byte	.LVL44
 2270 065c 9B020000 		.4byte	0x29b
 2271 0660 0D       		.uleb128 0xd
 2272 0661 6C000000 		.4byte	.LVL45
 2273 0665 76020000 		.4byte	0x276
 2274 0669 73060000 		.4byte	0x673
 2275 066d 0E       		.uleb128 0xe
 2276 066e 01       		.uleb128 0x1
 2277 066f 50       		.byte	0x50
 2278 0670 01       		.uleb128 0x1
 2279 0671 3A       		.byte	0x3a
 2280 0672 00       		.byte	0
 2281 0673 0F       		.uleb128 0xf
 2282 0674 7C000000 		.4byte	.LVL46
 2283 0678 76020000 		.4byte	0x276
 2284 067c 0E       		.uleb128 0xe
 2285 067d 01       		.uleb128 0x1
 2286 067e 50       		.byte	0x50
 2287 067f 03       		.uleb128 0x3
 2288 0680 0A       		.byte	0xa
 2289 0681 F401     		.2byte	0x1f4
 2290 0683 00       		.byte	0
 2291 0684 00       		.byte	0
 2292 0685 12       		.uleb128 0x12
 2293 0686 06020000 		.4byte	.LASF54
 2294 068a 01       		.byte	0x1
 2295 068b 6501     		.2byte	0x165
 2296 068d 00000000 		.4byte	.LFB89
 2297 0691 34000000 		.4byte	.LFE89-.LFB89
 2298 0695 01       		.uleb128 0x1
 2299 0696 9C       		.byte	0x9c
 2300 0697 B4060000 		.4byte	0x6b4
 2301 069b 15       		.uleb128 0x15
 2302 069c 0C000000 		.4byte	.LVL47
 2303 06a0 21050000 		.4byte	0x521
 2304 06a4 0F       		.uleb128 0xf
 2305 06a5 1C000000 		.4byte	.LVL48
 2306 06a9 76020000 		.4byte	0x276
 2307 06ad 0E       		.uleb128 0xe
 2308 06ae 01       		.uleb128 0x1
 2309 06af 50       		.byte	0x50
 2310 06b0 01       		.uleb128 0x1
 2311 06b1 3A       		.byte	0x3a
 2312 06b2 00       		.byte	0
 2313 06b3 00       		.byte	0
 2314 06b4 12       		.uleb128 0x12
 2315 06b5 B7020000 		.4byte	.LASF55
 2316 06b9 01       		.byte	0x1
 2317 06ba 7001     		.2byte	0x170
 2318 06bc 00000000 		.4byte	.LFB90
 2319 06c0 34000000 		.4byte	.LFE90-.LFB90
 2320 06c4 01       		.uleb128 0x1
 2321 06c5 9C       		.byte	0x9c
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 52


 2322 06c6 E3060000 		.4byte	0x6e3
 2323 06ca 15       		.uleb128 0x15
 2324 06cb 06000000 		.4byte	.LVL49
 2325 06cf 21050000 		.4byte	0x521
 2326 06d3 0F       		.uleb128 0xf
 2327 06d4 16000000 		.4byte	.LVL50
 2328 06d8 76020000 		.4byte	0x276
 2329 06dc 0E       		.uleb128 0xe
 2330 06dd 01       		.uleb128 0x1
 2331 06de 50       		.byte	0x50
 2332 06df 01       		.uleb128 0x1
 2333 06e0 3A       		.byte	0x3a
 2334 06e1 00       		.byte	0
 2335 06e2 00       		.byte	0
 2336 06e3 1A       		.uleb128 0x1a
 2337 06e4 39030000 		.4byte	.LASF56
 2338 06e8 01       		.byte	0x1
 2339 06e9 23       		.byte	0x23
 2340 06ea 81000000 		.4byte	0x81
 2341 06ee 05       		.uleb128 0x5
 2342 06ef 03       		.byte	0x3
 2343 06f0 00000000 		.4byte	C_Count
 2344 06f4 1A       		.uleb128 0x1a
 2345 06f5 76030000 		.4byte	.LASF57
 2346 06f9 01       		.byte	0x1
 2347 06fa 24       		.byte	0x24
 2348 06fb 81000000 		.4byte	0x81
 2349 06ff 05       		.uleb128 0x5
 2350 0700 03       		.byte	0x3
 2351 0701 02000000 		.4byte	SecCount
 2352 0705 1A       		.uleb128 0x1a
 2353 0706 41030000 		.4byte	.LASF58
 2354 070a 01       		.byte	0x1
 2355 070b 37       		.byte	0x37
 2356 070c 97000000 		.4byte	0x97
 2357 0710 05       		.uleb128 0x5
 2358 0711 03       		.byte	0x3
 2359 0712 04000000 		.4byte	A_Count
 2360 0716 1A       		.uleb128 0x1a
 2361 0717 2A030000 		.4byte	.LASF59
 2362 071b 01       		.byte	0x1
 2363 071c 38       		.byte	0x38
 2364 071d A3000000 		.4byte	0xa3
 2365 0721 05       		.uleb128 0x5
 2366 0722 03       		.byte	0x3
 2367 0723 06000000 		.4byte	S_Count
 2368 0727 1A       		.uleb128 0x1a
 2369 0728 0C010000 		.4byte	.LASF60
 2370 072c 01       		.byte	0x1
 2371 072d 50       		.byte	0x50
 2372 072e AF000000 		.4byte	0xaf
 2373 0732 05       		.uleb128 0x5
 2374 0733 03       		.byte	0x3
 2375 0734 0C000000 		.4byte	TC_Delay
 2376 0738 1A       		.uleb128 0x1a
 2377 0739 89030000 		.4byte	.LASF61
 2378 073d 01       		.byte	0x1
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 53


 2379 073e 51       		.byte	0x51
 2380 073f AF000000 		.4byte	0xaf
 2381 0743 05       		.uleb128 0x5
 2382 0744 03       		.byte	0x3
 2383 0745 08000000 		.4byte	TC_DelayStart
 2384 0749 1B       		.uleb128 0x1b
 2385 074a A6030000 		.4byte	.LASF62
 2386 074e 06       		.byte	0x6
 2387 074f 1207     		.2byte	0x712
 2388 0751 55070000 		.4byte	0x755
 2389 0755 06       		.uleb128 0x6
 2390 0756 8C000000 		.4byte	0x8c
 2391 075a 10       		.uleb128 0x10
 2392 075b 07010000 		.4byte	0x107
 2393 075f 65070000 		.4byte	0x765
 2394 0763 1C       		.uleb128 0x1c
 2395 0764 00       		.byte	0
 2396 0765 1D       		.uleb128 0x1d
 2397 0766 4D000000 		.4byte	.LASF63
 2398 076a 01       		.byte	0x1
 2399 076b 17       		.byte	0x17
 2400 076c 5A070000 		.4byte	0x75a
 2401 0770 1D       		.uleb128 0x1d
 2402 0771 39020000 		.4byte	.LASF64
 2403 0775 01       		.byte	0x1
 2404 0776 1A       		.byte	0x1a
 2405 0777 ED000000 		.4byte	0xed
 2406 077b 1E       		.uleb128 0x1e
 2407 077c A0030000 		.4byte	.LASF65
 2408 0780 01       		.byte	0x1
 2409 0781 1C       		.byte	0x1c
 2410 0782 07010000 		.4byte	0x107
 2411 0786 05       		.uleb128 0x5
 2412 0787 03       		.byte	0x3
 2413 0788 00000000 		.4byte	TC_SM
 2414 078c 1E       		.uleb128 0x1e
 2415 078d 84010000 		.4byte	.LASF66
 2416 0791 01       		.byte	0x1
 2417 0792 1D       		.byte	0x1d
 2418 0793 97000000 		.4byte	0x97
 2419 0797 05       		.uleb128 0x5
 2420 0798 03       		.byte	0x3
 2421 0799 00000000 		.4byte	TC_STATE
 2422 079d 1E       		.uleb128 0x1e
 2423 079e 95020000 		.4byte	.LASF67
 2424 07a2 01       		.byte	0x1
 2425 07a3 1F       		.byte	0x1f
 2426 07a4 97000000 		.4byte	0x97
 2427 07a8 05       		.uleb128 0x5
 2428 07a9 03       		.byte	0x3
 2429 07aa 00000000 		.4byte	Current_Tool
 2430 07ae 1E       		.uleb128 0x1e
 2431 07af 8D010000 		.4byte	.LASF68
 2432 07b3 01       		.byte	0x1
 2433 07b4 20       		.byte	0x20
 2434 07b5 97000000 		.4byte	0x97
 2435 07b9 05       		.uleb128 0x5
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 54


 2436 07ba 03       		.byte	0x3
 2437 07bb 00000000 		.4byte	Target_Tool
 2438 07bf 1E       		.uleb128 0x1e
 2439 07c0 40000000 		.4byte	.LASF69
 2440 07c4 01       		.byte	0x1
 2441 07c5 21       		.byte	0x21
 2442 07c6 BB000000 		.4byte	0xbb
 2443 07ca 05       		.uleb128 0x5
 2444 07cb 03       		.byte	0x3
 2445 07cc 00000000 		.4byte	Carousel_Dir
 2446 07d0 1F       		.uleb128 0x1f
 2447 07d1 31020000 		.4byte	.LASF70
 2448 07d5 31020000 		.4byte	.LASF70
 2449 07d9 07       		.byte	0x7
 2450 07da E7       		.byte	0xe7
 2451 07db 1F       		.uleb128 0x1f
 2452 07dc 53010000 		.4byte	.LASF71
 2453 07e0 53010000 		.4byte	.LASF71
 2454 07e4 08       		.byte	0x8
 2455 07e5 4A       		.byte	0x4a
 2456 07e6 1F       		.uleb128 0x1f
 2457 07e7 72000000 		.4byte	.LASF72
 2458 07eb 72000000 		.4byte	.LASF72
 2459 07ef 05       		.byte	0x5
 2460 07f0 15       		.byte	0x15
 2461 07f1 1F       		.uleb128 0x1f
 2462 07f2 41040000 		.4byte	.LASF73
 2463 07f6 41040000 		.4byte	.LASF73
 2464 07fa 05       		.byte	0x5
 2465 07fb 13       		.byte	0x13
 2466 07fc 00       		.byte	0
 2467              		.section	.debug_abbrev,"",%progbits
 2468              	.Ldebug_abbrev0:
 2469 0000 01       		.uleb128 0x1
 2470 0001 11       		.uleb128 0x11
 2471 0002 01       		.byte	0x1
 2472 0003 25       		.uleb128 0x25
 2473 0004 0E       		.uleb128 0xe
 2474 0005 13       		.uleb128 0x13
 2475 0006 0B       		.uleb128 0xb
 2476 0007 03       		.uleb128 0x3
 2477 0008 0E       		.uleb128 0xe
 2478 0009 1B       		.uleb128 0x1b
 2479 000a 0E       		.uleb128 0xe
 2480 000b 55       		.uleb128 0x55
 2481 000c 17       		.uleb128 0x17
 2482 000d 11       		.uleb128 0x11
 2483 000e 01       		.uleb128 0x1
 2484 000f 10       		.uleb128 0x10
 2485 0010 17       		.uleb128 0x17
 2486 0011 00       		.byte	0
 2487 0012 00       		.byte	0
 2488 0013 02       		.uleb128 0x2
 2489 0014 24       		.uleb128 0x24
 2490 0015 00       		.byte	0
 2491 0016 0B       		.uleb128 0xb
 2492 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 55


 2493 0018 3E       		.uleb128 0x3e
 2494 0019 0B       		.uleb128 0xb
 2495 001a 03       		.uleb128 0x3
 2496 001b 0E       		.uleb128 0xe
 2497 001c 00       		.byte	0
 2498 001d 00       		.byte	0
 2499 001e 03       		.uleb128 0x3
 2500 001f 16       		.uleb128 0x16
 2501 0020 00       		.byte	0
 2502 0021 03       		.uleb128 0x3
 2503 0022 0E       		.uleb128 0xe
 2504 0023 3A       		.uleb128 0x3a
 2505 0024 0B       		.uleb128 0xb
 2506 0025 3B       		.uleb128 0x3b
 2507 0026 0B       		.uleb128 0xb
 2508 0027 49       		.uleb128 0x49
 2509 0028 13       		.uleb128 0x13
 2510 0029 00       		.byte	0
 2511 002a 00       		.byte	0
 2512 002b 04       		.uleb128 0x4
 2513 002c 24       		.uleb128 0x24
 2514 002d 00       		.byte	0
 2515 002e 0B       		.uleb128 0xb
 2516 002f 0B       		.uleb128 0xb
 2517 0030 3E       		.uleb128 0x3e
 2518 0031 0B       		.uleb128 0xb
 2519 0032 03       		.uleb128 0x3
 2520 0033 08       		.uleb128 0x8
 2521 0034 00       		.byte	0
 2522 0035 00       		.byte	0
 2523 0036 05       		.uleb128 0x5
 2524 0037 16       		.uleb128 0x16
 2525 0038 00       		.byte	0
 2526 0039 03       		.uleb128 0x3
 2527 003a 0E       		.uleb128 0xe
 2528 003b 3A       		.uleb128 0x3a
 2529 003c 0B       		.uleb128 0xb
 2530 003d 3B       		.uleb128 0x3b
 2531 003e 05       		.uleb128 0x5
 2532 003f 49       		.uleb128 0x49
 2533 0040 13       		.uleb128 0x13
 2534 0041 00       		.byte	0
 2535 0042 00       		.byte	0
 2536 0043 06       		.uleb128 0x6
 2537 0044 35       		.uleb128 0x35
 2538 0045 00       		.byte	0
 2539 0046 49       		.uleb128 0x49
 2540 0047 13       		.uleb128 0x13
 2541 0048 00       		.byte	0
 2542 0049 00       		.byte	0
 2543 004a 07       		.uleb128 0x7
 2544 004b 0F       		.uleb128 0xf
 2545 004c 00       		.byte	0
 2546 004d 0B       		.uleb128 0xb
 2547 004e 0B       		.uleb128 0xb
 2548 004f 49       		.uleb128 0x49
 2549 0050 13       		.uleb128 0x13
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 56


 2550 0051 00       		.byte	0
 2551 0052 00       		.byte	0
 2552 0053 08       		.uleb128 0x8
 2553 0054 15       		.uleb128 0x15
 2554 0055 00       		.byte	0
 2555 0056 27       		.uleb128 0x27
 2556 0057 19       		.uleb128 0x19
 2557 0058 00       		.byte	0
 2558 0059 00       		.byte	0
 2559 005a 09       		.uleb128 0x9
 2560 005b 2E       		.uleb128 0x2e
 2561 005c 00       		.byte	0
 2562 005d 3F       		.uleb128 0x3f
 2563 005e 19       		.uleb128 0x19
 2564 005f 03       		.uleb128 0x3
 2565 0060 0E       		.uleb128 0xe
 2566 0061 3A       		.uleb128 0x3a
 2567 0062 0B       		.uleb128 0xb
 2568 0063 3B       		.uleb128 0x3b
 2569 0064 0B       		.uleb128 0xb
 2570 0065 27       		.uleb128 0x27
 2571 0066 19       		.uleb128 0x19
 2572 0067 11       		.uleb128 0x11
 2573 0068 01       		.uleb128 0x1
 2574 0069 12       		.uleb128 0x12
 2575 006a 06       		.uleb128 0x6
 2576 006b 40       		.uleb128 0x40
 2577 006c 18       		.uleb128 0x18
 2578 006d 9642     		.uleb128 0x2116
 2579 006f 19       		.uleb128 0x19
 2580 0070 00       		.byte	0
 2581 0071 00       		.byte	0
 2582 0072 0A       		.uleb128 0xa
 2583 0073 2E       		.uleb128 0x2e
 2584 0074 00       		.byte	0
 2585 0075 3F       		.uleb128 0x3f
 2586 0076 19       		.uleb128 0x19
 2587 0077 03       		.uleb128 0x3
 2588 0078 0E       		.uleb128 0xe
 2589 0079 3A       		.uleb128 0x3a
 2590 007a 0B       		.uleb128 0xb
 2591 007b 3B       		.uleb128 0x3b
 2592 007c 0B       		.uleb128 0xb
 2593 007d 27       		.uleb128 0x27
 2594 007e 19       		.uleb128 0x19
 2595 007f 11       		.uleb128 0x11
 2596 0080 01       		.uleb128 0x1
 2597 0081 12       		.uleb128 0x12
 2598 0082 06       		.uleb128 0x6
 2599 0083 40       		.uleb128 0x40
 2600 0084 18       		.uleb128 0x18
 2601 0085 9742     		.uleb128 0x2117
 2602 0087 19       		.uleb128 0x19
 2603 0088 00       		.byte	0
 2604 0089 00       		.byte	0
 2605 008a 0B       		.uleb128 0xb
 2606 008b 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 57


 2607 008c 01       		.byte	0x1
 2608 008d 3F       		.uleb128 0x3f
 2609 008e 19       		.uleb128 0x19
 2610 008f 03       		.uleb128 0x3
 2611 0090 0E       		.uleb128 0xe
 2612 0091 3A       		.uleb128 0x3a
 2613 0092 0B       		.uleb128 0xb
 2614 0093 3B       		.uleb128 0x3b
 2615 0094 0B       		.uleb128 0xb
 2616 0095 27       		.uleb128 0x27
 2617 0096 19       		.uleb128 0x19
 2618 0097 11       		.uleb128 0x11
 2619 0098 01       		.uleb128 0x1
 2620 0099 12       		.uleb128 0x12
 2621 009a 06       		.uleb128 0x6
 2622 009b 40       		.uleb128 0x40
 2623 009c 18       		.uleb128 0x18
 2624 009d 9742     		.uleb128 0x2117
 2625 009f 19       		.uleb128 0x19
 2626 00a0 01       		.uleb128 0x1
 2627 00a1 13       		.uleb128 0x13
 2628 00a2 00       		.byte	0
 2629 00a3 00       		.byte	0
 2630 00a4 0C       		.uleb128 0xc
 2631 00a5 34       		.uleb128 0x34
 2632 00a6 00       		.byte	0
 2633 00a7 03       		.uleb128 0x3
 2634 00a8 08       		.uleb128 0x8
 2635 00a9 3A       		.uleb128 0x3a
 2636 00aa 0B       		.uleb128 0xb
 2637 00ab 3B       		.uleb128 0x3b
 2638 00ac 0B       		.uleb128 0xb
 2639 00ad 49       		.uleb128 0x49
 2640 00ae 13       		.uleb128 0x13
 2641 00af 02       		.uleb128 0x2
 2642 00b0 18       		.uleb128 0x18
 2643 00b1 00       		.byte	0
 2644 00b2 00       		.byte	0
 2645 00b3 0D       		.uleb128 0xd
 2646 00b4 898201   		.uleb128 0x4109
 2647 00b7 01       		.byte	0x1
 2648 00b8 11       		.uleb128 0x11
 2649 00b9 01       		.uleb128 0x1
 2650 00ba 31       		.uleb128 0x31
 2651 00bb 13       		.uleb128 0x13
 2652 00bc 01       		.uleb128 0x1
 2653 00bd 13       		.uleb128 0x13
 2654 00be 00       		.byte	0
 2655 00bf 00       		.byte	0
 2656 00c0 0E       		.uleb128 0xe
 2657 00c1 8A8201   		.uleb128 0x410a
 2658 00c4 00       		.byte	0
 2659 00c5 02       		.uleb128 0x2
 2660 00c6 18       		.uleb128 0x18
 2661 00c7 9142     		.uleb128 0x2111
 2662 00c9 18       		.uleb128 0x18
 2663 00ca 00       		.byte	0
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 58


 2664 00cb 00       		.byte	0
 2665 00cc 0F       		.uleb128 0xf
 2666 00cd 898201   		.uleb128 0x4109
 2667 00d0 01       		.byte	0x1
 2668 00d1 11       		.uleb128 0x11
 2669 00d2 01       		.uleb128 0x1
 2670 00d3 31       		.uleb128 0x31
 2671 00d4 13       		.uleb128 0x13
 2672 00d5 00       		.byte	0
 2673 00d6 00       		.byte	0
 2674 00d7 10       		.uleb128 0x10
 2675 00d8 01       		.uleb128 0x1
 2676 00d9 01       		.byte	0x1
 2677 00da 49       		.uleb128 0x49
 2678 00db 13       		.uleb128 0x13
 2679 00dc 01       		.uleb128 0x1
 2680 00dd 13       		.uleb128 0x13
 2681 00de 00       		.byte	0
 2682 00df 00       		.byte	0
 2683 00e0 11       		.uleb128 0x11
 2684 00e1 21       		.uleb128 0x21
 2685 00e2 00       		.byte	0
 2686 00e3 49       		.uleb128 0x49
 2687 00e4 13       		.uleb128 0x13
 2688 00e5 2F       		.uleb128 0x2f
 2689 00e6 0B       		.uleb128 0xb
 2690 00e7 00       		.byte	0
 2691 00e8 00       		.byte	0
 2692 00e9 12       		.uleb128 0x12
 2693 00ea 2E       		.uleb128 0x2e
 2694 00eb 01       		.byte	0x1
 2695 00ec 3F       		.uleb128 0x3f
 2696 00ed 19       		.uleb128 0x19
 2697 00ee 03       		.uleb128 0x3
 2698 00ef 0E       		.uleb128 0xe
 2699 00f0 3A       		.uleb128 0x3a
 2700 00f1 0B       		.uleb128 0xb
 2701 00f2 3B       		.uleb128 0x3b
 2702 00f3 05       		.uleb128 0x5
 2703 00f4 27       		.uleb128 0x27
 2704 00f5 19       		.uleb128 0x19
 2705 00f6 11       		.uleb128 0x11
 2706 00f7 01       		.uleb128 0x1
 2707 00f8 12       		.uleb128 0x12
 2708 00f9 06       		.uleb128 0x6
 2709 00fa 40       		.uleb128 0x40
 2710 00fb 18       		.uleb128 0x18
 2711 00fc 9742     		.uleb128 0x2117
 2712 00fe 19       		.uleb128 0x19
 2713 00ff 01       		.uleb128 0x1
 2714 0100 13       		.uleb128 0x13
 2715 0101 00       		.byte	0
 2716 0102 00       		.byte	0
 2717 0103 13       		.uleb128 0x13
 2718 0104 05       		.uleb128 0x5
 2719 0105 00       		.byte	0
 2720 0106 03       		.uleb128 0x3
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 59


 2721 0107 0E       		.uleb128 0xe
 2722 0108 3A       		.uleb128 0x3a
 2723 0109 0B       		.uleb128 0xb
 2724 010a 3B       		.uleb128 0x3b
 2725 010b 05       		.uleb128 0x5
 2726 010c 49       		.uleb128 0x49
 2727 010d 13       		.uleb128 0x13
 2728 010e 02       		.uleb128 0x2
 2729 010f 18       		.uleb128 0x18
 2730 0110 00       		.byte	0
 2731 0111 00       		.byte	0
 2732 0112 14       		.uleb128 0x14
 2733 0113 2E       		.uleb128 0x2e
 2734 0114 00       		.byte	0
 2735 0115 3F       		.uleb128 0x3f
 2736 0116 19       		.uleb128 0x19
 2737 0117 03       		.uleb128 0x3
 2738 0118 0E       		.uleb128 0xe
 2739 0119 3A       		.uleb128 0x3a
 2740 011a 0B       		.uleb128 0xb
 2741 011b 3B       		.uleb128 0x3b
 2742 011c 05       		.uleb128 0x5
 2743 011d 27       		.uleb128 0x27
 2744 011e 19       		.uleb128 0x19
 2745 011f 11       		.uleb128 0x11
 2746 0120 01       		.uleb128 0x1
 2747 0121 12       		.uleb128 0x12
 2748 0122 06       		.uleb128 0x6
 2749 0123 40       		.uleb128 0x40
 2750 0124 18       		.uleb128 0x18
 2751 0125 9742     		.uleb128 0x2117
 2752 0127 19       		.uleb128 0x19
 2753 0128 00       		.byte	0
 2754 0129 00       		.byte	0
 2755 012a 15       		.uleb128 0x15
 2756 012b 898201   		.uleb128 0x4109
 2757 012e 00       		.byte	0
 2758 012f 11       		.uleb128 0x11
 2759 0130 01       		.uleb128 0x1
 2760 0131 31       		.uleb128 0x31
 2761 0132 13       		.uleb128 0x13
 2762 0133 00       		.byte	0
 2763 0134 00       		.byte	0
 2764 0135 16       		.uleb128 0x16
 2765 0136 2E       		.uleb128 0x2e
 2766 0137 00       		.byte	0
 2767 0138 3F       		.uleb128 0x3f
 2768 0139 19       		.uleb128 0x19
 2769 013a 03       		.uleb128 0x3
 2770 013b 0E       		.uleb128 0xe
 2771 013c 3A       		.uleb128 0x3a
 2772 013d 0B       		.uleb128 0xb
 2773 013e 3B       		.uleb128 0x3b
 2774 013f 05       		.uleb128 0x5
 2775 0140 27       		.uleb128 0x27
 2776 0141 19       		.uleb128 0x19
 2777 0142 49       		.uleb128 0x49
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 60


 2778 0143 13       		.uleb128 0x13
 2779 0144 11       		.uleb128 0x11
 2780 0145 01       		.uleb128 0x1
 2781 0146 12       		.uleb128 0x12
 2782 0147 06       		.uleb128 0x6
 2783 0148 40       		.uleb128 0x40
 2784 0149 18       		.uleb128 0x18
 2785 014a 9742     		.uleb128 0x2117
 2786 014c 19       		.uleb128 0x19
 2787 014d 00       		.byte	0
 2788 014e 00       		.byte	0
 2789 014f 17       		.uleb128 0x17
 2790 0150 05       		.uleb128 0x5
 2791 0151 00       		.byte	0
 2792 0152 03       		.uleb128 0x3
 2793 0153 08       		.uleb128 0x8
 2794 0154 3A       		.uleb128 0x3a
 2795 0155 0B       		.uleb128 0xb
 2796 0156 3B       		.uleb128 0x3b
 2797 0157 05       		.uleb128 0x5
 2798 0158 49       		.uleb128 0x49
 2799 0159 13       		.uleb128 0x13
 2800 015a 02       		.uleb128 0x2
 2801 015b 18       		.uleb128 0x18
 2802 015c 00       		.byte	0
 2803 015d 00       		.byte	0
 2804 015e 18       		.uleb128 0x18
 2805 015f 2E       		.uleb128 0x2e
 2806 0160 01       		.byte	0x1
 2807 0161 3F       		.uleb128 0x3f
 2808 0162 19       		.uleb128 0x19
 2809 0163 03       		.uleb128 0x3
 2810 0164 0E       		.uleb128 0xe
 2811 0165 3A       		.uleb128 0x3a
 2812 0166 0B       		.uleb128 0xb
 2813 0167 3B       		.uleb128 0x3b
 2814 0168 05       		.uleb128 0x5
 2815 0169 27       		.uleb128 0x27
 2816 016a 19       		.uleb128 0x19
 2817 016b 49       		.uleb128 0x49
 2818 016c 13       		.uleb128 0x13
 2819 016d 11       		.uleb128 0x11
 2820 016e 01       		.uleb128 0x1
 2821 016f 12       		.uleb128 0x12
 2822 0170 06       		.uleb128 0x6
 2823 0171 40       		.uleb128 0x40
 2824 0172 18       		.uleb128 0x18
 2825 0173 9742     		.uleb128 0x2117
 2826 0175 19       		.uleb128 0x19
 2827 0176 01       		.uleb128 0x1
 2828 0177 13       		.uleb128 0x13
 2829 0178 00       		.byte	0
 2830 0179 00       		.byte	0
 2831 017a 19       		.uleb128 0x19
 2832 017b 34       		.uleb128 0x34
 2833 017c 00       		.byte	0
 2834 017d 03       		.uleb128 0x3
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 61


 2835 017e 0E       		.uleb128 0xe
 2836 017f 3A       		.uleb128 0x3a
 2837 0180 0B       		.uleb128 0xb
 2838 0181 3B       		.uleb128 0x3b
 2839 0182 05       		.uleb128 0x5
 2840 0183 49       		.uleb128 0x49
 2841 0184 13       		.uleb128 0x13
 2842 0185 02       		.uleb128 0x2
 2843 0186 18       		.uleb128 0x18
 2844 0187 00       		.byte	0
 2845 0188 00       		.byte	0
 2846 0189 1A       		.uleb128 0x1a
 2847 018a 34       		.uleb128 0x34
 2848 018b 00       		.byte	0
 2849 018c 03       		.uleb128 0x3
 2850 018d 0E       		.uleb128 0xe
 2851 018e 3A       		.uleb128 0x3a
 2852 018f 0B       		.uleb128 0xb
 2853 0190 3B       		.uleb128 0x3b
 2854 0191 0B       		.uleb128 0xb
 2855 0192 49       		.uleb128 0x49
 2856 0193 13       		.uleb128 0x13
 2857 0194 02       		.uleb128 0x2
 2858 0195 18       		.uleb128 0x18
 2859 0196 00       		.byte	0
 2860 0197 00       		.byte	0
 2861 0198 1B       		.uleb128 0x1b
 2862 0199 34       		.uleb128 0x34
 2863 019a 00       		.byte	0
 2864 019b 03       		.uleb128 0x3
 2865 019c 0E       		.uleb128 0xe
 2866 019d 3A       		.uleb128 0x3a
 2867 019e 0B       		.uleb128 0xb
 2868 019f 3B       		.uleb128 0x3b
 2869 01a0 05       		.uleb128 0x5
 2870 01a1 49       		.uleb128 0x49
 2871 01a2 13       		.uleb128 0x13
 2872 01a3 3F       		.uleb128 0x3f
 2873 01a4 19       		.uleb128 0x19
 2874 01a5 3C       		.uleb128 0x3c
 2875 01a6 19       		.uleb128 0x19
 2876 01a7 00       		.byte	0
 2877 01a8 00       		.byte	0
 2878 01a9 1C       		.uleb128 0x1c
 2879 01aa 21       		.uleb128 0x21
 2880 01ab 00       		.byte	0
 2881 01ac 00       		.byte	0
 2882 01ad 00       		.byte	0
 2883 01ae 1D       		.uleb128 0x1d
 2884 01af 34       		.uleb128 0x34
 2885 01b0 00       		.byte	0
 2886 01b1 03       		.uleb128 0x3
 2887 01b2 0E       		.uleb128 0xe
 2888 01b3 3A       		.uleb128 0x3a
 2889 01b4 0B       		.uleb128 0xb
 2890 01b5 3B       		.uleb128 0x3b
 2891 01b6 0B       		.uleb128 0xb
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 62


 2892 01b7 49       		.uleb128 0x49
 2893 01b8 13       		.uleb128 0x13
 2894 01b9 3F       		.uleb128 0x3f
 2895 01ba 19       		.uleb128 0x19
 2896 01bb 3C       		.uleb128 0x3c
 2897 01bc 19       		.uleb128 0x19
 2898 01bd 00       		.byte	0
 2899 01be 00       		.byte	0
 2900 01bf 1E       		.uleb128 0x1e
 2901 01c0 34       		.uleb128 0x34
 2902 01c1 00       		.byte	0
 2903 01c2 03       		.uleb128 0x3
 2904 01c3 0E       		.uleb128 0xe
 2905 01c4 3A       		.uleb128 0x3a
 2906 01c5 0B       		.uleb128 0xb
 2907 01c6 3B       		.uleb128 0x3b
 2908 01c7 0B       		.uleb128 0xb
 2909 01c8 49       		.uleb128 0x49
 2910 01c9 13       		.uleb128 0x13
 2911 01ca 3F       		.uleb128 0x3f
 2912 01cb 19       		.uleb128 0x19
 2913 01cc 02       		.uleb128 0x2
 2914 01cd 18       		.uleb128 0x18
 2915 01ce 00       		.byte	0
 2916 01cf 00       		.byte	0
 2917 01d0 1F       		.uleb128 0x1f
 2918 01d1 2E       		.uleb128 0x2e
 2919 01d2 00       		.byte	0
 2920 01d3 3F       		.uleb128 0x3f
 2921 01d4 19       		.uleb128 0x19
 2922 01d5 3C       		.uleb128 0x3c
 2923 01d6 19       		.uleb128 0x19
 2924 01d7 6E       		.uleb128 0x6e
 2925 01d8 0E       		.uleb128 0xe
 2926 01d9 03       		.uleb128 0x3
 2927 01da 0E       		.uleb128 0xe
 2928 01db 3A       		.uleb128 0x3a
 2929 01dc 0B       		.uleb128 0xb
 2930 01dd 3B       		.uleb128 0x3b
 2931 01de 0B       		.uleb128 0xb
 2932 01df 00       		.byte	0
 2933 01e0 00       		.byte	0
 2934 01e1 00       		.byte	0
 2935              		.section	.debug_aranges,"",%progbits
 2936 0000 FC000000 		.4byte	0xfc
 2937 0004 0200     		.2byte	0x2
 2938 0006 00000000 		.4byte	.Ldebug_info0
 2939 000a 04       		.byte	0x4
 2940 000b 00       		.byte	0
 2941 000c 0000     		.2byte	0
 2942 000e 0000     		.2byte	0
 2943 0010 00000000 		.4byte	.LFB69
 2944 0014 10000000 		.4byte	.LFE69-.LFB69
 2945 0018 00000000 		.4byte	.LFB64
 2946 001c 14000000 		.4byte	.LFE64-.LFB64
 2947 0020 00000000 		.4byte	.LFB65
 2948 0024 3C000000 		.4byte	.LFE65-.LFB65
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 63


 2949 0028 00000000 		.4byte	.LFB66
 2950 002c 14000000 		.4byte	.LFE66-.LFB66
 2951 0030 00000000 		.4byte	.LFB67
 2952 0034 48000000 		.4byte	.LFE67-.LFB67
 2953 0038 00000000 		.4byte	.LFB68
 2954 003c 44000000 		.4byte	.LFE68-.LFB68
 2955 0040 00000000 		.4byte	.LFB78
 2956 0044 40000000 		.4byte	.LFE78-.LFB78
 2957 0048 00000000 		.4byte	.LFB81
 2958 004c 14000000 		.4byte	.LFE81-.LFB81
 2959 0050 00000000 		.4byte	.LFB82
 2960 0054 10000000 		.4byte	.LFE82-.LFB82
 2961 0058 00000000 		.4byte	.LFB75
 2962 005c 38000000 		.4byte	.LFE75-.LFB75
 2963 0060 00000000 		.4byte	.LFB80
 2964 0064 44000000 		.4byte	.LFE80-.LFB80
 2965 0068 00000000 		.4byte	.LFB91
 2966 006c 7C000000 		.4byte	.LFE91-.LFB91
 2967 0070 00000000 		.4byte	.LFB83
 2968 0074 0C000000 		.4byte	.LFE83-.LFB83
 2969 0078 00000000 		.4byte	.LFB84
 2970 007c 0C000000 		.4byte	.LFE84-.LFB84
 2971 0080 00000000 		.4byte	.LFB85
 2972 0084 14000000 		.4byte	.LFE85-.LFB85
 2973 0088 00000000 		.4byte	.LFB86
 2974 008c 8C000000 		.4byte	.LFE86-.LFB86
 2975 0090 00000000 		.4byte	.LFB87
 2976 0094 18000000 		.4byte	.LFE87-.LFB87
 2977 0098 00000000 		.4byte	.LFB88
 2978 009c 18000000 		.4byte	.LFE88-.LFB88
 2979 00a0 00000000 		.4byte	.LFB70
 2980 00a4 24000000 		.4byte	.LFE70-.LFB70
 2981 00a8 00000000 		.4byte	.LFB79
 2982 00ac 34000000 		.4byte	.LFE79-.LFB79
 2983 00b0 00000000 		.4byte	.LFB92
 2984 00b4 30000000 		.4byte	.LFE92-.LFB92
 2985 00b8 00000000 		.4byte	.LFB71
 2986 00bc 38000000 		.4byte	.LFE71-.LFB71
 2987 00c0 00000000 		.4byte	.LFB72
 2988 00c4 34000000 		.4byte	.LFE72-.LFB72
 2989 00c8 00000000 		.4byte	.LFB73
 2990 00cc 38000000 		.4byte	.LFE73-.LFB73
 2991 00d0 00000000 		.4byte	.LFB74
 2992 00d4 34000000 		.4byte	.LFE74-.LFB74
 2993 00d8 00000000 		.4byte	.LFB76
 2994 00dc 38000000 		.4byte	.LFE76-.LFB76
 2995 00e0 00000000 		.4byte	.LFB77
 2996 00e4 A8000000 		.4byte	.LFE77-.LFB77
 2997 00e8 00000000 		.4byte	.LFB89
 2998 00ec 34000000 		.4byte	.LFE89-.LFB89
 2999 00f0 00000000 		.4byte	.LFB90
 3000 00f4 34000000 		.4byte	.LFE90-.LFB90
 3001 00f8 00000000 		.4byte	0
 3002 00fc 00000000 		.4byte	0
 3003              		.section	.debug_ranges,"",%progbits
 3004              	.Ldebug_ranges0:
 3005 0000 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 64


 3006 0004 10000000 		.4byte	.LFE69
 3007 0008 00000000 		.4byte	.LFB64
 3008 000c 14000000 		.4byte	.LFE64
 3009 0010 00000000 		.4byte	.LFB65
 3010 0014 3C000000 		.4byte	.LFE65
 3011 0018 00000000 		.4byte	.LFB66
 3012 001c 14000000 		.4byte	.LFE66
 3013 0020 00000000 		.4byte	.LFB67
 3014 0024 48000000 		.4byte	.LFE67
 3015 0028 00000000 		.4byte	.LFB68
 3016 002c 44000000 		.4byte	.LFE68
 3017 0030 00000000 		.4byte	.LFB78
 3018 0034 40000000 		.4byte	.LFE78
 3019 0038 00000000 		.4byte	.LFB81
 3020 003c 14000000 		.4byte	.LFE81
 3021 0040 00000000 		.4byte	.LFB82
 3022 0044 10000000 		.4byte	.LFE82
 3023 0048 00000000 		.4byte	.LFB75
 3024 004c 38000000 		.4byte	.LFE75
 3025 0050 00000000 		.4byte	.LFB80
 3026 0054 44000000 		.4byte	.LFE80
 3027 0058 00000000 		.4byte	.LFB91
 3028 005c 7C000000 		.4byte	.LFE91
 3029 0060 00000000 		.4byte	.LFB83
 3030 0064 0C000000 		.4byte	.LFE83
 3031 0068 00000000 		.4byte	.LFB84
 3032 006c 0C000000 		.4byte	.LFE84
 3033 0070 00000000 		.4byte	.LFB85
 3034 0074 14000000 		.4byte	.LFE85
 3035 0078 00000000 		.4byte	.LFB86
 3036 007c 8C000000 		.4byte	.LFE86
 3037 0080 00000000 		.4byte	.LFB87
 3038 0084 18000000 		.4byte	.LFE87
 3039 0088 00000000 		.4byte	.LFB88
 3040 008c 18000000 		.4byte	.LFE88
 3041 0090 00000000 		.4byte	.LFB70
 3042 0094 24000000 		.4byte	.LFE70
 3043 0098 00000000 		.4byte	.LFB79
 3044 009c 34000000 		.4byte	.LFE79
 3045 00a0 00000000 		.4byte	.LFB92
 3046 00a4 30000000 		.4byte	.LFE92
 3047 00a8 00000000 		.4byte	.LFB71
 3048 00ac 38000000 		.4byte	.LFE71
 3049 00b0 00000000 		.4byte	.LFB72
 3050 00b4 34000000 		.4byte	.LFE72
 3051 00b8 00000000 		.4byte	.LFB73
 3052 00bc 38000000 		.4byte	.LFE73
 3053 00c0 00000000 		.4byte	.LFB74
 3054 00c4 34000000 		.4byte	.LFE74
 3055 00c8 00000000 		.4byte	.LFB76
 3056 00cc 38000000 		.4byte	.LFE76
 3057 00d0 00000000 		.4byte	.LFB77
 3058 00d4 A8000000 		.4byte	.LFE77
 3059 00d8 00000000 		.4byte	.LFB89
 3060 00dc 34000000 		.4byte	.LFE89
 3061 00e0 00000000 		.4byte	.LFB90
 3062 00e4 34000000 		.4byte	.LFE90
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 65


 3063 00e8 00000000 		.4byte	0
 3064 00ec 00000000 		.4byte	0
 3065              		.section	.debug_line,"",%progbits
 3066              	.Ldebug_line0:
 3067 0000 55040000 		.section	.debug_str,"MS",%progbits,1
 3067      0200E101 
 3067      00000201 
 3067      FB0E0D00 
 3067      01010101 
 3068              	.LASF76:
 3069 0000 433A5C44 		.ascii	"C:\\Dan\\Eng Projects\\BP308\\TLAUX\\ARM Code\\TLAU"
 3069      616E5C45 
 3069      6E672050 
 3069      726F6A65 
 3069      6374735C 
 3070 002d 585C544C 		.ascii	"X\\TLAUX_PSoC.cydsn\000"
 3070      4155585F 
 3070      50536F43 
 3070      2E637964 
 3070      736E00
 3071              	.LASF69:
 3072 0040 4361726F 		.ascii	"Carousel_Dir\000"
 3072      7573656C 
 3072      5F446972 
 3072      00
 3073              	.LASF63:
 3074 004d 46617374 		.ascii	"FastProcess\000"
 3074      50726F63 
 3074      65737300 
 3075              	.LASF52:
 3076 0059 54435F43 		.ascii	"TC_Carousel_Moving_Start\000"
 3076      61726F75 
 3076      73656C5F 
 3076      4D6F7669 
 3076      6E675F53 
 3077              	.LASF72:
 3078 0072 50726F63 		.ascii	"Process_Running\000"
 3078      6573735F 
 3078      52756E6E 
 3078      696E6700 
 3079              	.LASF49:
 3080 0082 54435F41 		.ascii	"TC_Arm_Move_In\000"
 3080      726D5F4D 
 3080      6F76655F 
 3080      496E00
 3081              	.LASF36:
 3082 0091 5365745F 		.ascii	"Set_Current_Tool\000"
 3082      43757272 
 3082      656E745F 
 3082      546F6F6C 
 3082      00
 3083              	.LASF39:
 3084 00a2 5365745F 		.ascii	"Set_Target_Tool\000"
 3084      54617267 
 3084      65745F54 
 3084      6F6F6C00 
 3085              	.LASF33:
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 66


 3086 00b2 54435F4D 		.ascii	"TC_Motor_Brake\000"
 3086      6F746F72 
 3086      5F427261 
 3086      6B6500
 3087              	.LASF75:
 3088 00c1 50726F63 		.ascii	"Processes.c\000"
 3088      65737365 
 3088      732E6300 
 3089              	.LASF2:
 3090 00cd 73686F72 		.ascii	"short int\000"
 3090      7420696E 
 3090      7400
 3091              	.LASF35:
 3092 00d7 54435F48 		.ascii	"TC_Home_Delay\000"
 3092      6F6D655F 
 3092      44656C61 
 3092      7900
 3093              	.LASF22:
 3094 00e5 73697A65 		.ascii	"sizetype\000"
 3094      74797065 
 3094      00
 3095              	.LASF50:
 3096 00ee 54435F41 		.ascii	"TC_Arm_Move_Out_Start\000"
 3096      726D5F4D 
 3096      6F76655F 
 3096      4F75745F 
 3096      53746172 
 3097              	.LASF43:
 3098 0104 41745F48 		.ascii	"At_Home\000"
 3098      6F6D6500 
 3099              	.LASF60:
 3100 010c 54435F44 		.ascii	"TC_Delay\000"
 3100      656C6179 
 3100      00
 3101              	.LASF24:
 3102 0115 54435F53 		.ascii	"TC_StateMachine\000"
 3102      74617465 
 3102      4D616368 
 3102      696E6500 
 3103              	.LASF37:
 3104 0125 64656C61 		.ascii	"delay\000"
 3104      7900
 3105              	.LASF4:
 3106 012b 5F5F7569 		.ascii	"__uint16_t\000"
 3106      6E743136 
 3106      5F7400
 3107              	.LASF14:
 3108 0136 75696E74 		.ascii	"uint16\000"
 3108      313600
 3109              	.LASF31:
 3110 013d 54435F53 		.ascii	"TC_Set_Delay\000"
 3110      65745F44 
 3110      656C6179 
 3110      00
 3111              	.LASF77:
 3112 014a 496E5F46 		.ascii	"In_Fault\000"
 3112      61756C74 
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 67


 3112      00
 3113              	.LASF71:
 3114 0153 5553425F 		.ascii	"USB_PutString\000"
 3114      50757453 
 3114      7472696E 
 3114      6700
 3115              	.LASF29:
 3116 0161 496E6974 		.ascii	"Init_TC_StateMachine\000"
 3116      5F54435F 
 3116      53746174 
 3116      654D6163 
 3116      68696E65 
 3117              	.LASF34:
 3118 0176 54435F54 		.ascii	"TC_Test_Delay\000"
 3118      6573745F 
 3118      44656C61 
 3118      7900
 3119              	.LASF66:
 3120 0184 54435F53 		.ascii	"TC_STATE\000"
 3120      54415445 
 3120      00
 3121              	.LASF68:
 3122 018d 54617267 		.ascii	"Target_Tool\000"
 3122      65745F54 
 3122      6F6F6C00 
 3123              	.LASF17:
 3124 0199 666C6F61 		.ascii	"float\000"
 3124      7400
 3125              	.LASF8:
 3126 019f 6C6F6E67 		.ascii	"long long int\000"
 3126      206C6F6E 
 3126      6720696E 
 3126      7400
 3127              	.LASF27:
 3128 01ad 436F756E 		.ascii	"CountProcess\000"
 3128      7450726F 
 3128      63657373 
 3128      00
 3129              	.LASF16:
 3130 01ba 696E7438 		.ascii	"int8\000"
 3130      00
 3131              	.LASF6:
 3132 01bf 6C6F6E67 		.ascii	"long int\000"
 3132      20696E74 
 3132      00
 3133              	.LASF7:
 3134 01c8 6C6F6E67 		.ascii	"long unsigned int\000"
 3134      20756E73 
 3134      69676E65 
 3134      6420696E 
 3134      7400
 3135              	.LASF47:
 3136 01da 52756E6E 		.ascii	"RunningTooLong\000"
 3136      696E6754 
 3136      6F6F4C6F 
 3136      6E6700
 3137              	.LASF32:
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 68


 3138 01e9 4D6F746F 		.ascii	"Motors_Off\000"
 3138      72735F4F 
 3138      666600
 3139              	.LASF30:
 3140 01f4 54435F43 		.ascii	"TC_Clamp_AirBlast\000"
 3140      6C616D70 
 3140      5F416972 
 3140      426C6173 
 3140      7400
 3141              	.LASF54:
 3142 0206 54435F48 		.ascii	"TC_Home_Arm\000"
 3142      6F6D655F 
 3142      41726D00 
 3143              	.LASF38:
 3144 0212 746F6F6C 		.ascii	"tool\000"
 3144      00
 3145              	.LASF21:
 3146 0217 6C6F6E67 		.ascii	"long double\000"
 3146      20646F75 
 3146      626C6500 
 3147              	.LASF1:
 3148 0223 756E7369 		.ascii	"unsigned char\000"
 3148      676E6564 
 3148      20636861 
 3148      7200
 3149              	.LASF70:
 3150 0231 73707269 		.ascii	"sprintf\000"
 3150      6E746600 
 3151              	.LASF64:
 3152 0239 4D535F54 		.ascii	"MS_Time\000"
 3152      696D6500 
 3153              	.LASF0:
 3154 0241 7369676E 		.ascii	"signed char\000"
 3154      65642063 
 3154      68617200 
 3155              	.LASF9:
 3156 024d 6C6F6E67 		.ascii	"long long unsigned int\000"
 3156      206C6F6E 
 3156      6720756E 
 3156      7369676E 
 3156      65642069 
 3157              	.LASF53:
 3158 0264 54435F43 		.ascii	"TC_Carousel_Moving\000"
 3158      61726F75 
 3158      73656C5F 
 3158      4D6F7669 
 3158      6E6700
 3159              	.LASF10:
 3160 0277 756E7369 		.ascii	"unsigned int\000"
 3160      676E6564 
 3160      20696E74 
 3160      00
 3161              	.LASF45:
 3162 0284 54435F49 		.ascii	"TC_IDLE\000"
 3162      444C4500 
 3163              	.LASF11:
 3164 028c 75696E74 		.ascii	"uint16_t\000"
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 69


 3164      31365F74 
 3164      00
 3165              	.LASF67:
 3166 0295 43757272 		.ascii	"Current_Tool\000"
 3166      656E745F 
 3166      546F6F6C 
 3166      00
 3167              	.LASF48:
 3168 02a2 54435F41 		.ascii	"TC_Arm_Move_In_Start\000"
 3168      726D5F4D 
 3168      6F76655F 
 3168      496E5F53 
 3168      74617274 
 3169              	.LASF55:
 3170 02b7 54435F48 		.ascii	"TC_Home_Carousel\000"
 3170      6F6D655F 
 3170      4361726F 
 3170      7573656C 
 3170      00
 3171              	.LASF3:
 3172 02c8 73686F72 		.ascii	"short unsigned int\000"
 3172      7420756E 
 3172      7369676E 
 3172      65642069 
 3172      6E7400
 3173              	.LASF26:
 3174 02db 496E6974 		.ascii	"InitAlphaProcess\000"
 3174      416C7068 
 3174      6150726F 
 3174      63657373 
 3174      00
 3175              	.LASF19:
 3176 02ec 63686172 		.ascii	"char\000"
 3176      00
 3177              	.LASF12:
 3178 02f1 696E7433 		.ascii	"int32_t\000"
 3178      325F7400 
 3179              	.LASF51:
 3180 02f9 54435F41 		.ascii	"TC_Arm_Move_Out\000"
 3180      726D5F4D 
 3180      6F76655F 
 3180      4F757400 
 3181              	.LASF13:
 3182 0309 75696E74 		.ascii	"uint8\000"
 3182      3800
 3183              	.LASF46:
 3184 030f 54435F46 		.ascii	"TC_Fault\000"
 3184      61756C74 
 3184      00
 3185              	.LASF44:
 3186 0318 6661756C 		.ascii	"fault\000"
 3186      7400
 3187              	.LASF15:
 3188 031e 75696E74 		.ascii	"uint32\000"
 3188      333200
 3189              	.LASF20:
 3190 0325 72656738 		.ascii	"reg8\000"
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 70


 3190      00
 3191              	.LASF59:
 3192 032a 535F436F 		.ascii	"S_Count\000"
 3192      756E7400 
 3193              	.LASF18:
 3194 0332 646F7562 		.ascii	"double\000"
 3194      6C6500
 3195              	.LASF56:
 3196 0339 435F436F 		.ascii	"C_Count\000"
 3196      756E7400 
 3197              	.LASF58:
 3198 0341 415F436F 		.ascii	"A_Count\000"
 3198      756E7400 
 3199              	.LASF25:
 3200 0349 496E6974 		.ascii	"InitCountProcess\000"
 3200      436F756E 
 3200      7450726F 
 3200      63657373 
 3200      00
 3201              	.LASF28:
 3202 035a 416C7068 		.ascii	"AlphaProcess\000"
 3202      6150726F 
 3202      63657373 
 3202      00
 3203              	.LASF5:
 3204 0367 5F5F696E 		.ascii	"__int32_t\000"
 3204      7433325F 
 3204      7400
 3205              	.LASF40:
 3206 0371 74617267 		.ascii	"targ\000"
 3206      00
 3207              	.LASF57:
 3208 0376 53656343 		.ascii	"SecCount\000"
 3208      6F756E74 
 3208      00
 3209              	.LASF41:
 3210 037f 54435F53 		.ascii	"TC_Status\000"
 3210      74617475 
 3210      7300
 3211              	.LASF61:
 3212 0389 54435F44 		.ascii	"TC_DelayStart\000"
 3212      656C6179 
 3212      53746172 
 3212      7400
 3213              	.LASF23:
 3214 0397 66756E63 		.ascii	"func_ptr\000"
 3214      5F707472 
 3214      00
 3215              	.LASF65:
 3216 03a0 54435F53 		.ascii	"TC_SM\000"
 3216      4D00
 3217              	.LASF62:
 3218 03a6 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3218      52784275 
 3218      66666572 
 3218      00
 3219              	.LASF74:
ARM GAS  C:\Users\Dan\AppData\Local\Temp\cctBGMLt.s 			page 71


 3220 03b3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3220      43313120 
 3220      352E342E 
 3220      31203230 
 3220      31363036 
 3221 03e6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3221      20726576 
 3221      6973696F 
 3221      6E203233 
 3221      37373135 
 3222 0419 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3222      66756E63 
 3222      74696F6E 
 3222      2D736563 
 3222      74696F6E 
 3223              	.LASF73:
 3224 0441 4164645F 		.ascii	"Add_Process\000"
 3224      50726F63 
 3224      65737300 
 3225              	.LASF42:
 3226 044d 4765745F 		.ascii	"Get_Current_Tool\000"
 3226      43757272 
 3226      656E745F 
 3226      546F6F6C 
 3226      00
 3227              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
