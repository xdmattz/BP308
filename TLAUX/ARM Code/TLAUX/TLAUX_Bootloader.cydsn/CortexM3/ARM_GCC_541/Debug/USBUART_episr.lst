ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART_episr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_EP_1_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	USBUART_EP_1_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBUART_EP_1_ISR, %function
  25              	USBUART_EP_1_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\USBUART_episr.c"
   1:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART_episr.c **** * \file USBUART_episr.c
   3:Generated_Source\PSoC5/USBUART_episr.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBUART_episr.c **** *
   5:Generated_Source\PSoC5/USBUART_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBUART_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBUART_episr.c **** *
   8:Generated_Source\PSoC5/USBUART_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBUART_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBUART_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBUART_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBUART_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBUART_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBUART_episr.c **** 
  16:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_pvt.h"
  17:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_cydmac.h"
  18:Generated_Source\PSoC5/USBUART_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBUART_episr.c **** 
  20:Generated_Source\PSoC5/USBUART_episr.c **** 
  21:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBUART_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBUART_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBUART_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBUART_episr.c **** 
  26:Generated_Source\PSoC5/USBUART_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBUART_episr.c **** 
  28:Generated_Source\PSoC5/USBUART_episr.c **** 
  29:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBUART_episr.c ****     /******************************************************************************
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 2


  31:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_1_ISR
  32:Generated_Source\PSoC5/USBUART_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBUART_episr.c ****     *
  34:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBUART_episr.c ****     *
  36:Generated_Source\PSoC5/USBUART_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_1_ISR)
  38:Generated_Source\PSoC5/USBUART_episr.c ****     {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  39:Generated_Source\PSoC5/USBUART_episr.c **** 
  40:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBUART_episr.c **** 
  44:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBUART_episr.c **** 
  46:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBUART_episr.c **** 
  48:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBUART_episr.c ****         {
  51:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBUART_episr.c ****     
  55:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP1_INTR);
  33              		.loc 1 55 0
  34 0000 0122     		movs	r2, #1
  35 0002 094B     		ldr	r3, .L3
  36 0004 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBUART_episr.c ****             
  57:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBUART_episr.c ****         */
  61:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP1].addr & USBUART_DIR_IN))
  63:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBUART_episr.c ****         {
  65:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP1].epCr0;
  37              		.loc 1 66 0
  38 0006 0F3B     		subs	r3, r3, #15
  39 0008 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:Generated_Source\PSoC5/USBUART_episr.c ****             
  68:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP1) != USBUART_EP_TYPE_ISOC)
  40              		.loc 1 69 0
  41 000a 084B     		ldr	r3, .L3+4
  42 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  43 000e 03F00303 		and	r3, r3, #3
  44 0012 9342     		cmp	r3, r2
  45 0014 04D0     		beq	.L2
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 3


  70:Generated_Source\PSoC5/USBUART_episr.c ****             {
  71:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP1].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  46              		.loc 1 71 0
  47 0016 054A     		ldr	r2, .L3+4
  48 0018 D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  49 001a 83F08003 		eor	r3, r3, #128
  50 001e D373     		strb	r3, [r2, #15]
  51              	.L2:
  72:Generated_Source\PSoC5/USBUART_episr.c ****             }
  73:Generated_Source\PSoC5/USBUART_episr.c **** 
  74:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBUART_episr.c ****             */
  80:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP1].apiEpState = USBUART_EVENT_PENDING;
  52              		.loc 1 80 0
  53 0020 0122     		movs	r2, #1
  54 0022 024B     		ldr	r3, .L3+4
  55 0024 5A73     		strb	r2, [r3, #13]
  56 0026 7047     		bx	lr
  57              	.L4:
  58              		.align	2
  59              	.L3:
  60 0028 0B600040 		.word	1073766411
  61 002c 00000000 		.word	USBUART_EP
  62              		.cfi_endproc
  63              	.LFE0:
  64              		.size	USBUART_EP_1_ISR, .-USBUART_EP_1_ISR
  65              		.section	.text.USBUART_EP_2_ISR,"ax",%progbits
  66              		.align	2
  67              		.global	USBUART_EP_2_ISR
  68              		.thumb
  69              		.thumb_func
  70              		.type	USBUART_EP_2_ISR, %function
  71              	USBUART_EP_2_ISR:
  72              	.LFB1:
  81:Generated_Source\PSoC5/USBUART_episr.c ****         }
  82:Generated_Source\PSoC5/USBUART_episr.c **** 
  83:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP1)
  87:Generated_Source\PSoC5/USBUART_episr.c ****             {
  88:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBUART_episr.c ****             }
  90:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBUART_episr.c ****     
  93:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBUART_episr.c **** 
  95:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBUART_episr.c **** 
  97:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_EXIT_CALLBACK) */
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 4


 100:Generated_Source\PSoC5/USBUART_episr.c **** 
 101:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBUART_episr.c ****         
 104:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBUART_episr.c ****         }
 106:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBUART_episr.c ****     }
 108:Generated_Source\PSoC5/USBUART_episr.c **** 
 109:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBUART_episr.c **** 
 111:Generated_Source\PSoC5/USBUART_episr.c **** 
 112:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_2_ISR
 115:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBUART_episr.c ****     *
 117:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBUART_episr.c ****     *
 119:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_2_ISR)
 121:Generated_Source\PSoC5/USBUART_episr.c ****     {
  73              		.loc 1 121 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 122:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBUART_episr.c **** 
 126:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBUART_episr.c **** 
 128:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBUART_episr.c **** 
 130:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBUART_episr.c ****         {
 133:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBUART_episr.c **** 
 137:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP2_INTR);
  78              		.loc 1 137 0
  79 0000 0222     		movs	r2, #2
  80 0002 0A4B     		ldr	r3, .L7
  81 0004 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/USBUART_episr.c **** 
 139:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBUART_episr.c ****         */
 143:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP2].addr & USBUART_DIR_IN))
 145:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 147:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 5


 148:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP2].epCr0;
  82              		.loc 1 148 0
  83 0006 0F3B     		subs	r3, r3, #15
  84 0008 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:Generated_Source\PSoC5/USBUART_episr.c ****             
 150:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP2) != USBUART_EP_TYPE_ISOC)
  85              		.loc 1 151 0
  86 000c 084B     		ldr	r3, .L7+4
  87 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  88 0010 03F00303 		and	r3, r3, #3
  89 0014 012B     		cmp	r3, #1
  90 0016 04D0     		beq	.L6
 152:Generated_Source\PSoC5/USBUART_episr.c ****             {
 153:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP2].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  91              		.loc 1 153 0
  92 0018 054A     		ldr	r2, .L7+4
  93 001a D37E     		ldrb	r3, [r2, #27]	@ zero_extendqisi2
  94 001c 83F08003 		eor	r3, r3, #128
  95 0020 D376     		strb	r3, [r2, #27]
  96              	.L6:
 154:Generated_Source\PSoC5/USBUART_episr.c ****             }
 155:Generated_Source\PSoC5/USBUART_episr.c **** 
 156:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBUART_episr.c ****             */
 162:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP2].apiEpState = USBUART_EVENT_PENDING;
  97              		.loc 1 162 0
  98 0022 0122     		movs	r2, #1
  99 0024 024B     		ldr	r3, .L7+4
 100 0026 5A76     		strb	r2, [r3, #25]
 101 0028 7047     		bx	lr
 102              	.L8:
 103 002a 00BF     		.align	2
 104              	.L7:
 105 002c 0B600040 		.word	1073766411
 106 0030 00000000 		.word	USBUART_EP
 107              		.cfi_endproc
 108              	.LFE1:
 109              		.size	USBUART_EP_2_ISR, .-USBUART_EP_2_ISR
 110              		.section	.text.USBUART_SOF_ISR,"ax",%progbits
 111              		.align	2
 112              		.global	USBUART_SOF_ISR
 113              		.thumb
 114              		.thumb_func
 115              		.type	USBUART_SOF_ISR, %function
 116              	USBUART_SOF_ISR:
 117              	.LFB2:
 163:Generated_Source\PSoC5/USBUART_episr.c ****         }
 164:Generated_Source\PSoC5/USBUART_episr.c **** 
 165:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP2)
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 6


 169:Generated_Source\PSoC5/USBUART_episr.c ****             {
 170:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBUART_episr.c ****             }
 172:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBUART_episr.c ****     
 175:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBUART_episr.c **** 
 177:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBUART_episr.c **** 
 179:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBUART_episr.c **** 
 183:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBUART_episr.c ****         
 186:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBUART_episr.c ****         }
 188:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBUART_episr.c ****     }
 190:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBUART_episr.c **** 
 192:Generated_Source\PSoC5/USBUART_episr.c **** 
 193:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_3_ISR
 196:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBUART_episr.c ****     *
 198:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBUART_episr.c ****     *
 200:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_3_ISR)
 202:Generated_Source\PSoC5/USBUART_episr.c ****     {
 203:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBUART_episr.c **** 
 207:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBUART_episr.c **** 
 209:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBUART_episr.c **** 
 211:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBUART_episr.c ****         {
 214:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBUART_episr.c **** 
 218:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP3_INTR);    
 219:Generated_Source\PSoC5/USBUART_episr.c **** 
 220:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBUART_episr.c ****         */
 224:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP3].addr & USBUART_DIR_IN))
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 7


 226:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 228:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP3].epCr0;
 230:Generated_Source\PSoC5/USBUART_episr.c **** 
 231:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP3) != USBUART_EP_TYPE_ISOC)
 233:Generated_Source\PSoC5/USBUART_episr.c ****             {
 234:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP3].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 235:Generated_Source\PSoC5/USBUART_episr.c ****             }
 236:Generated_Source\PSoC5/USBUART_episr.c **** 
 237:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBUART_episr.c ****             */
 243:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP3].apiEpState = USBUART_EVENT_PENDING;
 244:Generated_Source\PSoC5/USBUART_episr.c ****         }
 245:Generated_Source\PSoC5/USBUART_episr.c **** 
 246:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP3)
 250:Generated_Source\PSoC5/USBUART_episr.c ****             {
 251:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBUART_episr.c ****             }
 253:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBUART_episr.c **** 
 256:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBUART_episr.c **** 
 258:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBUART_episr.c **** 
 260:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBUART_episr.c **** 
 264:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBUART_episr.c ****         
 267:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBUART_episr.c ****         }
 269:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBUART_episr.c ****     }
 271:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBUART_episr.c **** 
 273:Generated_Source\PSoC5/USBUART_episr.c **** 
 274:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_4_ISR
 277:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBUART_episr.c ****     *
 279:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBUART_episr.c ****     *
 281:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_4_ISR)
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 8


 283:Generated_Source\PSoC5/USBUART_episr.c ****     {
 284:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBUART_episr.c **** 
 288:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBUART_episr.c **** 
 290:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBUART_episr.c **** 
 292:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBUART_episr.c ****         {
 295:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBUART_episr.c **** 
 299:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBUART_episr.c ****         
 301:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBUART_episr.c ****         */
 305:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP4].addr & USBUART_DIR_IN))
 307:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBUART_episr.c ****         {
 309:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP4].epCr0;
 311:Generated_Source\PSoC5/USBUART_episr.c **** 
 312:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP4) != USBUART_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBUART_episr.c ****             {
 315:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP4].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBUART_episr.c ****             }
 317:Generated_Source\PSoC5/USBUART_episr.c **** 
 318:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBUART_episr.c ****             */
 324:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP4].apiEpState = USBUART_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBUART_episr.c ****         }
 326:Generated_Source\PSoC5/USBUART_episr.c **** 
 327:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP4)
 331:Generated_Source\PSoC5/USBUART_episr.c ****             {
 332:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBUART_episr.c ****             }
 334:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBUART_episr.c **** 
 337:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBUART_episr.c **** 
 339:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 9


 340:Generated_Source\PSoC5/USBUART_episr.c **** 
 341:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBUART_episr.c **** 
 345:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBUART_episr.c ****         
 348:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBUART_episr.c ****         }
 350:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBUART_episr.c ****     }
 352:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBUART_episr.c **** 
 354:Generated_Source\PSoC5/USBUART_episr.c **** 
 355:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_5_ISR
 358:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBUART_episr.c ****     *
 360:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBUART_episr.c ****     *
 362:Generated_Source\PSoC5/USBUART_episr.c ****     *
 363:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_5_ISR)
 365:Generated_Source\PSoC5/USBUART_episr.c ****     {
 366:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBUART_episr.c **** 
 370:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBUART_episr.c **** 
 372:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBUART_episr.c **** 
 374:Generated_Source\PSoC5/USBUART_episr.c ****     #if (defined(USBUART_ENABLE_MIDI_STREAMING) && !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBUART_episr.c ****                  USBUART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBUART_episr.c ****         {
 377:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBUART_episr.c **** 
 381:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBUART_episr.c ****     
 383:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBUART_episr.c ****         */
 387:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP5].addr & USBUART_DIR_IN))
 389:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 391:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP5].epCr0;
 393:Generated_Source\PSoC5/USBUART_episr.c **** 
 394:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP5) != USBUART_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBUART_episr.c ****             {
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 10


 397:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP5].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBUART_episr.c ****             }
 399:Generated_Source\PSoC5/USBUART_episr.c **** 
 400:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBUART_episr.c ****             */
 406:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP5].apiEpState = USBUART_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBUART_episr.c ****         }
 408:Generated_Source\PSoC5/USBUART_episr.c **** 
 409:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP5)
 413:Generated_Source\PSoC5/USBUART_episr.c ****             {
 414:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBUART_episr.c ****             }
 416:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBUART_episr.c **** 
 419:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBUART_episr.c **** 
 421:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBUART_episr.c **** 
 423:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBUART_episr.c **** 
 427:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBUART_episr.c ****         
 430:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBUART_episr.c ****         }
 432:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBUART_episr.c ****     }
 434:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBUART_episr.c **** 
 436:Generated_Source\PSoC5/USBUART_episr.c **** 
 437:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_6_ISR
 440:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBUART_episr.c ****     *
 442:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBUART_episr.c ****     *
 444:Generated_Source\PSoC5/USBUART_episr.c ****     *
 445:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_6_ISR)
 447:Generated_Source\PSoC5/USBUART_episr.c ****     {
 448:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBUART_episr.c **** 
 452:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 11


 454:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBUART_episr.c **** 
 456:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBUART_episr.c ****         {
 459:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBUART_episr.c **** 
 463:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBUART_episr.c ****         
 465:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBUART_episr.c ****         */
 469:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP6].addr & USBUART_DIR_IN))
 471:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBUART_episr.c ****         {
 473:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP6].epCr0;
 475:Generated_Source\PSoC5/USBUART_episr.c **** 
 476:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP6) != USBUART_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBUART_episr.c ****             {
 479:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP6].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBUART_episr.c ****             }
 481:Generated_Source\PSoC5/USBUART_episr.c ****             
 482:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBUART_episr.c ****             */
 488:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP6].apiEpState = USBUART_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBUART_episr.c ****         }
 490:Generated_Source\PSoC5/USBUART_episr.c **** 
 491:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP6)
 495:Generated_Source\PSoC5/USBUART_episr.c ****             {
 496:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBUART_episr.c ****             }
 498:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBUART_episr.c **** 
 501:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBUART_episr.c **** 
 503:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBUART_episr.c **** 
 505:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBUART_episr.c **** 
 509:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 12


 511:Generated_Source\PSoC5/USBUART_episr.c ****         
 512:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBUART_episr.c ****         }
 514:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBUART_episr.c ****     }
 516:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBUART_episr.c **** 
 518:Generated_Source\PSoC5/USBUART_episr.c **** 
 519:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_7_ISR
 522:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBUART_episr.c ****     *
 524:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBUART_episr.c ****     *
 526:Generated_Source\PSoC5/USBUART_episr.c ****     *
 527:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_7_ISR)
 529:Generated_Source\PSoC5/USBUART_episr.c ****     {
 530:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBUART_episr.c **** 
 534:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBUART_episr.c **** 
 536:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBUART_episr.c **** 
 538:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBUART_episr.c ****         {
 541:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBUART_episr.c ****     
 545:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBUART_episr.c ****         
 547:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBUART_episr.c ****         */
 551:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP7].addr & USBUART_DIR_IN))
 553:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBUART_episr.c ****         {           
 555:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP7].epCr0;
 557:Generated_Source\PSoC5/USBUART_episr.c **** 
 558:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP7) != USBUART_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBUART_episr.c ****             {
 561:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP7].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBUART_episr.c ****             }
 563:Generated_Source\PSoC5/USBUART_episr.c ****             
 564:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 13


 568:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBUART_episr.c ****             */
 570:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP7].apiEpState = USBUART_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBUART_episr.c ****         }
 572:Generated_Source\PSoC5/USBUART_episr.c **** 
 573:Generated_Source\PSoC5/USBUART_episr.c **** 
 574:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP7)
 578:Generated_Source\PSoC5/USBUART_episr.c ****             {
 579:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBUART_episr.c ****             }
 581:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBUART_episr.c **** 
 584:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBUART_episr.c **** 
 586:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBUART_episr.c **** 
 588:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBUART_episr.c **** 
 592:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBUART_episr.c ****         
 595:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBUART_episr.c ****         }
 597:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBUART_episr.c ****     }
 599:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBUART_episr.c **** 
 601:Generated_Source\PSoC5/USBUART_episr.c **** 
 602:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_8_ISR
 605:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBUART_episr.c ****     *
 607:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBUART_episr.c ****     *
 609:Generated_Source\PSoC5/USBUART_episr.c ****     *
 610:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_8_ISR)
 612:Generated_Source\PSoC5/USBUART_episr.c ****     {
 613:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBUART_episr.c **** 
 617:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBUART_episr.c **** 
 619:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBUART_episr.c **** 
 621:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBUART_episr.c ****         {
 624:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 14


 625:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBUART_episr.c **** 
 628:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBUART_episr.c ****         
 630:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBUART_episr.c ****         */
 634:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP8].addr & USBUART_DIR_IN))
 636:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBUART_episr.c ****         {
 638:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP8].epCr0;
 640:Generated_Source\PSoC5/USBUART_episr.c **** 
 641:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP8) != USBUART_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBUART_episr.c ****             {
 644:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP8].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBUART_episr.c ****             }
 646:Generated_Source\PSoC5/USBUART_episr.c **** 
 647:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBUART_episr.c ****             */
 653:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP8].apiEpState = USBUART_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBUART_episr.c ****         }
 655:Generated_Source\PSoC5/USBUART_episr.c **** 
 656:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP8)
 660:Generated_Source\PSoC5/USBUART_episr.c ****             {
 661:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBUART_episr.c ****             }
 663:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBUART_episr.c **** 
 666:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBUART_episr.c **** 
 668:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBUART_episr.c **** 
 670:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBUART_episr.c **** 
 674:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBUART_episr.c ****         
 677:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBUART_episr.c ****         }
 679:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBUART_episr.c ****     }
 681:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP8_ISR_ACTIVE) */
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 15


 682:Generated_Source\PSoC5/USBUART_episr.c **** 
 683:Generated_Source\PSoC5/USBUART_episr.c **** 
 684:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_SOF_ISR
 687:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBUART_episr.c ****     *
 689:Generated_Source\PSoC5/USBUART_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBUART_episr.c ****     *
 691:Generated_Source\PSoC5/USBUART_episr.c ****     *
 692:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_SOF_ISR)
 694:Generated_Source\PSoC5/USBUART_episr.c ****     {
 118              		.loc 1 694 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123 0000 7047     		bx	lr
 124              		.cfi_endproc
 125              	.LFE2:
 126              		.size	USBUART_SOF_ISR, .-USBUART_SOF_ISR
 127 0002 00BF     		.section	.text.USBUART_BUS_RESET_ISR,"ax",%progbits
 128              		.align	2
 129              		.global	USBUART_BUS_RESET_ISR
 130              		.thumb
 131              		.thumb_func
 132              		.type	USBUART_BUS_RESET_ISR, %function
 133              	USBUART_BUS_RESET_ISR:
 134              	.LFB3:
 695:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBUART_episr.c **** 
 699:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBUART_episr.c **** 
 701:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBUART_episr.c **** 
 703:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBUART_episr.c **** 
 705:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBUART_episr.c ****     }
 709:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBUART_episr.c **** 
 711:Generated_Source\PSoC5/USBUART_episr.c **** 
 712:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBUART_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBUART_episr.c **** * Function Name: USBUART_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBUART_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBUART_episr.c **** *
 717:Generated_Source\PSoC5/USBUART_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBUART_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBUART_episr.c **** *
 720:Generated_Source\PSoC5/USBUART_episr.c **** *
 721:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 16


 722:Generated_Source\PSoC5/USBUART_episr.c **** CY_ISR(USBUART_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBUART_episr.c **** {
 135              		.loc 1 723 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		.loc 1 723 0
 140 0000 08B5     		push	{r3, lr}
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 3, -8
 143              		.cfi_offset 14, -4
 724:Generated_Source\PSoC5/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBUART_episr.c **** 
 728:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBUART_episr.c **** 
 730:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBUART_episr.c **** 
 732:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBUART_episr.c **** 
 734:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ReInitComponent();
 144              		.loc 1 734 0
 145 0002 FFF7FEFF 		bl	USBUART_ReInitComponent
 146              	.LVL0:
 147 0006 08BD     		pop	{r3, pc}
 148              		.cfi_endproc
 149              	.LFE3:
 150              		.size	USBUART_BUS_RESET_ISR, .-USBUART_BUS_RESET_ISR
 151              		.text
 152              	.Letext0:
 153              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 154              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 155              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 156              		.section	.debug_info,"",%progbits
 157              	.Ldebug_info0:
 158 0000 3F020000 		.4byte	0x23f
 159 0004 0400     		.2byte	0x4
 160 0006 00000000 		.4byte	.Ldebug_abbrev0
 161 000a 04       		.byte	0x4
 162 000b 01       		.uleb128 0x1
 163 000c D6000000 		.4byte	.LASF36
 164 0010 0C       		.byte	0xc
 165 0011 AB010000 		.4byte	.LASF37
 166 0015 22000000 		.4byte	.LASF38
 167 0019 00000000 		.4byte	.Ldebug_ranges0+0
 168 001d 00000000 		.4byte	0
 169 0021 00000000 		.4byte	.Ldebug_line0
 170 0025 02       		.uleb128 0x2
 171 0026 01       		.byte	0x1
 172 0027 06       		.byte	0x6
 173 0028 B5020000 		.4byte	.LASF0
 174 002c 02       		.uleb128 0x2
 175 002d 01       		.byte	0x1
 176 002e 08       		.byte	0x8
 177 002f 9D010000 		.4byte	.LASF1
 178 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 17


 179 0034 02       		.byte	0x2
 180 0035 05       		.byte	0x5
 181 0036 59020000 		.4byte	.LASF2
 182 003a 02       		.uleb128 0x2
 183 003b 02       		.byte	0x2
 184 003c 07       		.byte	0x7
 185 003d 68000000 		.4byte	.LASF3
 186 0041 02       		.uleb128 0x2
 187 0042 04       		.byte	0x4
 188 0043 05       		.byte	0x5
 189 0044 89020000 		.4byte	.LASF4
 190 0048 02       		.uleb128 0x2
 191 0049 04       		.byte	0x4
 192 004a 07       		.byte	0x7
 193 004b 69010000 		.4byte	.LASF5
 194 004f 02       		.uleb128 0x2
 195 0050 08       		.byte	0x8
 196 0051 05       		.byte	0x5
 197 0052 3B020000 		.4byte	.LASF6
 198 0056 02       		.uleb128 0x2
 199 0057 08       		.byte	0x8
 200 0058 07       		.byte	0x7
 201 0059 0A020000 		.4byte	.LASF7
 202 005d 03       		.uleb128 0x3
 203 005e 04       		.byte	0x4
 204 005f 05       		.byte	0x5
 205 0060 696E7400 		.ascii	"int\000"
 206 0064 02       		.uleb128 0x2
 207 0065 04       		.byte	0x4
 208 0066 07       		.byte	0x7
 209 0067 FD010000 		.4byte	.LASF8
 210 006b 04       		.uleb128 0x4
 211 006c 79020000 		.4byte	.LASF9
 212 0070 02       		.byte	0x2
 213 0071 E401     		.2byte	0x1e4
 214 0073 2C000000 		.4byte	0x2c
 215 0077 04       		.uleb128 0x4
 216 0078 EB010000 		.4byte	.LASF10
 217 007c 02       		.byte	0x2
 218 007d E501     		.2byte	0x1e5
 219 007f 3A000000 		.4byte	0x3a
 220 0083 02       		.uleb128 0x2
 221 0084 04       		.byte	0x4
 222 0085 04       		.byte	0x4
 223 0086 1C000000 		.4byte	.LASF11
 224 008a 02       		.uleb128 0x2
 225 008b 08       		.byte	0x8
 226 008c 04       		.byte	0x4
 227 008d D2010000 		.4byte	.LASF12
 228 0091 02       		.uleb128 0x2
 229 0092 01       		.byte	0x1
 230 0093 08       		.byte	0x8
 231 0094 49020000 		.4byte	.LASF13
 232 0098 04       		.uleb128 0x4
 233 0099 64010000 		.4byte	.LASF14
 234 009d 02       		.byte	0x2
 235 009e 8E02     		.2byte	0x28e
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 18


 236 00a0 A4000000 		.4byte	0xa4
 237 00a4 05       		.uleb128 0x5
 238 00a5 6B000000 		.4byte	0x6b
 239 00a9 02       		.uleb128 0x2
 240 00aa 08       		.byte	0x8
 241 00ab 04       		.byte	0x4
 242 00ac A9020000 		.4byte	.LASF15
 243 00b0 02       		.uleb128 0x2
 244 00b1 04       		.byte	0x4
 245 00b2 07       		.byte	0x7
 246 00b3 2B020000 		.4byte	.LASF16
 247 00b7 06       		.uleb128 0x6
 248 00b8 0C       		.byte	0xc
 249 00b9 03       		.byte	0x3
 250 00ba 8D       		.byte	0x8d
 251 00bb 2C010000 		.4byte	0x12c
 252 00bf 07       		.uleb128 0x7
 253 00c0 D9010000 		.4byte	.LASF17
 254 00c4 03       		.byte	0x3
 255 00c5 8F       		.byte	0x8f
 256 00c6 6B000000 		.4byte	0x6b
 257 00ca 00       		.byte	0
 258 00cb 07       		.uleb128 0x7
 259 00cc F2010000 		.4byte	.LASF18
 260 00d0 03       		.byte	0x3
 261 00d1 90       		.byte	0x90
 262 00d2 6B000000 		.4byte	0x6b
 263 00d6 01       		.byte	0x1
 264 00d7 07       		.uleb128 0x7
 265 00d8 21020000 		.4byte	.LASF19
 266 00dc 03       		.byte	0x3
 267 00dd 91       		.byte	0x91
 268 00de 6B000000 		.4byte	0x6b
 269 00e2 02       		.byte	0x2
 270 00e3 07       		.uleb128 0x7
 271 00e4 C2000000 		.4byte	.LASF20
 272 00e8 03       		.byte	0x3
 273 00e9 92       		.byte	0x92
 274 00ea 6B000000 		.4byte	0x6b
 275 00ee 03       		.byte	0x3
 276 00ef 07       		.uleb128 0x7
 277 00f0 7B010000 		.4byte	.LASF21
 278 00f4 03       		.byte	0x3
 279 00f5 93       		.byte	0x93
 280 00f6 6B000000 		.4byte	0x6b
 281 00fa 04       		.byte	0x4
 282 00fb 07       		.uleb128 0x7
 283 00fc 34020000 		.4byte	.LASF22
 284 0100 03       		.byte	0x3
 285 0101 94       		.byte	0x94
 286 0102 6B000000 		.4byte	0x6b
 287 0106 05       		.byte	0x5
 288 0107 07       		.uleb128 0x7
 289 0108 E0010000 		.4byte	.LASF23
 290 010c 03       		.byte	0x3
 291 010d 95       		.byte	0x95
 292 010e 77000000 		.4byte	0x77
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 19


 293 0112 06       		.byte	0x6
 294 0113 07       		.uleb128 0x7
 295 0114 4E020000 		.4byte	.LASF24
 296 0118 03       		.byte	0x3
 297 0119 96       		.byte	0x96
 298 011a 77000000 		.4byte	0x77
 299 011e 08       		.byte	0x8
 300 011f 07       		.uleb128 0x7
 301 0120 7F020000 		.4byte	.LASF25
 302 0124 03       		.byte	0x3
 303 0125 97       		.byte	0x97
 304 0126 6B000000 		.4byte	0x6b
 305 012a 0A       		.byte	0xa
 306 012b 00       		.byte	0
 307 012c 08       		.uleb128 0x8
 308 012d 92020000 		.4byte	.LASF26
 309 0131 03       		.byte	0x3
 310 0132 98       		.byte	0x98
 311 0133 B7000000 		.4byte	0xb7
 312 0137 06       		.uleb128 0x6
 313 0138 10       		.byte	0x10
 314 0139 03       		.byte	0x3
 315 013a D4       		.byte	0xd4
 316 013b 70010000 		.4byte	0x170
 317 013f 07       		.uleb128 0x7
 318 0140 B4000000 		.4byte	.LASF27
 319 0144 03       		.byte	0x3
 320 0145 D6       		.byte	0xd6
 321 0146 6B000000 		.4byte	0x6b
 322 014a 00       		.byte	0
 323 014b 07       		.uleb128 0x7
 324 014c BB000000 		.4byte	.LASF28
 325 0150 03       		.byte	0x3
 326 0151 D7       		.byte	0xd7
 327 0152 6B000000 		.4byte	0x6b
 328 0156 01       		.byte	0x1
 329 0157 07       		.uleb128 0x7
 330 0158 16000000 		.4byte	.LASF29
 331 015c 03       		.byte	0x3
 332 015d D8       		.byte	0xd8
 333 015e 6B000000 		.4byte	0x6b
 334 0162 02       		.byte	0x2
 335 0163 09       		.uleb128 0x9
 336 0164 67617000 		.ascii	"gap\000"
 337 0168 03       		.byte	0x3
 338 0169 D9       		.byte	0xd9
 339 016a 70010000 		.4byte	0x170
 340 016e 03       		.byte	0x3
 341 016f 00       		.byte	0
 342 0170 0A       		.uleb128 0xa
 343 0171 6B000000 		.4byte	0x6b
 344 0175 80010000 		.4byte	0x180
 345 0179 0B       		.uleb128 0xb
 346 017a B0000000 		.4byte	0xb0
 347 017e 0C       		.byte	0xc
 348 017f 00       		.byte	0
 349 0180 08       		.uleb128 0x8
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 20


 350 0181 00000000 		.4byte	.LASF30
 351 0185 03       		.byte	0x3
 352 0186 DA       		.byte	0xda
 353 0187 37010000 		.4byte	0x137
 354 018b 0C       		.uleb128 0xc
 355 018c 90       		.byte	0x90
 356 018d 03       		.byte	0x3
 357 018e 0E01     		.2byte	0x10e
 358 0190 A2010000 		.4byte	0x1a2
 359 0194 0D       		.uleb128 0xd
 360 0195 80010000 		.4byte	.LASF31
 361 0199 03       		.byte	0x3
 362 019a 1001     		.2byte	0x110
 363 019c A2010000 		.4byte	0x1a2
 364 01a0 00       		.byte	0
 365 01a1 00       		.byte	0
 366 01a2 0A       		.uleb128 0xa
 367 01a3 80010000 		.4byte	0x180
 368 01a7 B2010000 		.4byte	0x1b2
 369 01ab 0B       		.uleb128 0xb
 370 01ac B0000000 		.4byte	0xb0
 371 01b0 08       		.byte	0x8
 372 01b1 00       		.byte	0
 373 01b2 04       		.uleb128 0x4
 374 01b3 86010000 		.4byte	.LASF32
 375 01b7 03       		.byte	0x3
 376 01b8 1101     		.2byte	0x111
 377 01ba 8B010000 		.4byte	0x18b
 378 01be 0E       		.uleb128 0xe
 379 01bf C1020000 		.4byte	.LASF33
 380 01c3 01       		.byte	0x1
 381 01c4 25       		.byte	0x25
 382 01c5 00000000 		.4byte	.LFB0
 383 01c9 30000000 		.4byte	.LFE0-.LFB0
 384 01cd 01       		.uleb128 0x1
 385 01ce 9C       		.byte	0x9c
 386 01cf 0E       		.uleb128 0xe
 387 01d0 7B000000 		.4byte	.LASF34
 388 01d4 01       		.byte	0x1
 389 01d5 78       		.byte	0x78
 390 01d6 00000000 		.4byte	.LFB1
 391 01da 34000000 		.4byte	.LFE1-.LFB1
 392 01de 01       		.uleb128 0x1
 393 01df 9C       		.byte	0x9c
 394 01e0 0F       		.uleb128 0xf
 395 01e1 8C000000 		.4byte	.LASF35
 396 01e5 01       		.byte	0x1
 397 01e6 B502     		.2byte	0x2b5
 398 01e8 00000000 		.4byte	.LFB2
 399 01ec 02000000 		.4byte	.LFE2-.LFB2
 400 01f0 01       		.uleb128 0x1
 401 01f1 9C       		.byte	0x9c
 402 01f2 10       		.uleb128 0x10
 403 01f3 63020000 		.4byte	.LASF39
 404 01f7 01       		.byte	0x1
 405 01f8 D202     		.2byte	0x2d2
 406 01fa 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 21


 407 01fe 08000000 		.4byte	.LFE3-.LFB3
 408 0202 01       		.uleb128 0x1
 409 0203 9C       		.byte	0x9c
 410 0204 12020000 		.4byte	0x212
 411 0208 11       		.uleb128 0x11
 412 0209 06000000 		.4byte	.LVL0
 413 020d 37020000 		.4byte	0x237
 414 0211 00       		.byte	0
 415 0212 0A       		.uleb128 0xa
 416 0213 22020000 		.4byte	0x222
 417 0217 22020000 		.4byte	0x222
 418 021b 0B       		.uleb128 0xb
 419 021c B0000000 		.4byte	0xb0
 420 0220 08       		.byte	0x8
 421 0221 00       		.byte	0
 422 0222 05       		.uleb128 0x5
 423 0223 2C010000 		.4byte	0x12c
 424 0227 12       		.uleb128 0x12
 425 0228 CB000000 		.4byte	.LASF40
 426 022c 04       		.byte	0x4
 427 022d 79       		.byte	0x79
 428 022e 32020000 		.4byte	0x232
 429 0232 05       		.uleb128 0x5
 430 0233 12020000 		.4byte	0x212
 431 0237 13       		.uleb128 0x13
 432 0238 9C000000 		.4byte	.LASF41
 433 023c 9C000000 		.4byte	.LASF41
 434 0240 04       		.byte	0x4
 435 0241 A4       		.byte	0xa4
 436 0242 00       		.byte	0
 437              		.section	.debug_abbrev,"",%progbits
 438              	.Ldebug_abbrev0:
 439 0000 01       		.uleb128 0x1
 440 0001 11       		.uleb128 0x11
 441 0002 01       		.byte	0x1
 442 0003 25       		.uleb128 0x25
 443 0004 0E       		.uleb128 0xe
 444 0005 13       		.uleb128 0x13
 445 0006 0B       		.uleb128 0xb
 446 0007 03       		.uleb128 0x3
 447 0008 0E       		.uleb128 0xe
 448 0009 1B       		.uleb128 0x1b
 449 000a 0E       		.uleb128 0xe
 450 000b 55       		.uleb128 0x55
 451 000c 17       		.uleb128 0x17
 452 000d 11       		.uleb128 0x11
 453 000e 01       		.uleb128 0x1
 454 000f 10       		.uleb128 0x10
 455 0010 17       		.uleb128 0x17
 456 0011 00       		.byte	0
 457 0012 00       		.byte	0
 458 0013 02       		.uleb128 0x2
 459 0014 24       		.uleb128 0x24
 460 0015 00       		.byte	0
 461 0016 0B       		.uleb128 0xb
 462 0017 0B       		.uleb128 0xb
 463 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 22


 464 0019 0B       		.uleb128 0xb
 465 001a 03       		.uleb128 0x3
 466 001b 0E       		.uleb128 0xe
 467 001c 00       		.byte	0
 468 001d 00       		.byte	0
 469 001e 03       		.uleb128 0x3
 470 001f 24       		.uleb128 0x24
 471 0020 00       		.byte	0
 472 0021 0B       		.uleb128 0xb
 473 0022 0B       		.uleb128 0xb
 474 0023 3E       		.uleb128 0x3e
 475 0024 0B       		.uleb128 0xb
 476 0025 03       		.uleb128 0x3
 477 0026 08       		.uleb128 0x8
 478 0027 00       		.byte	0
 479 0028 00       		.byte	0
 480 0029 04       		.uleb128 0x4
 481 002a 16       		.uleb128 0x16
 482 002b 00       		.byte	0
 483 002c 03       		.uleb128 0x3
 484 002d 0E       		.uleb128 0xe
 485 002e 3A       		.uleb128 0x3a
 486 002f 0B       		.uleb128 0xb
 487 0030 3B       		.uleb128 0x3b
 488 0031 05       		.uleb128 0x5
 489 0032 49       		.uleb128 0x49
 490 0033 13       		.uleb128 0x13
 491 0034 00       		.byte	0
 492 0035 00       		.byte	0
 493 0036 05       		.uleb128 0x5
 494 0037 35       		.uleb128 0x35
 495 0038 00       		.byte	0
 496 0039 49       		.uleb128 0x49
 497 003a 13       		.uleb128 0x13
 498 003b 00       		.byte	0
 499 003c 00       		.byte	0
 500 003d 06       		.uleb128 0x6
 501 003e 13       		.uleb128 0x13
 502 003f 01       		.byte	0x1
 503 0040 0B       		.uleb128 0xb
 504 0041 0B       		.uleb128 0xb
 505 0042 3A       		.uleb128 0x3a
 506 0043 0B       		.uleb128 0xb
 507 0044 3B       		.uleb128 0x3b
 508 0045 0B       		.uleb128 0xb
 509 0046 01       		.uleb128 0x1
 510 0047 13       		.uleb128 0x13
 511 0048 00       		.byte	0
 512 0049 00       		.byte	0
 513 004a 07       		.uleb128 0x7
 514 004b 0D       		.uleb128 0xd
 515 004c 00       		.byte	0
 516 004d 03       		.uleb128 0x3
 517 004e 0E       		.uleb128 0xe
 518 004f 3A       		.uleb128 0x3a
 519 0050 0B       		.uleb128 0xb
 520 0051 3B       		.uleb128 0x3b
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 23


 521 0052 0B       		.uleb128 0xb
 522 0053 49       		.uleb128 0x49
 523 0054 13       		.uleb128 0x13
 524 0055 38       		.uleb128 0x38
 525 0056 0B       		.uleb128 0xb
 526 0057 00       		.byte	0
 527 0058 00       		.byte	0
 528 0059 08       		.uleb128 0x8
 529 005a 16       		.uleb128 0x16
 530 005b 00       		.byte	0
 531 005c 03       		.uleb128 0x3
 532 005d 0E       		.uleb128 0xe
 533 005e 3A       		.uleb128 0x3a
 534 005f 0B       		.uleb128 0xb
 535 0060 3B       		.uleb128 0x3b
 536 0061 0B       		.uleb128 0xb
 537 0062 49       		.uleb128 0x49
 538 0063 13       		.uleb128 0x13
 539 0064 00       		.byte	0
 540 0065 00       		.byte	0
 541 0066 09       		.uleb128 0x9
 542 0067 0D       		.uleb128 0xd
 543 0068 00       		.byte	0
 544 0069 03       		.uleb128 0x3
 545 006a 08       		.uleb128 0x8
 546 006b 3A       		.uleb128 0x3a
 547 006c 0B       		.uleb128 0xb
 548 006d 3B       		.uleb128 0x3b
 549 006e 0B       		.uleb128 0xb
 550 006f 49       		.uleb128 0x49
 551 0070 13       		.uleb128 0x13
 552 0071 38       		.uleb128 0x38
 553 0072 0B       		.uleb128 0xb
 554 0073 00       		.byte	0
 555 0074 00       		.byte	0
 556 0075 0A       		.uleb128 0xa
 557 0076 01       		.uleb128 0x1
 558 0077 01       		.byte	0x1
 559 0078 49       		.uleb128 0x49
 560 0079 13       		.uleb128 0x13
 561 007a 01       		.uleb128 0x1
 562 007b 13       		.uleb128 0x13
 563 007c 00       		.byte	0
 564 007d 00       		.byte	0
 565 007e 0B       		.uleb128 0xb
 566 007f 21       		.uleb128 0x21
 567 0080 00       		.byte	0
 568 0081 49       		.uleb128 0x49
 569 0082 13       		.uleb128 0x13
 570 0083 2F       		.uleb128 0x2f
 571 0084 0B       		.uleb128 0xb
 572 0085 00       		.byte	0
 573 0086 00       		.byte	0
 574 0087 0C       		.uleb128 0xc
 575 0088 13       		.uleb128 0x13
 576 0089 01       		.byte	0x1
 577 008a 0B       		.uleb128 0xb
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 24


 578 008b 0B       		.uleb128 0xb
 579 008c 3A       		.uleb128 0x3a
 580 008d 0B       		.uleb128 0xb
 581 008e 3B       		.uleb128 0x3b
 582 008f 05       		.uleb128 0x5
 583 0090 01       		.uleb128 0x1
 584 0091 13       		.uleb128 0x13
 585 0092 00       		.byte	0
 586 0093 00       		.byte	0
 587 0094 0D       		.uleb128 0xd
 588 0095 0D       		.uleb128 0xd
 589 0096 00       		.byte	0
 590 0097 03       		.uleb128 0x3
 591 0098 0E       		.uleb128 0xe
 592 0099 3A       		.uleb128 0x3a
 593 009a 0B       		.uleb128 0xb
 594 009b 3B       		.uleb128 0x3b
 595 009c 05       		.uleb128 0x5
 596 009d 49       		.uleb128 0x49
 597 009e 13       		.uleb128 0x13
 598 009f 38       		.uleb128 0x38
 599 00a0 0B       		.uleb128 0xb
 600 00a1 00       		.byte	0
 601 00a2 00       		.byte	0
 602 00a3 0E       		.uleb128 0xe
 603 00a4 2E       		.uleb128 0x2e
 604 00a5 00       		.byte	0
 605 00a6 3F       		.uleb128 0x3f
 606 00a7 19       		.uleb128 0x19
 607 00a8 03       		.uleb128 0x3
 608 00a9 0E       		.uleb128 0xe
 609 00aa 3A       		.uleb128 0x3a
 610 00ab 0B       		.uleb128 0xb
 611 00ac 3B       		.uleb128 0x3b
 612 00ad 0B       		.uleb128 0xb
 613 00ae 27       		.uleb128 0x27
 614 00af 19       		.uleb128 0x19
 615 00b0 11       		.uleb128 0x11
 616 00b1 01       		.uleb128 0x1
 617 00b2 12       		.uleb128 0x12
 618 00b3 06       		.uleb128 0x6
 619 00b4 40       		.uleb128 0x40
 620 00b5 18       		.uleb128 0x18
 621 00b6 9742     		.uleb128 0x2117
 622 00b8 19       		.uleb128 0x19
 623 00b9 00       		.byte	0
 624 00ba 00       		.byte	0
 625 00bb 0F       		.uleb128 0xf
 626 00bc 2E       		.uleb128 0x2e
 627 00bd 00       		.byte	0
 628 00be 3F       		.uleb128 0x3f
 629 00bf 19       		.uleb128 0x19
 630 00c0 03       		.uleb128 0x3
 631 00c1 0E       		.uleb128 0xe
 632 00c2 3A       		.uleb128 0x3a
 633 00c3 0B       		.uleb128 0xb
 634 00c4 3B       		.uleb128 0x3b
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 25


 635 00c5 05       		.uleb128 0x5
 636 00c6 27       		.uleb128 0x27
 637 00c7 19       		.uleb128 0x19
 638 00c8 11       		.uleb128 0x11
 639 00c9 01       		.uleb128 0x1
 640 00ca 12       		.uleb128 0x12
 641 00cb 06       		.uleb128 0x6
 642 00cc 40       		.uleb128 0x40
 643 00cd 18       		.uleb128 0x18
 644 00ce 9742     		.uleb128 0x2117
 645 00d0 19       		.uleb128 0x19
 646 00d1 00       		.byte	0
 647 00d2 00       		.byte	0
 648 00d3 10       		.uleb128 0x10
 649 00d4 2E       		.uleb128 0x2e
 650 00d5 01       		.byte	0x1
 651 00d6 3F       		.uleb128 0x3f
 652 00d7 19       		.uleb128 0x19
 653 00d8 03       		.uleb128 0x3
 654 00d9 0E       		.uleb128 0xe
 655 00da 3A       		.uleb128 0x3a
 656 00db 0B       		.uleb128 0xb
 657 00dc 3B       		.uleb128 0x3b
 658 00dd 05       		.uleb128 0x5
 659 00de 27       		.uleb128 0x27
 660 00df 19       		.uleb128 0x19
 661 00e0 11       		.uleb128 0x11
 662 00e1 01       		.uleb128 0x1
 663 00e2 12       		.uleb128 0x12
 664 00e3 06       		.uleb128 0x6
 665 00e4 40       		.uleb128 0x40
 666 00e5 18       		.uleb128 0x18
 667 00e6 9742     		.uleb128 0x2117
 668 00e8 19       		.uleb128 0x19
 669 00e9 01       		.uleb128 0x1
 670 00ea 13       		.uleb128 0x13
 671 00eb 00       		.byte	0
 672 00ec 00       		.byte	0
 673 00ed 11       		.uleb128 0x11
 674 00ee 898201   		.uleb128 0x4109
 675 00f1 00       		.byte	0
 676 00f2 11       		.uleb128 0x11
 677 00f3 01       		.uleb128 0x1
 678 00f4 31       		.uleb128 0x31
 679 00f5 13       		.uleb128 0x13
 680 00f6 00       		.byte	0
 681 00f7 00       		.byte	0
 682 00f8 12       		.uleb128 0x12
 683 00f9 34       		.uleb128 0x34
 684 00fa 00       		.byte	0
 685 00fb 03       		.uleb128 0x3
 686 00fc 0E       		.uleb128 0xe
 687 00fd 3A       		.uleb128 0x3a
 688 00fe 0B       		.uleb128 0xb
 689 00ff 3B       		.uleb128 0x3b
 690 0100 0B       		.uleb128 0xb
 691 0101 49       		.uleb128 0x49
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 26


 692 0102 13       		.uleb128 0x13
 693 0103 3F       		.uleb128 0x3f
 694 0104 19       		.uleb128 0x19
 695 0105 3C       		.uleb128 0x3c
 696 0106 19       		.uleb128 0x19
 697 0107 00       		.byte	0
 698 0108 00       		.byte	0
 699 0109 13       		.uleb128 0x13
 700 010a 2E       		.uleb128 0x2e
 701 010b 00       		.byte	0
 702 010c 3F       		.uleb128 0x3f
 703 010d 19       		.uleb128 0x19
 704 010e 3C       		.uleb128 0x3c
 705 010f 19       		.uleb128 0x19
 706 0110 6E       		.uleb128 0x6e
 707 0111 0E       		.uleb128 0xe
 708 0112 03       		.uleb128 0x3
 709 0113 0E       		.uleb128 0xe
 710 0114 3A       		.uleb128 0x3a
 711 0115 0B       		.uleb128 0xb
 712 0116 3B       		.uleb128 0x3b
 713 0117 0B       		.uleb128 0xb
 714 0118 00       		.byte	0
 715 0119 00       		.byte	0
 716 011a 00       		.byte	0
 717              		.section	.debug_aranges,"",%progbits
 718 0000 34000000 		.4byte	0x34
 719 0004 0200     		.2byte	0x2
 720 0006 00000000 		.4byte	.Ldebug_info0
 721 000a 04       		.byte	0x4
 722 000b 00       		.byte	0
 723 000c 0000     		.2byte	0
 724 000e 0000     		.2byte	0
 725 0010 00000000 		.4byte	.LFB0
 726 0014 30000000 		.4byte	.LFE0-.LFB0
 727 0018 00000000 		.4byte	.LFB1
 728 001c 34000000 		.4byte	.LFE1-.LFB1
 729 0020 00000000 		.4byte	.LFB2
 730 0024 02000000 		.4byte	.LFE2-.LFB2
 731 0028 00000000 		.4byte	.LFB3
 732 002c 08000000 		.4byte	.LFE3-.LFB3
 733 0030 00000000 		.4byte	0
 734 0034 00000000 		.4byte	0
 735              		.section	.debug_ranges,"",%progbits
 736              	.Ldebug_ranges0:
 737 0000 00000000 		.4byte	.LFB0
 738 0004 30000000 		.4byte	.LFE0
 739 0008 00000000 		.4byte	.LFB1
 740 000c 34000000 		.4byte	.LFE1
 741 0010 00000000 		.4byte	.LFB2
 742 0014 02000000 		.4byte	.LFE2
 743 0018 00000000 		.4byte	.LFB3
 744 001c 08000000 		.4byte	.LFE3
 745 0020 00000000 		.4byte	0
 746 0024 00000000 		.4byte	0
 747              		.section	.debug_line,"",%progbits
 748              	.Ldebug_line0:
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 27


 749 0000 C7000000 		.section	.debug_str,"MS",%progbits,1
 749      02006800 
 749      00000201 
 749      FB0E0D00 
 749      01010101 
 750              	.LASF30:
 751 0000 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 751      4152545F 
 751      7369655F 
 751      65705F73 
 751      74727563 
 752              	.LASF29:
 753 0016 65704372 		.ascii	"epCr0\000"
 753      3000
 754              	.LASF11:
 755 001c 666C6F61 		.ascii	"float\000"
 755      7400
 756              	.LASF38:
 757 0022 433A5C44 		.ascii	"C:\\Dan\\Eng Projects\\BP308\\TLAUX\\ARM Code\\TLAU"
 757      616E5C45 
 757      6E672050 
 757      726F6A65 
 757      6374735C 
 758 004f 585C544C 		.ascii	"X\\TLAUX_Bootloader.cydsn\000"
 758      4155585F 
 758      426F6F74 
 758      6C6F6164 
 758      65722E63 
 759              	.LASF3:
 760 0068 73686F72 		.ascii	"short unsigned int\000"
 760      7420756E 
 760      7369676E 
 760      65642069 
 760      6E7400
 761              	.LASF34:
 762 007b 55534255 		.ascii	"USBUART_EP_2_ISR\000"
 762      4152545F 
 762      45505F32 
 762      5F495352 
 762      00
 763              	.LASF35:
 764 008c 55534255 		.ascii	"USBUART_SOF_ISR\000"
 764      4152545F 
 764      534F465F 
 764      49535200 
 765              	.LASF41:
 766 009c 55534255 		.ascii	"USBUART_ReInitComponent\000"
 766      4152545F 
 766      5265496E 
 766      6974436F 
 766      6D706F6E 
 767              	.LASF27:
 768 00b4 6570436E 		.ascii	"epCnt0\000"
 768      743000
 769              	.LASF28:
 770 00bb 6570436E 		.ascii	"epCnt1\000"
 770      743100
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 28


 771              	.LASF20:
 772 00c2 6570546F 		.ascii	"epToggle\000"
 772      67676C65 
 772      00
 773              	.LASF40:
 774 00cb 55534255 		.ascii	"USBUART_EP\000"
 774      4152545F 
 774      455000
 775              	.LASF36:
 776 00d6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 776      43313120 
 776      352E342E 
 776      31203230 
 776      31363036 
 777 0109 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 777      20726576 
 777      6973696F 
 777      6E203233 
 777      37373135 
 778 013c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 778      66756E63 
 778      74696F6E 
 778      2D736563 
 778      74696F6E 
 779              	.LASF14:
 780 0164 72656738 		.ascii	"reg8\000"
 780      00
 781              	.LASF5:
 782 0169 6C6F6E67 		.ascii	"long unsigned int\000"
 782      20756E73 
 782      69676E65 
 782      6420696E 
 782      7400
 783              	.LASF21:
 784 017b 61646472 		.ascii	"addr\000"
 784      00
 785              	.LASF31:
 786 0180 73696545 		.ascii	"sieEp\000"
 786      7000
 787              	.LASF32:
 788 0186 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 788      4152545F 
 788      7369655F 
 788      6570735F 
 788      73747275 
 789              	.LASF1:
 790 019d 756E7369 		.ascii	"unsigned char\000"
 790      676E6564 
 790      20636861 
 790      7200
 791              	.LASF37:
 792 01ab 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART_episr.c\000"
 792      72617465 
 792      645F536F 
 792      75726365 
 792      5C50536F 
 793              	.LASF12:
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 29


 794 01d2 646F7562 		.ascii	"double\000"
 794      6C6500
 795              	.LASF17:
 796 01d9 61747472 		.ascii	"attrib\000"
 796      696200
 797              	.LASF23:
 798 01e0 62756666 		.ascii	"buffOffset\000"
 798      4F666673 
 798      657400
 799              	.LASF10:
 800 01eb 75696E74 		.ascii	"uint16\000"
 800      313600
 801              	.LASF18:
 802 01f2 61706945 		.ascii	"apiEpState\000"
 802      70537461 
 802      746500
 803              	.LASF8:
 804 01fd 756E7369 		.ascii	"unsigned int\000"
 804      676E6564 
 804      20696E74 
 804      00
 805              	.LASF7:
 806 020a 6C6F6E67 		.ascii	"long long unsigned int\000"
 806      206C6F6E 
 806      6720756E 
 806      7369676E 
 806      65642069 
 807              	.LASF19:
 808 0221 68774570 		.ascii	"hwEpState\000"
 808      53746174 
 808      6500
 809              	.LASF16:
 810 022b 73697A65 		.ascii	"sizetype\000"
 810      74797065 
 810      00
 811              	.LASF22:
 812 0234 65704D6F 		.ascii	"epMode\000"
 812      646500
 813              	.LASF6:
 814 023b 6C6F6E67 		.ascii	"long long int\000"
 814      206C6F6E 
 814      6720696E 
 814      7400
 815              	.LASF13:
 816 0249 63686172 		.ascii	"char\000"
 816      00
 817              	.LASF24:
 818 024e 62756666 		.ascii	"bufferSize\000"
 818      65725369 
 818      7A6500
 819              	.LASF2:
 820 0259 73686F72 		.ascii	"short int\000"
 820      7420696E 
 820      7400
 821              	.LASF39:
 822 0263 55534255 		.ascii	"USBUART_BUS_RESET_ISR\000"
 822      4152545F 
ARM GAS  C:\Users\DANSI7~1\AppData\Local\Temp\ccKtvQDx.s 			page 30


 822      4255535F 
 822      52455345 
 822      545F4953 
 823              	.LASF9:
 824 0279 75696E74 		.ascii	"uint8\000"
 824      3800
 825              	.LASF25:
 826 027f 696E7465 		.ascii	"interface\000"
 826      72666163 
 826      6500
 827              	.LASF4:
 828 0289 6C6F6E67 		.ascii	"long int\000"
 828      20696E74 
 828      00
 829              	.LASF26:
 830 0292 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 830      42554152 
 830      545F4550 
 830      5F43544C 
 830      5F424C4F 
 831              	.LASF15:
 832 02a9 6C6F6E67 		.ascii	"long double\000"
 832      20646F75 
 832      626C6500 
 833              	.LASF0:
 834 02b5 7369676E 		.ascii	"signed char\000"
 834      65642063 
 834      68617200 
 835              	.LASF33:
 836 02c1 55534255 		.ascii	"USBUART_EP_1_ISR\000"
 836      4152545F 
 836      45505F31 
 836      5F495352 
 836      00
 837              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
